From ad272c61475e8a71fb340a62f0020c5a9a8a3446 Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Fri, 9 Oct 2015 17:48:55 +0800
Subject: [PATCH 049/150] add session login

---
 app/controllers/application_controller.rb         | 24 ++++++++++++++++-------
 app/controllers/courses_controller.rb             |  1 +
 app/controllers/users/registrations_controller.rb | 10 +++++-----
 3 files changed, 23 insertions(+), 12 deletions(-)

diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index 0a74025..e8fda65 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -21,16 +21,26 @@ class ApplicationController < ActionController::Base
   end
   # raise TokenException if authentication failure occurs
   def check_token(token_str, user_id)
-    raise TokenException.new(REASON_TOKEN_INVALID) unless token_str && user_id
-
-    token = Token.find_by_token(token_str)
-    if token && token.user_id == user_id.to_i
-      if Time.now > token.valid_until
-        raise TokenException.new(REASON_TOKEN_TIMEOUT)
+    raise TokenException.new(REASON_TOKEN_INVALID) unless user_id
+
+    if token_str
+      token = Token.find_by_token(token_str)
+      if token && token.user_id == user_id.to_i
+        if Time.now > token.valid_until
+          raise TokenException.new(REASON_TOKEN_TIMEOUT)
+        end
+      else
+        raise TokenException.new(REASON_TOKEN_INVALID)
+      end
+    elsif current_user
+      if current_user.id != user_id.to_i
+        raise TokenException.new(REASON_TOKEN_INVALID)
       end
     else
       raise TokenException.new(REASON_TOKEN_INVALID)
     end
+
+
   end
 
   include ApplicationHelper::StatusRenderingHelpers
@@ -38,7 +48,7 @@ class ApplicationController < ActionController::Base
   protected
 
   def configure_permitted_parameters
-    devise_parameter_sanitizer.for(:sign_up) { |u| u.permit(:username, :email, :password, :password_confirmation, :remember_me) }
+    devise_parameter_sanitizer.for(:sign_up) { |u| u.permit(:phone, :name, :email, :password, :password_confirmation, :remember_me) }
     devise_parameter_sanitizer.for(:sign_in) { |u| u.permit(:login, :username, :email, :password, :remember_me) }
     devise_parameter_sanitizer.for(:account_update) { |u| u.permit(:username, :email, :password, :password_confirmation, :current_password) }
   end
diff --git a/app/controllers/courses_controller.rb b/app/controllers/courses_controller.rb
index f519e00..c5c945b 100644
--- a/app/controllers/courses_controller.rb
+++ b/app/controllers/courses_controller.rb
@@ -38,6 +38,7 @@ class CoursesController < ApplicationController
   end
 
   # POST /courses
+  # POST /courses.json
   def create
     @course = Course.create(params.require(:course).permit(:name))
     respond_to do |format|
diff --git a/app/controllers/users/registrations_controller.rb b/app/controllers/users/registrations_controller.rb
index ad35eea..49b3e77 100644
--- a/app/controllers/users/registrations_controller.rb
+++ b/app/controllers/users/registrations_controller.rb
@@ -1,6 +1,6 @@
 module Users
   class RegistrationsController < Devise::RegistrationsController
-  # before_filter :configure_sign_up_params, only: [:create]
+  before_filter :configure_sign_up_params, only: [:create]
   # before_filter :configure_account_update_params, only: [:update]
 
     # GET /resource/sign_up
@@ -9,9 +9,9 @@ module Users
     # end
 
     # # POST /resource
-    # def create
-    #    super
-    # end
+    def create
+        super
+    end
 
     # GET /resource/edit
     # def edit
@@ -41,7 +41,7 @@ module Users
 
     #If you have extra params to permit, append them to the sanitizer.
     def configure_sign_up_params
-      devise_parameter_sanitizer.for(:sign_up) << :phone << :email
+      devise_parameter_sanitizer.for(:sign_up) << :phone << :email << :name
     end
 
     # If you have extra params to permit, append them to the sanitizer.
-- 
1.9.1

