From 4a04c46fc2a0311b1154ba5ba861706ddcdc32aa Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Wed, 7 Oct 2015 15:47:20 +0800
Subject: [PATCH 033/150] add user test cases

---
 app/controllers/users/confirmations_controller.rb  | 28 ++++++++++
 .../users/omniauth_callbacks_controller.rb         | 28 ++++++++++
 app/controllers/users/passwords_controller.rb      | 32 ++++++++++++
 app/controllers/users/registrations_controller.rb  | 60 ++++++++++++++++++++++
 app/controllers/users/sessions_controller.rb       | 44 ++++++++++++++++
 app/controllers/users/unlocks_controller.rb        | 28 ++++++++++
 config/routes.rb                                   |  2 +-
 test/controllers/manage_controller_test.rb         |  7 ---
 test/controllers/test_controller_test.rb           |  7 ---
 test/controllers/users/sessions_controller_test.rb | 29 +++++++++++
 10 files changed, 250 insertions(+), 15 deletions(-)
 create mode 100644 app/controllers/users/confirmations_controller.rb
 create mode 100644 app/controllers/users/omniauth_callbacks_controller.rb
 create mode 100644 app/controllers/users/passwords_controller.rb
 create mode 100644 app/controllers/users/registrations_controller.rb
 create mode 100644 app/controllers/users/sessions_controller.rb
 create mode 100644 app/controllers/users/unlocks_controller.rb
 delete mode 100644 test/controllers/manage_controller_test.rb
 delete mode 100644 test/controllers/test_controller_test.rb
 create mode 100644 test/controllers/users/sessions_controller_test.rb

diff --git a/app/controllers/users/confirmations_controller.rb b/app/controllers/users/confirmations_controller.rb
new file mode 100644
index 0000000..1126e23
--- /dev/null
+++ b/app/controllers/users/confirmations_controller.rb
@@ -0,0 +1,28 @@
+class Users::ConfirmationsController < Devise::ConfirmationsController
+  # GET /resource/confirmation/new
+  # def new
+  #   super
+  # end
+
+  # POST /resource/confirmation
+  # def create
+  #   super
+  # end
+
+  # GET /resource/confirmation?confirmation_token=abcdef
+  # def show
+  #   super
+  # end
+
+  # protected
+
+  # The path used after resending confirmation instructions.
+  # def after_resending_confirmation_instructions_path_for(resource_name)
+  #   super(resource_name)
+  # end
+
+  # The path used after confirmation.
+  # def after_confirmation_path_for(resource_name, resource)
+  #   super(resource_name, resource)
+  # end
+end
diff --git a/app/controllers/users/omniauth_callbacks_controller.rb b/app/controllers/users/omniauth_callbacks_controller.rb
new file mode 100644
index 0000000..1907e5b
--- /dev/null
+++ b/app/controllers/users/omniauth_callbacks_controller.rb
@@ -0,0 +1,28 @@
+class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
+  # You should configure your model like this:
+  # devise :omniauthable, omniauth_providers: [:twitter]
+
+  # You should also create an action method in this controller like this:
+  # def twitter
+  # end
+
+  # More info at:
+  # https://github.com/plataformatec/devise#omniauth
+
+  # GET|POST /resource/auth/twitter
+  # def passthru
+  #   super
+  # end
+
+  # GET|POST /users/auth/twitter/callback
+  # def failure
+  #   super
+  # end
+
+  # protected
+
+  # The path used when OmniAuth fails
+  # def after_omniauth_failure_path_for(scope)
+  #   super(scope)
+  # end
+end
diff --git a/app/controllers/users/passwords_controller.rb b/app/controllers/users/passwords_controller.rb
new file mode 100644
index 0000000..53cc34e
--- /dev/null
+++ b/app/controllers/users/passwords_controller.rb
@@ -0,0 +1,32 @@
+class Users::PasswordsController < Devise::PasswordsController
+  # GET /resource/password/new
+  # def new
+  #   super
+  # end
+
+  # POST /resource/password
+  # def create
+  #   super
+  # end
+
+  # GET /resource/password/edit?reset_password_token=abcdef
+  # def edit
+  #   super
+  # end
+
+  # PUT /resource/password
+  # def update
+  #   super
+  # end
+
+  # protected
+
+  # def after_resetting_password_path_for(resource)
+  #   super(resource)
+  # end
+
+  # The path used after sending reset password instructions
+  # def after_sending_reset_password_instructions_path_for(resource_name)
+  #   super(resource_name)
+  # end
+end
diff --git a/app/controllers/users/registrations_controller.rb b/app/controllers/users/registrations_controller.rb
new file mode 100644
index 0000000..5ca7479
--- /dev/null
+++ b/app/controllers/users/registrations_controller.rb
@@ -0,0 +1,60 @@
+class Users::RegistrationsController < Devise::RegistrationsController
+# before_filter :configure_sign_up_params, only: [:create]
+# before_filter :configure_account_update_params, only: [:update]
+
+  # GET /resource/sign_up
+  # def new
+  #   super
+  # end
+
+  # POST /resource
+  # def create
+  #   super
+  # end
+
+  # GET /resource/edit
+  # def edit
+  #   super
+  # end
+
+  # PUT /resource
+  # def update
+  #   super
+  # end
+
+  # DELETE /resource
+  # def destroy
+  #   super
+  # end
+
+  # GET /resource/cancel
+  # Forces the session data which is usually expired after sign
+  # in to be expired now. This is useful if the user wants to
+  # cancel oauth signing in/up in the middle of the process,
+  # removing all OAuth session data.
+  # def cancel
+  #   super
+  # end
+
+  # protected
+
+  # If you have extra params to permit, append them to the sanitizer.
+  # def configure_sign_up_params
+  #   devise_parameter_sanitizer.for(:sign_up) << :attribute
+  # end
+
+  # If you have extra params to permit, append them to the sanitizer.
+  # def configure_account_update_params
+  #   devise_parameter_sanitizer.for(:account_update) << :attribute
+  # end
+
+  # The path used after sign up.
+  # def after_sign_up_path_for(resource)
+  #   super(resource)
+  # end
+
+  # The path used after sign up for inactive accounts.
+  # def after_inactive_sign_up_path_for(resource)
+  #   super(resource)
+  # end
+end
diff --git a/app/controllers/users/sessions_controller.rb b/app/controllers/users/sessions_controller.rb
new file mode 100644
index 0000000..6b51b39
--- /dev/null
+++ b/app/controllers/users/sessions_controller.rb
@@ -0,0 +1,44 @@
+class Users::SessionsController < Devise::SessionsController
+  # before_filter :configure_sign_in_params, only: [:create]
+  #
+  # #GET /resource/sign_in
+  # def new
+  #   super
+  # end
+  #
+  # #POST /resource/sign_in
+  def create
+    respond_to do |format|
+      format.html { super }
+      format.json do
+        self.resource = warden.authenticate!(auth_options)
+        sign_in(resource_name, resource)
+        render json: { status: STATUS_SUCCESS }
+      end
+    end
+
+  end
+
+  # #DELETE /resource/sign_out
+  def destroy
+    respond_to do |format|
+      format.html { super }
+      format.json do
+        begin
+          Devise.sign_out_all_scopes ? sign_out : sign_out(resource_name)
+          render json: { status: STATUS_SUCCESS }
+        rescue
+          render json: { status: STATUS_FAIL }
+        end
+      end
+    end
+  end
+
+  #
+  # protected
+  #
+  # #If you have extra params to permit, append them to the sanitizer.
+  # def configure_sign_in_params
+  #   devise_parameter_sanitizer.for(:sign_in) << :attribute
+  # end
+end
diff --git a/app/controllers/users/unlocks_controller.rb b/app/controllers/users/unlocks_controller.rb
new file mode 100644
index 0000000..8b9ef86
--- /dev/null
+++ b/app/controllers/users/unlocks_controller.rb
@@ -0,0 +1,28 @@
+class Users::UnlocksController < Devise::UnlocksController
+  # GET /resource/unlock/new
+  # def new
+  #   super
+  # end
+
+  # POST /resource/unlock
+  # def create
+  #   super
+  # end
+
+  # GET /resource/unlock?unlock_token=abcdef
+  # def show
+  #   super
+  # end
+
+  # protected
+
+  # The path used after sending unlock password instructions
+  # def after_sending_unlock_instructions_path_for(resource)
+  #   super(resource)
+  # end
+
+  # The path used after unlocking the resource
+  # def after_unlock_path_for(resource)
+  #   super(resource)
+  # end
+end
diff --git a/config/routes.rb b/config/routes.rb
index 0838356..c1a0c88 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -1,6 +1,6 @@
 Rails.application.routes.draw do
 
-  devise_for :users
+  devise_for :users, controllers: { sessions: 'users/sessions' }
 
   resources :courses do
     resources :students
diff --git a/test/controllers/manage_controller_test.rb b/test/controllers/manage_controller_test.rb
deleted file mode 100644
index 20a2fc4..0000000
--- a/test/controllers/manage_controller_test.rb
+++ /dev/null
@@ -1,7 +0,0 @@
-require 'test_helper'
-
-class ManageControllerTest < ActionController::TestCase
-  # test "the truth" do
-  #   assert true
-  # end
-end
diff --git a/test/controllers/test_controller_test.rb b/test/controllers/test_controller_test.rb
deleted file mode 100644
index 35c36f8..0000000
--- a/test/controllers/test_controller_test.rb
+++ /dev/null
@@ -1,7 +0,0 @@
-require 'test_helper'
-
-class TestControllerTest < ActionController::TestCase
-  # test "the truth" do
-  #   assert true
-  # end
-end
diff --git a/test/controllers/users/sessions_controller_test.rb b/test/controllers/users/sessions_controller_test.rb
new file mode 100644
index 0000000..24f06a0
--- /dev/null
+++ b/test/controllers/users/sessions_controller_test.rb
@@ -0,0 +1,29 @@
+require 'test_helper'
+
+class Users::SessionsControllerTest < ActionController::TestCase
+  include Devise::TestHelpers
+
+  def setup
+    @request.env["devise.mapping"] = Devise.mappings[:user]
+  end
+
+  test 'should sign in with phone' do
+    post :create, { format: :json, user: { login: '123', password: '123' } }
+    assert_equal assigns[:user].phone, '123'
+    json = JSON.parse(@response.body)
+    assert_equal json['status'], STATUS_SUCCESS
+  end
+
+  test 'should sign in with email' do
+    post :create, { user: { login: 'alex@b.c', password: '123' } }
+    assert_equal assigns[:user].email, 'alex@b.c'
+  end
+
+  test 'should sign out and returns json' do
+    sign_in User.first
+    delete :destroy, { format: :json }
+    json = JSON.parse(@response.body)
+    assert_equal json['status'], STATUS_SUCCESS
+  end
+
+end
\ No newline at end of file
-- 
1.9.1

