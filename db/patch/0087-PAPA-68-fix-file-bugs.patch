From 18e5ae6636f75d916370034567233050f6a9e2bb Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Fri, 16 Oct 2015 14:30:00 +0800
Subject: [PATCH 087/150] PAPA-68 fix file bugs

---
 Gemfile                                            |  8 ++---
 Gemfile.lock                                       | 10 +++++-
 README.md                                          | 17 ++++++----
 app/controllers/files_controller.rb                |  8 +++--
 app/views/students/index.json.jbuilder             |  5 +++
 db/migrate/20150926114146_devise_create_users.rb   |  2 +-
 db/schema.rb                                       |  2 +-
 test/controllers/assistants_controller_test.rb     |  4 +--
 test/controllers/courses_controller_test.rb        | 36 +++++++++++-----------
 test/controllers/files_controller_test.rb          | 19 +++++-------
 .../controllers/lesson_comments_controller_test.rb |  7 ++---
 test/controllers/lessons_controller_test.rb        | 10 +++---
 test/controllers/messages_controller_test.rb       |  7 ++---
 test/controllers/semesters_controller_test.rb      | 18 +++++------
 .../student_comments_controller_test.rb            |  7 ++---
 test/controllers/students_controller_test.rb       | 12 ++++----
 test/controllers/teachers_controller_test.rb       | 12 ++++----
 test/controllers/users/sessions_controller_test.rb |  6 ++--
 test/test_helper.rb                                | 10 ++++++
 19 files changed, 112 insertions(+), 88 deletions(-)

diff --git a/Gemfile b/Gemfile
index 4e44363..3931257 100644
--- a/Gemfile
+++ b/Gemfile
@@ -1,4 +1,4 @@
-source 'http://ruby.taobao.org'
+source 'https://ruby.taobao.org'
 
 
 # Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
@@ -41,14 +41,14 @@ gem 'rails-i18n'
 # Use Capistrano for deployment
 # gem 'capistrano-rails', group: :development
 
-group :development, :test do
-  # Call 'byebug' anywhere in the code to stop execution and get a debugger console
-  #gem 'byebug'
+group :test do
+  gem 'byebug'
 end
 
 group :development do
   # Access an IRB console on exception pages or by using <%= console %> in views
   gem 'web-console', '~> 2.0'
+  gem 'better_errors'
 
   # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
   gem 'spring'
diff --git a/Gemfile.lock b/Gemfile.lock
index a885b40..8b1e528 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -1,5 +1,5 @@
 GEM
-  remote: http://ruby.taobao.org/
+  remote: https://ruby.taobao.org/
   specs:
     actionmailer (4.2.4)
       actionpack (= 4.2.4)
@@ -41,12 +41,18 @@ GEM
       execjs
       json
     bcrypt (3.1.10)
+    better_errors (2.1.1)
+      coderay (>= 1.0.0)
+      erubis (>= 2.6.6)
+      rack (>= 0.9.0)
     binding_of_caller (0.7.2)
       debug_inspector (>= 0.0.1)
     bootstrap-sass (3.3.5.1)
       autoprefixer-rails (>= 5.0.0.1)
       sass (>= 3.3.0)
     builder (3.2.2)
+    byebug (6.0.2)
+    coderay (1.1.0)
     coffee-rails (4.1.0)
       coffee-script (>= 2.2.0)
       railties (>= 4.0.0, < 5.0)
@@ -167,7 +173,9 @@ PLATFORMS
   ruby
 
 DEPENDENCIES
+  better_errors
   bootstrap-sass (~> 3.3.5)
+  byebug
   coffee-rails (~> 4.1.0)
   devise
   devise-encryptable
diff --git a/README.md b/README.md
index ef753b7..97b022d 100644
--- a/README.md
+++ b/README.md
@@ -223,23 +223,29 @@ Http Parameters/JSON对象格式
             student_number=int,
             phone=string,
             email=string,
-            class=string,
+            #!class=string,
+            ?class_name=string,
             department=string,
-            avator_path=string
+            #!avator_path=string
+            ?avator_id=int
              
     assistant id=int,
             name=string,
-            phone,
+            phone=string,
             email=string,
-            avator_path=string
+            #!avator_path=string
+            ?avator_id=int
             
     lesson_comment id=int        // 学生对课程的评价
             content=string
             score=string
+            ?creator_name=string
+            ?created_at=datetime
             
     student_comment id=int      // 助教对学生的评价
             content=string
             score=string(0-10)
+            ?creator_name=string
             
     message id=int
             type=string(homework|notification),
@@ -257,12 +263,11 @@ Http Parameters/JSON对象格式
 REASON_TOKEN_INVALID = 'token_invalid'      // token没有指定或者无效，应该检查url参数
 REASON_TOKEN_TIMEOUT = 'token_timeout'      // token过时了，应该重新登陆
 REASON_TOKEN_NOT_MATCH = 'token_not_match'  // id和token不匹配或者id不存在
+REASON_INVALID_OPERATION = 'invalid_operation' // 访问了不存在的url
 
 ##TODO
-1.  Unit Test
 1.  Authentication Control.  
     
-    
 ##Design
 
 1. Database Schema
diff --git a/app/controllers/files_controller.rb b/app/controllers/files_controller.rb
index 131736c..e00a84b 100644
--- a/app/controllers/files_controller.rb
+++ b/app/controllers/files_controller.rb
@@ -1,4 +1,5 @@
 class FilesController < ApplicationController
+
   # GET /students/1/lessons/1/files.json
   # GET /assistants/1/lessons/1/files.json
   # GET /lessons/1/files.json
@@ -26,18 +27,21 @@ class FilesController < ApplicationController
   # POST /files.json
   def create
     temp = params[:file][:file]
-    loc = Rails.root.join('public', 'uploads', temp.original_filename)
+    rel_loc = File.join('uploads', temp.original_filename)
+    loc = Rails.root.join('public', rel_loc)
     File.open(loc, 'wb') do |file|
       file.write(temp.read)
     end
 
-    if @file = FileResource.create(file_type: params[:file][:type], name: temp.original_filename, path: loc)
+    @file = FileResource.create(file_type: params[:file][:type], name: temp.original_filename, path: rel_loc)
+    if @file
       json_successful
     else
       json_failed
     end
   end
 
+  # DELETE /files/1.json
   def destroy
     json_failed(REASON_NOT_IMPLEMENTED)
   end
diff --git a/app/views/students/index.json.jbuilder b/app/views/students/index.json.jbuilder
index 2bd04b6..b02d903 100644
--- a/app/views/students/index.json.jbuilder
+++ b/app/views/students/index.json.jbuilder
@@ -4,6 +4,11 @@ json.students do
     json.extract! student, :id
     json.extract! student, :name
     json.extract! student, :phone
+    json.extract! student, :email
+    json.extract! student, :student_number
+    json.extract! student, :department
+    json.extract! student, :class_name
+    json.extract! student, :avator_id
   end
 end
 
diff --git a/db/migrate/20150926114146_devise_create_users.rb b/db/migrate/20150926114146_devise_create_users.rb
index 0261d35..9fe5377 100644
--- a/db/migrate/20150926114146_devise_create_users.rb
+++ b/db/migrate/20150926114146_devise_create_users.rb
@@ -24,9 +24,9 @@ class DeviseCreateUsers < ActiveRecord::Migration
       ## Additional
       t.boolean  :is_teacher, default: true
       t.integer  :avator_id
+      t.string   :student_number
       t.string   :class_name
       t.string   :department
-      t.integer  :student_number
 
       t.timestamps null: false
     end
diff --git a/db/schema.rb b/db/schema.rb
index 3fa3f00..85dbec6 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -146,9 +146,9 @@ ActiveRecord::Schema.define(version: 20151008120334) do
     t.string   "last_sign_in_ip"
     t.boolean  "is_teacher",             default: true
     t.integer  "avator_id"
+    t.string   "student_number"
     t.string   "class_name"
     t.string   "department"
-    t.integer  "student_number"
     t.datetime "created_at",                            null: false
     t.datetime "updated_at",                            null: false
   end
diff --git a/test/controllers/assistants_controller_test.rb b/test/controllers/assistants_controller_test.rb
index f94ed54..230202f 100644
--- a/test/controllers/assistants_controller_test.rb
+++ b/test/controllers/assistants_controller_test.rb
@@ -3,8 +3,8 @@ require 'test_helper'
 class AssistantsControllerTest < ActionController::TestCase
   test 'api should get assistants by course' do
     get :index, { format: :json, course_id: Course.find_by_name('Operation System').id }
-    json = JSON.parse(@response.body)
-    assert_equal json['status'], STATUS_SUCCESS
+    
+    assert_json_success
     assert json['assistants'].is_a? Array
   end
 end
diff --git a/test/controllers/courses_controller_test.rb b/test/controllers/courses_controller_test.rb
index a0c021e..708e9f8 100644
--- a/test/controllers/courses_controller_test.rb
+++ b/test/controllers/courses_controller_test.rb
@@ -7,7 +7,7 @@ class CoursesControllerTest < ActionController::TestCase
     semester = Semester.first
 
     get :index, format: :json, semester_id: semester.id
-    json = JSON.parse(@response.body)
+
     assert_equal STATUS_SUCCESS, json['status']
     assert json['courses'].count > 0
   end
@@ -15,7 +15,7 @@ class CoursesControllerTest < ActionController::TestCase
   # GET /semester/1/courses.json
   test 'should not get courses by bad semester' do
     get :index, format: :json, semester_id: -1
-    json = JSON.parse(response.body)
+
     assert_equal STATUS_FAIL, json['status']
   end
 
@@ -25,7 +25,7 @@ class CoursesControllerTest < ActionController::TestCase
     token_str = u.create_token.token
 
     get :index, format: :json, teacher_id: u.id, token: token_str
-    json = JSON.parse(@response.body)
+
     assert_equal STATUS_SUCCESS, json['status']
     assert json['courses'].count > 0
   end
@@ -36,7 +36,7 @@ class CoursesControllerTest < ActionController::TestCase
     token_str = u.create_token.token
 
     get :index, format: :json, assistant_id: u.id, token: token_str
-    json = JSON.parse(@response.body)
+
     assert_equal json['status'], STATUS_SUCCESS
     assert_not_nil json['courses']
   end
@@ -47,7 +47,7 @@ class CoursesControllerTest < ActionController::TestCase
     token_str = u.create_token.token
 
     get :index, format: :json, student_id: u.id, token: token_str
-    json = JSON.parse(@response.body)
+
     assert_equal json['status'], STATUS_SUCCESS
     assert_not_nil json['courses']
   end
@@ -57,7 +57,7 @@ class CoursesControllerTest < ActionController::TestCase
     u = User.first
 
     get :index, format: :json, student_id: u.id, token: 'invalid token'
-    json = JSON.parse(@response.body)
+
     assert_equal STATUS_FAIL, json['status']
     assert_equal json['reason'], REASON_TOKEN_INVALID
   end
@@ -69,7 +69,7 @@ class CoursesControllerTest < ActionController::TestCase
     token = Token.create(user_id: u.id, token: rand(TOKEN_MAX_RAND).to_s, valid_until: Time.now - 200)
 
     get :index, format: :json, student_id: u.id, token: token.token
-    json = JSON.parse(@response.body)
+
     assert_equal json['status'], STATUS_FAIL
     assert_equal json['reason'], REASON_TOKEN_TIMEOUT
   end
@@ -77,7 +77,7 @@ class CoursesControllerTest < ActionController::TestCase
   # GET /courses/1.json
   test 'api should get course by id' do
     get :show, format: :json, id: Course.first.id
-    json = JSON.parse(@response.body)
+
     assert_equal json['status'], STATUS_SUCCESS
     assert_not_nil json['course']['name']
   end
@@ -85,7 +85,7 @@ class CoursesControllerTest < ActionController::TestCase
   # GET /courses/-1.json
   test 'api should not get course by invalid id' do
     get :show, format: :json, id: -1
-    json = JSON.parse(@response.body)
+
     assert_equal json['status'], STATUS_FAIL
   end
 
@@ -98,7 +98,7 @@ class CoursesControllerTest < ActionController::TestCase
 
     put :update, format: :json, id: course.id, token: token_str, course: { name: 'fuck' }
     assert_equal 'fuck', Course.find(course_id).name
-    json = JSON.parse(response.body)
+
     assert_equal STATUS_SUCCESS, json['status']
   end
 
@@ -110,7 +110,7 @@ class CoursesControllerTest < ActionController::TestCase
     assert_difference 'TeachingCourse.count' do
       post :create, teacher_id: u.id, token: token_str, course: { name: 'test course', description: 'new' }
     end
-    json = JSON.parse(response.body)
+
     assert_equal STATUS_SUCCESS, json['status']
   end
 
@@ -123,7 +123,7 @@ class CoursesControllerTest < ActionController::TestCase
     assert_difference 'Participation.count' do
       post :create, assistant_id: u.id, id: course.id, token: token_str
     end
-    json = JSON.parse(response.body)
+
     assert_equal STATUS_SUCCESS, json['status']
   end
 
@@ -136,7 +136,7 @@ class CoursesControllerTest < ActionController::TestCase
     assert_difference 'Participation.count' do
       post :create, student_id: u.id, id: course.id, token: token_str
     end
-    json = JSON.parse(response.body)
+
     assert_equal STATUS_SUCCESS, json['status']
   end
 
@@ -152,7 +152,7 @@ class CoursesControllerTest < ActionController::TestCase
     assert_difference 'Course.count', -1 do
       delete :destroy, format: :json, id: course.id, token: token_str
     end
-    json = JSON.parse(response.body)
+
     assert_equal STATUS_SUCCESS, json['status']
   end
 
@@ -167,8 +167,8 @@ class CoursesControllerTest < ActionController::TestCase
     assert_difference 'Participation.count', -1 do
       delete :destroy, foramt: :json, student_id: user.id, id: course.id, token: token_str
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
   # DELETE /assistants/1/courses/1.json
@@ -183,7 +183,7 @@ class CoursesControllerTest < ActionController::TestCase
     assert_difference 'Participation.count', -1 do
       delete :destroy, foramt: :json, assistant_id: user.id, id: course.id, token: token_str
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 end
diff --git a/test/controllers/files_controller_test.rb b/test/controllers/files_controller_test.rb
index 653e816..bbf6d6f 100644
--- a/test/controllers/files_controller_test.rb
+++ b/test/controllers/files_controller_test.rb
@@ -8,9 +8,8 @@ class FilesControllerTest < ActionController::TestCase
     lesson = Lesson.find_by_name('exp1')
 
     get :index, format: :json, student_id: student.id, lesson_id: lesson.id
-    json = JSON.parse(response.body)
 
-    assert_equal STATUS_SUCCESS, json['status']
+    assert_json_success
     assert_not_nil json['files']
     assert json['files'].count > 0
   end
@@ -21,9 +20,8 @@ class FilesControllerTest < ActionController::TestCase
     lesson = Lesson.find_by_name('exp1')
 
     get :index, format: :json, assistant_id: assistant.id, lesson_id: lesson.id
-    json = JSON.parse(response.body)
 
-    assert_equal STATUS_SUCCESS, json['status']
+    assert_json_success
     assert_not_nil json['files']
     assert json['files'].count > 0
   end
@@ -33,9 +31,8 @@ class FilesControllerTest < ActionController::TestCase
     lesson = Lesson.find_by_name('exp1')
 
     get :index, format: :json, lesson_id: lesson.id
-    json = JSON.parse(response.body)
 
-    assert_equal STATUS_SUCCESS, json['status']
+    assert_json_success
     assert_not_nil json['files']
     assert json['files'].count > 0
   end
@@ -45,9 +42,8 @@ class FilesControllerTest < ActionController::TestCase
     course = Course.find_by_name('Operation System')
 
     get :index, format: :json, course_id: course.id
-    json = JSON.parse(response.body)
 
-    assert_equal STATUS_SUCCESS, json['status']
+    assert_json_success
     assert_not_nil json['files']
     assert json['files'].count > 0
   end
@@ -56,9 +52,8 @@ class FilesControllerTest < ActionController::TestCase
   test 'should get file by id' do
     file = FileResource.first
     get :show, format: :json, id: file.id
-    json = JSON.parse(response.body)
 
-    assert_equal STATUS_SUCCESS, json['status']
+    assert_json_success
     assert_not_nil json['file']
   end
 
@@ -69,8 +64,8 @@ class FilesControllerTest < ActionController::TestCase
     assert_difference 'FileResource.count' do
       post :create, format: :json, file: {file: fixture_file, type: 'picture'}
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
     assert_not_nil assigns(:file).path
   end
 
diff --git a/test/controllers/lesson_comments_controller_test.rb b/test/controllers/lesson_comments_controller_test.rb
index a902b6f..5b68dd6 100644
--- a/test/controllers/lesson_comments_controller_test.rb
+++ b/test/controllers/lesson_comments_controller_test.rb
@@ -5,8 +5,8 @@ class LessonCommentsControllerTest < ActionController::TestCase
 
   test 'should get comments by lesson id' do
     get :index, format: :json, lesson_id: Lesson.first.id
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
     assert_not_nil json['lesson_comments']
     assert json['lesson_comments'].count > 0
   end
@@ -22,8 +22,7 @@ class LessonCommentsControllerTest < ActionController::TestCase
                   }
     end
 
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+    assert_json_success
   end
 
 end
diff --git a/test/controllers/lessons_controller_test.rb b/test/controllers/lessons_controller_test.rb
index fd541ad..eacaf46 100644
--- a/test/controllers/lessons_controller_test.rb
+++ b/test/controllers/lessons_controller_test.rb
@@ -9,7 +9,7 @@ class LessonsControllerTest < ActionController::TestCase
   # GET /course/1/lessons.json
   test 'api should get all lessons by course' do
     get :index, format: :json, course_id: @course.id
-    json = JSON.parse(@response.body)
+
     assert_equal json['status'], STATUS_SUCCESS
     assert json['lessons'].count > 0
   end
@@ -17,7 +17,7 @@ class LessonsControllerTest < ActionController::TestCase
   # GET /lessons/1.json
   test 'api should get lesson by id' do
     get :show, format: :json, id: Lesson.first.id
-    json = JSON.parse(@response.body)
+
     assert_equal json['status'], STATUS_SUCCESS
     assert_not_nil json['lesson']['name']
   end
@@ -32,7 +32,7 @@ class LessonsControllerTest < ActionController::TestCase
                       location: '"name": "here"'
                   }
     end
-    assert_equal JSON.parse(@response.body)['status'], STATUS_SUCCESS
+    assert_json_success
   end
 
   # POST /courses/1/lessons.json
@@ -48,8 +48,8 @@ class LessonsControllerTest < ActionController::TestCase
     assert_difference 'Lesson.count', -1 do
       delete :destroy, format: :json, id: Lesson.first.id
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
 end
diff --git a/test/controllers/messages_controller_test.rb b/test/controllers/messages_controller_test.rb
index 1cbc4d0..969bcbb 100644
--- a/test/controllers/messages_controller_test.rb
+++ b/test/controllers/messages_controller_test.rb
@@ -6,8 +6,8 @@ class MessagesControllerTest < ActionController::TestCase
   test 'should get message by students' do
     student = User.find_by_name('alex')
     get :index, format: :json, student_id: student.id
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
     assert_not_nil json['messages']
     assert json['messages'].count > 0
   end
@@ -26,8 +26,7 @@ class MessagesControllerTest < ActionController::TestCase
                   }
     end
 
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+    assert_json_success
   end
 
 end
diff --git a/test/controllers/semesters_controller_test.rb b/test/controllers/semesters_controller_test.rb
index a07c64f..8017cf2 100644
--- a/test/controllers/semesters_controller_test.rb
+++ b/test/controllers/semesters_controller_test.rb
@@ -5,7 +5,7 @@ class SemestersControllerTest < ActionController::TestCase
   # GET /semesters.json
   test 'should get all semesters' do
     get :index, format: :json
-    json = JSON.parse(response.body)
+
     assert_equal STATUS_SUCCESS, json['status']
     assert_not_nil json['semesters']
     assert json['semesters'].count > 0
@@ -16,16 +16,16 @@ class SemestersControllerTest < ActionController::TestCase
     assert_difference 'Semester.count' do
       post :create, format: :json, semester: { name: 'a good semester' }
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
   # PUT /semesters/1.json
   test 'should update semester' do
     put :update, format: :json, id: Semester.first.id, semester: { name: 'update semester' }
     assert_equal 'update semester', Semester.first.name
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
   # DELETE /semesters/1.json
@@ -33,15 +33,15 @@ class SemestersControllerTest < ActionController::TestCase
     assert_difference 'Semester.count', -1 do
       delete :destroy, format: :json, id: Semester.first.id
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
   # GET /semesters/default.json
   test 'should get default semester' do
     get :default, format: :json
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
     assert_not_nil json['semester']
   end
 
diff --git a/test/controllers/student_comments_controller_test.rb b/test/controllers/student_comments_controller_test.rb
index abbb80e..4e58bc9 100644
--- a/test/controllers/student_comments_controller_test.rb
+++ b/test/controllers/student_comments_controller_test.rb
@@ -9,8 +9,8 @@ class StudentCommentsControllerTest < ActionController::TestCase
     lesson = Lesson.find_by_name('exp1')
 
     get :index, format: :json, student_id: student.id, lesson_id: lesson.id
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
     assert_not_nil json['student_comments']
     assert json['student_comments'].count
   end
@@ -28,8 +28,7 @@ class StudentCommentsControllerTest < ActionController::TestCase
                   }
     end
 
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+    assert_json_success
   end
 
 end
diff --git a/test/controllers/students_controller_test.rb b/test/controllers/students_controller_test.rb
index dc2d0d8..1707937 100644
--- a/test/controllers/students_controller_test.rb
+++ b/test/controllers/students_controller_test.rb
@@ -3,8 +3,8 @@ require 'test_helper'
 class StudentsControllerTest < ActionController::TestCase
   test 'api should get students by course' do
     get :index, { format: :json, course_id: Course.find_by_name('Operation System').id }
-    json = JSON.parse(response.body)
-    assert_equal json['status'], STATUS_SUCCESS
+
+    assert_json_success
     assert json['students'].is_a? Array
   end
 
@@ -15,8 +15,8 @@ class StudentsControllerTest < ActionController::TestCase
     assert_difference 'Participation.count' do
       post :create, format: :json, course_id: course.id, id: student.id
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
   test 'api should remove student from course' do
@@ -26,8 +26,8 @@ class StudentsControllerTest < ActionController::TestCase
     assert_difference 'Participation.count', -1 do
       delete :destroy, format: :json, course_id: course.id, id: student.id
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
 end
diff --git a/test/controllers/teachers_controller_test.rb b/test/controllers/teachers_controller_test.rb
index b419799..3381f02 100644
--- a/test/controllers/teachers_controller_test.rb
+++ b/test/controllers/teachers_controller_test.rb
@@ -3,8 +3,8 @@ require 'test_helper'
 class TeachersControllerTest < ActionController::TestCase
   test 'should get teachers by course' do
     get :index, format: :json, course_id: Course.find_by_name('Operation System').id
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
     assert_not_nil json['teachers']
     assert json['teachers'].count > 0
   end
@@ -18,8 +18,8 @@ class TeachersControllerTest < ActionController::TestCase
     assert_difference 'course.teachers.count' do
       post :create, id: teacher.id, course_id: course.id, token: token_str
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
   test 'should remove teacher from course' do
@@ -28,8 +28,8 @@ class TeachersControllerTest < ActionController::TestCase
     assert_difference 'course.teachers.count', -1 do
       delete :destroy, format: :json, id: teacher.id, course_id: course.id
     end
-    json = JSON.parse(response.body)
-    assert_equal STATUS_SUCCESS, json['status']
+
+    assert_json_success
   end
 
 end
diff --git a/test/controllers/users/sessions_controller_test.rb b/test/controllers/users/sessions_controller_test.rb
index 709dd05..76a10c1 100644
--- a/test/controllers/users/sessions_controller_test.rb
+++ b/test/controllers/users/sessions_controller_test.rb
@@ -11,7 +11,7 @@ module Users
     test 'should sign in with phone' do
       post :create, { format: :json, user: { login: '123', password: '123' } }
       assert_equal assigns[:user].phone, '123'
-      json = JSON.parse(@response.body)
+
       assert_equal json['status'], STATUS_SUCCESS
     end
 
@@ -22,13 +22,13 @@ module Users
 
     test 'should sign in and sign out with token' do
       post :create, { format: :json, user: { login: 'alex@b.c', password: '123' } }
-      json = JSON.parse(@response.body)
+
       assert_equal json['status'], STATUS_SUCCESS
       assert_not_nil json['token']
       assert_not_nil json['id']
 
       post :destroy, { format: :json, token: json['token'] }
-      json = JSON.parse(@response.body)
+
       assert_equal json['status'], STATUS_SUCCESS
     end
 
diff --git a/test/test_helper.rb b/test/test_helper.rb
index 92e39b2..36d023a 100644
--- a/test/test_helper.rb
+++ b/test/test_helper.rb
@@ -6,5 +6,15 @@ class ActiveSupport::TestCase
   # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
   fixtures :all
 
+  def json
+    @json = JSON.parse(response.body) unless @json
+    @json
+  end
+
+  def assert_json_success
+    assert_equal STATUS_SUCCESS, json['status']
+  end
+
+
   # Add more helper methods to be used by all tests here...
 end
-- 
1.9.1

