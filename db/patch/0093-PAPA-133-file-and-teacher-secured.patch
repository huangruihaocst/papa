From 38d2e8734a5e88689dfdeb80e4fdf056e9040ee3 Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Sat, 17 Oct 2015 15:06:41 +0800
Subject: [PATCH 093/150] PAPA-133 file and teacher secured

---
 README.md                                        |  6 +-
 app/controllers/application_controller.rb        | 26 +++++++-
 app/controllers/files_controller.rb              | 32 ++++++---
 app/controllers/teachers_controller.rb           | 37 +++++++----
 app/helpers/application_helper.rb                | 12 ++--
 app/models/file_resource.rb                      |  3 +-
 app/views/files/show.json.jbuilder               |  1 +
 config/initializers/constants.rb                 |  4 +-
 config/routes.rb                                 |  6 +-
 db/migrate/20150926114146_devise_create_users.rb |  3 +-
 db/schema.rb                                     | 13 ++--
 lib/tasks/wc.rake                                | 21 ++++++
 test/controllers/files_controller_test.rb        | 22 +++++++
 test/controllers/teachers_controller_test.rb     | 82 +++++++++++++++++++++++-
 test/fixtures/file_resources.yml                 |  1 +
 test/fixtures/users.yml                          |  1 +
 tools/wc                                         | 49 ++++++++++++++
 17 files changed, 272 insertions(+), 47 deletions(-)
 create mode 100644 lib/tasks/wc.rake
 create mode 100755 tools/wc

diff --git a/README.md b/README.md
index ea04255..145c507 100644
--- a/README.md
+++ b/README.md
@@ -115,9 +115,9 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     # 与课程有关系的资源
     GET    /courses/1/teachers.json  获取该门课所有老师   "teachers": { id, ... }                        Student
     #!POST   /courses/1/teachers.json  添加老师             teacher parameters                            Teacher
-    ?POST   /courses/1/teachers/1.json 把老师添加到课程
+    ?POST   /courses/1/teachers/1.json 把老师添加到课程                                                 Admin
     #!PUT    /courses/1/teachers.json  修改老师             teacher parameters                            Teacher
-    DELETE /courses/1/teachers/1.json 删除老师            id                                            Teacher
+    DELETE /courses/1/teachers/1.json 从课程中删除老师       id                                           Admin
     
     GET    /courses/1/students.json  获得id=1课的所有学生 "students": [student, ...]                    Assistant
     #!POST   /courses/1/students.json  添加学生              
@@ -148,7 +148,7 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     
     # namespace students
     # 学生相关
-    #GET    /students.json            获得（默认课程的）所有学生     "students": [{"id":1, "name": "xx"..] 
+    #!GET    /students.json            获得（默认课程的）所有学生     "students": [{"id":1, "name": "xx"..] 
     GET    /students/1.json          获得id=1学生的信息   "student": [{"id":1, "name": "xx"}, ..]       Student
     #!POST   /students.json            添加一个学生         student parameters                            Teacher
     #!PUT    /students/1.json          修改学生             student parameters                            Student
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index 984b0fd..c91045f 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -49,12 +49,34 @@ class ApplicationController < ActionController::Base
   def check_login
     if params[:token]
       token = Token.find_by_token(params[:token])
+      if token && token.user.is_a?(User) && token.token_valid?
+        token.user
+      else
+        raise TokenException.new(REASON_TOKEN_INVALID)
+      end
+    else
+      if current_user
+        current_user
+      else
+        raise TokenException.new(REASON_TOKEN_INVALID)
+      end
+    end
+  end
 
-      unless token.user.is_a?(User) && token && token.token_valid?
+  def check_admin
+    if params[:token]
+      token = Token.find_by_token(params[:token])
+      if token && token.user.is_a?(User) && token.token_valid? && token.user.is_admin?
+        token.user
+      else
         raise TokenException.new(REASON_TOKEN_INVALID)
       end
     else
-      raise TokenException.new(REASON_TOKEN_INVALID) unless current_user
+      if current_user && current_user.is_admin?
+        current_user
+      else
+        raise TokenException.new(REASON_TOKEN_INVALID)
+      end
     end
   end
 
diff --git a/app/controllers/files_controller.rb b/app/controllers/files_controller.rb
index 13dc4e4..89e974b 100644
--- a/app/controllers/files_controller.rb
+++ b/app/controllers/files_controller.rb
@@ -7,8 +7,10 @@ class FilesController < ApplicationController
   def index
     case
       when params[:student_id] && params[:lesson_id]
+        check_token(params[:student_id], params[:token])
         @files = StudentFile.where(student_id: params[:student_id]).where(lesson_id: params[:lesson_id])
       when params[:assistant_id] && params[:lesson_id]
+        check_token(params[:assistant_id], params[:token])
         @files = AssistantFile.where(assistant_id: params[:assistant_id]).where(lesson_id: params[:lesson_id])
       when params[:lesson_id]
         @files = Lesson.find(params[:lesson_id]).attached_files
@@ -26,10 +28,9 @@ class FilesController < ApplicationController
 
   # POST /files.json
   def create
-    check_login
+    user = check_login
 
     p = params[:file]
-    puts p.class
     unless p && p.is_a?(ActionController::Parameters) && p[:file] && p[:type]
       json_failed_invalid_fields([:file, :type])
       return
@@ -47,19 +48,34 @@ class FilesController < ApplicationController
       file.write(temp_file.read)
     end
 
-    @file = FileResource.create(file_type: p[:type], name: temp_file.original_filename, path: File.join('', rel_loc))
+    @file = FileResource.create(file_type: p[:type], name: temp_file.original_filename, path: File.join('', rel_loc), creator_id: user.id)
     if @file.valid?
-        json_successful
+        json_successful do |json|
+          json['id'] = @file.id
+        end
     else
-      json_failed_invalid_fields(@file.errors.keys,
-                                  file_type: :type, path: '', name: '')
+      json_failed_invalid_fields(@file.errors.keys, file_type: :type, path: '', name: '')
     end
   end
 
   # DELETE /files/1.json
   def destroy
-    authenticate_user!
-    json_failed(REASON_NOT_IMPLEMENTED)
+    user = check_login
+
+    begin
+      @file = FileResource.find(params[:id])
+    rescue ActiveRecord::RecordNotFound
+      json_failed(REASON_TOKEN_NOT_MATCH)
+      return
+    end
+
+    unless @file.creator == user
+      json_failed(REASON_TOKEN_NOT_MATCH)
+      return
+    end
+
+    @file.destroy
+    json_successful
   end
 
 end
diff --git a/app/controllers/teachers_controller.rb b/app/controllers/teachers_controller.rb
index 00aa1f6..1d2789c 100644
--- a/app/controllers/teachers_controller.rb
+++ b/app/controllers/teachers_controller.rb
@@ -9,14 +9,18 @@ class TeachersController < ApplicationController
   # POST /teachers.json
   def create
     if params[:id]
-      course = Course.find(params[:course_id])
-      teacher = User.find(params[:id])
-
-      course.teachers << teacher
-      if course.save
-        json_successful
-      else
-        json_failed
+      begin
+        check_admin
+        course = Course.find(params[:course_id])
+        teacher = User.find(params[:id])
+        course.teachers << teacher
+        if course.save
+          json_successful
+        else
+          json_failed
+        end
+      rescue ActiveRecord::RecordNotFound
+        json_failed_invalid_fields([:course_id, :id])
       end
     else
       json_failed(REASON_NOT_IMPLEMENTED)
@@ -27,12 +31,17 @@ class TeachersController < ApplicationController
   # DELETE /teachers/1.json
   def destroy
     if params[:course_id]
-      course = Course.find(params[:course_id])
-      teacher = User.find(params[:id])
-      if teacher.teaching_courses.where(course_id: course.id).first.destroy
-        json_successful
-      else
-        json_failed
+      begin
+        check_admin
+        course = Course.find(params[:course_id])
+        teacher = User.find(params[:id])
+        if teacher.teaching_courses.where(course_id: course.id).first.destroy
+          json_successful
+        else
+          json_failed
+        end
+      rescue ActiveRecord::RecordNotFound
+        json_failed_invalid_fields([:course_id, :id])
       end
     else
       json_failed(REASON_NOT_IMPLEMENTED)
diff --git a/app/helpers/application_helper.rb b/app/helpers/application_helper.rb
index e76bab9..2a090cd 100644
--- a/app/helpers/application_helper.rb
+++ b/app/helpers/application_helper.rb
@@ -6,13 +6,12 @@ module ApplicationHelper
 
   module StatusRenderingHelpers
 
-    class InvalidFieldException < Exception
-    end
+    InvalidFieldException = Class.new(Exception)
 
     def json_failed(reason = nil)
       addition = {}
       if block_given?
-        yield(addition)
+        yield addition
       end
 
       if reason
@@ -35,7 +34,12 @@ module ApplicationHelper
     end
 
     def json_successful
-      render json: { status: 'successful' }
+      addition = {}
+      if block_given?
+        yield addition
+      end
+
+      render json: { status: 'successful' }.merge(addition)
     end
 
     def html_failed(reason = nil)
diff --git a/app/models/file_resource.rb b/app/models/file_resource.rb
index 05aa699..5d0059b 100644
--- a/app/models/file_resource.rb
+++ b/app/models/file_resource.rb
@@ -1,7 +1,8 @@
 class FileResource < ActiveRecord::Base
   belongs_to :creator, class_name: 'User'
-  # string file_type, string name, string path, timestamps
+  # string file_type, string name, string path, timestamps, creator
 
+  validates_associated :creator
   validates :file_type, presence: true
   validates :name, presence: true
   validates :path, presence: true
diff --git a/app/views/files/show.json.jbuilder b/app/views/files/show.json.jbuilder
index 3ace8a0..5283346 100644
--- a/app/views/files/show.json.jbuilder
+++ b/app/views/files/show.json.jbuilder
@@ -4,4 +4,5 @@ json.file do
   json.name @file.name
   json.type @file.file_type
   json.path @file.path
+  json.created_at @file.created_at
 end
\ No newline at end of file
diff --git a/config/initializers/constants.rb b/config/initializers/constants.rb
index a3c0fbd..2c9ad1a 100644
--- a/config/initializers/constants.rb
+++ b/config/initializers/constants.rb
@@ -5,7 +5,7 @@ STATUS_SUCCESS = 'successful'
 STATUS_FAIL = 'failed'
 
 TOKEN_MAX_RAND = 2**192 - 1
-TOKEN_VALID_TIME_SEC = 2 * 60 * 60 # 2h
+TOKEN_VALID_TIME_SEC = 2.hours
 FILE_MAX_SIZE = 100.megabytes
 
 REASON_PERMISSION_DENIED = 'permission_denied'
@@ -20,4 +20,4 @@ REASON_INVALID_FIELD = 'invalid_field'
 INVALID_FIELDS_NAME = 'invalid_fields'
 REASON_FILE_TOO_BIG = 'file_too_big'
 
-ALLOWED_FILE_SUFFIXES = [ 'jpg', 'gif', 'png', 'mp4', 'mpg', 'avi' ]
\ No newline at end of file
+ALLOWED_FILE_SUFFIXES = %w"jpg gif png mp4 mpg avi"
\ No newline at end of file
diff --git a/config/routes.rb b/config/routes.rb
index 8c37d5b..85c6c7a 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -62,11 +62,11 @@ Rails.application.routes.draw do
     resources :courses, only: [:index, :create]
   end
 
-  resources :files, only: [:show, :create]
+  resources :files, only: [:show, :create, :destroy]
 
   namespace :android do
-    get 'current_version.json' => 'android_apps#current_version'
-    post 'current_version.json' => 'android_apps#create'
+    get 'current_version' => 'android_apps#current_version'
+    post 'current_version' => 'android_apps#create'
   end
 
   get 'test' => 'test#index'
diff --git a/db/migrate/20150926114146_devise_create_users.rb b/db/migrate/20150926114146_devise_create_users.rb
index 9d382ff..a5ddec6 100644
--- a/db/migrate/20150926114146_devise_create_users.rb
+++ b/db/migrate/20150926114146_devise_create_users.rb
@@ -22,7 +22,8 @@ class DeviseCreateUsers < ActiveRecord::Migration
       t.string   :last_sign_in_ip
 
       ## Additional
-      t.boolean  :is_teacher, default: true
+      t.boolean  :is_teacher, default: false
+      t.boolean  :is_admin,   default: false
       t.integer  :avator_id
       t.string   :student_number
       t.string   :class_name
diff --git a/db/schema.rb b/db/schema.rb
index 13fc115..92bcff9 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -134,24 +134,25 @@ ActiveRecord::Schema.define(version: 20151008120334) do
   create_table "users", force: :cascade do |t|
     t.string   "name",                   default: ""
     t.string   "phone"
-    t.string   "email",                  default: "",   null: false
-    t.string   "encrypted_password",     default: "",   null: false
+    t.string   "email",                  default: "",    null: false
+    t.string   "encrypted_password",     default: "",    null: false
     t.string   "reset_password_token"
     t.datetime "reset_password_sent_at"
     t.datetime "remember_created_at"
-    t.integer  "sign_in_count",          default: 0,    null: false
+    t.integer  "sign_in_count",          default: 0,     null: false
     t.datetime "current_sign_in_at"
     t.datetime "last_sign_in_at"
     t.string   "current_sign_in_ip"
     t.string   "last_sign_in_ip"
-    t.boolean  "is_teacher",             default: true
+    t.boolean  "is_teacher",             default: false
+    t.boolean  "is_admin",               default: false
     t.integer  "avator_id"
     t.string   "student_number"
     t.string   "class_name"
     t.string   "department"
     t.text     "description"
-    t.datetime "created_at",                            null: false
-    t.datetime "updated_at",                            null: false
+    t.datetime "created_at",                             null: false
+    t.datetime "updated_at",                             null: false
   end
 
   add_index "users", ["email"], name: "index_users_on_email", unique: true
diff --git a/lib/tasks/wc.rake b/lib/tasks/wc.rake
new file mode 100644
index 0000000..fa6c839
--- /dev/null
+++ b/lib/tasks/wc.rake
@@ -0,0 +1,21 @@
+
+namespace :wc do
+  task :default => [:all]
+
+  task :all => :environment do
+    puts `./tools/wc`
+  end
+
+  task con: :environment do
+    puts `./tools/wc con`
+  end
+
+  task test: :environment do
+    puts `./tools/wc test`
+  end
+
+  task view: :environment do
+    puts `./tools/wc view`
+  end
+
+end
\ No newline at end of file
diff --git a/test/controllers/files_controller_test.rb b/test/controllers/files_controller_test.rb
index 0a5eaa1..df7544c 100644
--- a/test/controllers/files_controller_test.rb
+++ b/test/controllers/files_controller_test.rb
@@ -8,6 +8,7 @@ class FilesControllerTest < ActionController::TestCase
     student = User.find_by_name('betty')
     lesson = Lesson.find_by_name('exp1')
 
+    sign_in student
     get :index, format: :json, student_id: student.id, lesson_id: lesson.id
 
     assert_json_success
@@ -20,6 +21,7 @@ class FilesControllerTest < ActionController::TestCase
     assistant = User.find_by_name('alex')
     lesson = Lesson.find_by_name('exp1')
 
+    sign_in assistant
     get :index, format: :json, assistant_id: assistant.id, lesson_id: lesson.id
 
     assert_json_success
@@ -56,6 +58,11 @@ class FilesControllerTest < ActionController::TestCase
 
     assert_json_success
     assert_not_nil json['file']
+    assert_not_nil json['file']['id']
+    assert_not_nil json['file']['name']
+    assert_not_nil json['file']['path']
+    assert_not_nil json['file']['created_at']
+    assert_not_nil json['file']['type']
   end
 
   # POST /files.json
@@ -70,6 +77,7 @@ class FilesControllerTest < ActionController::TestCase
 
     assert_json_success
     assert_not_nil assigns(:file).path
+    assert json['id']
   end
 
   # POST /files.json
@@ -126,4 +134,18 @@ class FilesControllerTest < ActionController::TestCase
     File.delete(file_path)
   end
 
+  # DELETE /files/1.json
+  test 'should delete file if he is the creator' do
+    sign_in User.first
+    fixture_file = fixture_file_upload('files/2.jpg', 'image/jpeg')
+    post :create, format: :json, file: {file: fixture_file, type: 'picture'}
+    id = json['id']
+
+    assert_difference 'FileResource.count', -1 do
+      delete :destroy, format: :json, id: id.to_i
+    end
+
+    assert_json_success
+  end
+
 end
diff --git a/test/controllers/teachers_controller_test.rb b/test/controllers/teachers_controller_test.rb
index 3381f02..99cd772 100644
--- a/test/controllers/teachers_controller_test.rb
+++ b/test/controllers/teachers_controller_test.rb
@@ -1,6 +1,9 @@
 require 'test_helper'
 
 class TeachersControllerTest < ActionController::TestCase
+  include Devise::TestHelpers
+
+  # GET /courses/1/teachers.json
   test 'should get teachers by course' do
     get :index, format: :json, course_id: Course.find_by_name('Operation System').id
 
@@ -9,20 +12,60 @@ class TeachersControllerTest < ActionController::TestCase
     assert json['teachers'].count > 0
   end
 
+  # POST /courses/1/teachers/1.json
   test 'should add teacher to course' do
+    admin = User.find_by_name('alex')
+    sign_in admin
+
     teacher = User.find_by_name('ciara')
     course = Course.find_by_name('Operation System')
-    course_creator = course.teachers.first
-    token_str = course_creator.create_token.token
 
     assert_difference 'course.teachers.count' do
-      post :create, id: teacher.id, course_id: course.id, token: token_str
+      post :create, id: teacher.id, course_id: course.id
     end
 
     assert_json_success
   end
 
+  # POST /courses/1/teachers/1.json
+  test 'should not add teacher if he is not an administrator' do
+    non_admin = User.find_by_name('betty')
+    sign_in non_admin
+
+    teacher = User.find_by_name('ciara')
+    course = Course.find_by_name('Operation System')
+
+    assert_no_difference 'course.teachers.count' do
+      post :create, id: teacher.id, course_id: course.id
+    end
+
+    assert STATUS_FAIL, json['status']
+  end
+
+  # POST /courses/1/teacher/1.json
+  test 'should not add teacher if teacher_id or course_id is invalid' do
+    admin = User.find_by_name('alex')
+    sign_in admin
+
+    teacher = User.find_by_name('ciara')
+    course = Course.find_by_name('Operation System')
+
+    assert_no_difference 'course.teachers.count' do
+      post :create, id: teacher.id, course_id: -1
+    end
+    assert STATUS_FAIL, json['status']
+
+    assert_no_difference 'course.teachers.count' do
+      post :create, id: -1, course_id: course.id
+    end
+    assert STATUS_FAIL, json['status']
+  end
+
+  # DELETE /courses/1/teachers/1.json
   test 'should remove teacher from course' do
+    admin = User.find_by_name('alex')
+    sign_in admin
+
     course = Course.find_by_name('Operation System')
     teacher = course.teachers.first
     assert_difference 'course.teachers.count', -1 do
@@ -32,4 +75,37 @@ class TeachersControllerTest < ActionController::TestCase
     assert_json_success
   end
 
+  # DELETE /courses/1/teachers/1.json
+  test 'should not remove teacher if teacher_id is invalid' do
+    admin = User.find_by_name('alex')
+    sign_in admin
+
+    course = Course.find_by_name('Operation System')
+    teacher = course.teachers.first
+
+    assert_no_difference 'course.teachers.count' do
+      delete :destroy, format: :json, id: teacher.id, course_id: -1
+    end
+    assert STATUS_FAIL, json['status']
+
+    assert_no_difference 'course.teachers.count' do
+      delete :destroy, format: :json, id: -1, course_id: course.id
+    end
+    assert STATUS_FAIL, json['status']
+  end
+
+  # DELETE /courses/1/teachers/1.json
+  test 'should not remove teacher from course if he is not an administrator' do
+    admin = User.find_by_name('betty')
+    sign_in admin
+
+    course = Course.find_by_name('Operation System')
+    teacher = course.teachers.first
+    assert_no_difference 'course.teachers.count' do
+      delete :destroy, format: :json, id: teacher.id, course_id: course.id
+    end
+
+    assert STATUS_FAIL, json['status']
+  end
+
 end
diff --git a/test/fixtures/file_resources.yml b/test/fixtures/file_resources.yml
index 2b641e5..9e71280 100644
--- a/test/fixtures/file_resources.yml
+++ b/test/fixtures/file_resources.yml
@@ -1,4 +1,5 @@
 pdf_file:
   name: pdf
+  file_type: pdf
   path: file.pdf
   creator: alex
\ No newline at end of file
diff --git a/test/fixtures/users.yml b/test/fixtures/users.yml
index 006340d..a520539 100644
--- a/test/fixtures/users.yml
+++ b/test/fixtures/users.yml
@@ -4,6 +4,7 @@ alex:
   email: 'alex@b.c'
   encrypted_password: <%= User.new.send(:password_digest, '123') %>
   is_teacher: true
+  is_admin: true
 
 betty:
   name: 'betty'
diff --git a/tools/wc b/tools/wc
new file mode 100755
index 0000000..28502f7
--- /dev/null
+++ b/tools/wc
@@ -0,0 +1,49 @@
+#!/bin/bash
+
+function wc_controllers {
+  wc $(find . | grep '.*\.rb' | grep 'app/controllers\|json\.jbuilder')
+}
+
+function wc_tests {
+  wc $(find . | grep '.*\.rb\|yml' | grep '.*test/.*')
+}
+function wc_views {
+  wc $(find . | grep '\.\(html\|css\|js\|coffee\|sass\|erb\)$' | grep 'views/\|public/' | grep -v '\(chart.js\)\|\([0-9]\+\.html\)' | grep -v 'video.*\.js\|css$')
+}
+
+function wc_total {
+  wc $(find . -type f | grep -v 'chart\.js\|.git\|\.idea\|bootstrap\|config/\|db/\|tmp/\|log/\|bin/' | grep -v 'video.*\.js\|css$')
+}
+
+if [ $# -eq 0 ]
+then
+  echo -e "lines\twords\tbytes"
+  echo 'controllers:'
+  wc_controllers | tail -n 1
+  echo 'tests:'
+  wc_tests | tail -n 1
+  echo 'views:'
+  wc_views | tail -n 1
+  echo 'total:'
+  wc_total | tail -n 1
+fi
+
+case $1 in
+con)
+  wc_controllers
+  ;;
+test)
+  wc_tests
+  ;;
+view)
+  wc_views
+  ;;
+total)
+  wc_total
+  ;;
+help)
+  echo "PapaDatabase word counter:"
+  echo "command line:"
+  echo "wc ACTION"
+  echo "  where ACTION=[con|test|view|total|help]"
+esac
-- 
1.9.1

