From 52ec1f0cf0eaa5c33cc3fdb8d16d3c5e0be874da Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Fri, 16 Oct 2015 23:43:08 +0800
Subject: [PATCH 091/150] PAPA-133 secure file create method

---
 README.md                                        |  8 ++++
 app/controllers/application_controller.rb        | 14 +++++-
 app/controllers/files_controller.rb              | 30 ++++++++++---
 app/controllers/students_controller.rb           |  3 +-
 app/helpers/application_helper.rb                | 25 ++++++++++-
 app/models/file_resource.rb                      |  6 ++-
 app/models/token.rb                              |  2 +-
 app/views/files/show.json.jbuilder               |  2 +-
 config/initializers/constants.rb                 |  6 +++
 db/migrate/20150926114146_devise_create_users.rb |  1 +
 db/schema.rb                                     |  1 +
 test/controllers/files_controller_test.rb        | 57 ++++++++++++++++++++++++
 12 files changed, 140 insertions(+), 15 deletions(-)

diff --git a/README.md b/README.md
index 97b022d..ea04255 100644
--- a/README.md
+++ b/README.md
@@ -140,6 +140,7 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     POST   /lessons/1/comments.json  添加学生对课程的评价(当前登陆用户)  lesson comment parameters                    Student
     GET    /lessons/1/students/1/comments.json 查看助教对学生的评价 "student_comments": [student_comment,...] Student
     POST   /lessons/1/students/1/comments.json 助教对学生的评价 student comment parameters              Assistant
+    GET    /students/1/lessons/1/comments.json 查看学生对课程的所有评价 "lesson_comments": [student_comment,...] Teacher
     GET    /lessons/1/students.json  某门实验课的到课学生列表 students id                               Teacher
     POST   /lessons/1/students/1.json 学生签到                                                          Student
     GET    /lessons/1/files.json     获得该门实验课的简介文件
@@ -235,6 +236,13 @@ Http Parameters/JSON对象格式
             email=string,
             #!avator_path=string
             ?avator_id=int
+    
+    teacher id=int
+            name=string
+            email=string
+            phone=string
+            avator_id=int
+            description=string
             
     lesson_comment id=int        // 学生对课程的评价
             content=string
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index 80ba9f0..984b0fd 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -31,7 +31,7 @@ class ApplicationController < ActionController::Base
       token = Token.find_by_token(token_str)
       # deny when teacher_required is required but the token is not a teacher
       if token && token.user_id == user_id.to_i && (!teacher_required || token.user.is_teacher)
-        if Time.now > token.valid_until
+        unless token.token_valid?
           raise TokenException.new(REASON_TOKEN_TIMEOUT)
         end
       else
@@ -46,6 +46,18 @@ class ApplicationController < ActionController::Base
     end
   end
 
+  def check_login
+    if params[:token]
+      token = Token.find_by_token(params[:token])
+
+      unless token.user.is_a?(User) && token && token.token_valid?
+        raise TokenException.new(REASON_TOKEN_INVALID)
+      end
+    else
+      raise TokenException.new(REASON_TOKEN_INVALID) unless current_user
+    end
+  end
+
   def check_token_type(token_str, type)
 
   end
diff --git a/app/controllers/files_controller.rb b/app/controllers/files_controller.rb
index 29504f8..13dc4e4 100644
--- a/app/controllers/files_controller.rb
+++ b/app/controllers/files_controller.rb
@@ -26,23 +26,39 @@ class FilesController < ApplicationController
 
   # POST /files.json
   def create
-    temp = params[:file][:file]
-    rel_loc = File.join('uploads', temp.original_filename)
+    check_login
+
+    p = params[:file]
+    puts p.class
+    unless p && p.is_a?(ActionController::Parameters) && p[:file] && p[:type]
+      json_failed_invalid_fields([:file, :type])
+      return
+    end
+
+    temp_file = p[:file]
+    if temp_file.size > FILE_MAX_SIZE
+      json_failed(REASON_FILE_TOO_BIG)
+      return
+    end
+
+    rel_loc = File.join('uploads', temp_file.original_filename)
     loc = Rails.root.join('public', rel_loc)
     File.open(loc, 'wb') do |file|
-      file.write(temp.read)
+      file.write(temp_file.read)
     end
 
-    @file = FileResource.create(file_type: params[:file][:type], name: temp.original_filename, path: File.join('', rel_loc))
-    if @file
-      json_successful
+    @file = FileResource.create(file_type: p[:type], name: temp_file.original_filename, path: File.join('', rel_loc))
+    if @file.valid?
+        json_successful
     else
-      json_failed
+      json_failed_invalid_fields(@file.errors.keys,
+                                  file_type: :type, path: '', name: '')
     end
   end
 
   # DELETE /files/1.json
   def destroy
+    authenticate_user!
     json_failed(REASON_NOT_IMPLEMENTED)
   end
 
diff --git a/app/controllers/students_controller.rb b/app/controllers/students_controller.rb
index 34b9daa..4202c6d 100644
--- a/app/controllers/students_controller.rb
+++ b/app/controllers/students_controller.rb
@@ -18,9 +18,8 @@ class StudentsController < ApplicationController
         @students <<= p.user
       end
     else
-
+      json_failed
     end
-
   end
 
   # GET /students/1.json
diff --git a/app/helpers/application_helper.rb b/app/helpers/application_helper.rb
index 146f175..e76bab9 100644
--- a/app/helpers/application_helper.rb
+++ b/app/helpers/application_helper.rb
@@ -6,13 +6,34 @@ module ApplicationHelper
 
   module StatusRenderingHelpers
 
+    class InvalidFieldException < Exception
+    end
+
     def json_failed(reason = nil)
+      addition = {}
+      if block_given?
+        yield(addition)
+      end
+
       if reason
-        render json: { status: 'failed', reason: reason }
+        render json: { status: 'failed', reason: reason }.merge(addition)
       else
-        render json: { status: 'failed' }
+        render json: { status: 'failed' }.merge(addition)
       end
     end
+
+    def json_failed_invalid_fields(keys, fields = {})
+      json_failed(REASON_INVALID_FIELD) do |json|
+        json[INVALID_FIELDS_NAME] = keys.map do |x|
+          if fields.keys.include?(x)
+            fields[x].to_s
+          else
+            x.to_s
+          end
+        end.compact
+      end
+    end
+
     def json_successful
       render json: { status: 'successful' }
     end
diff --git a/app/models/file_resource.rb b/app/models/file_resource.rb
index 86de7d7..05aa699 100644
--- a/app/models/file_resource.rb
+++ b/app/models/file_resource.rb
@@ -1,4 +1,8 @@
 class FileResource < ActiveRecord::Base
   belongs_to :creator, class_name: 'User'
-  # string type, string name, string path, timestamps
+  # string file_type, string name, string path, timestamps
+
+  validates :file_type, presence: true
+  validates :name, presence: true
+  validates :path, presence: true
 end
diff --git a/app/models/token.rb b/app/models/token.rb
index f491fa1..a4c73bf 100644
--- a/app/models/token.rb
+++ b/app/models/token.rb
@@ -10,7 +10,7 @@ class Token < ActiveRecord::Base
   end
 
   def token_valid?
-    valid_until < Time.now
+    valid_until > Time.now
   end
 
   def self.check_token(params, user_id)
diff --git a/app/views/files/show.json.jbuilder b/app/views/files/show.json.jbuilder
index bf99424..3ace8a0 100644
--- a/app/views/files/show.json.jbuilder
+++ b/app/views/files/show.json.jbuilder
@@ -2,6 +2,6 @@ json.status STATUS_SUCCESS
 json.file do
   json.id   @file.id
   json.name @file.name
-  json.type @file.type
+  json.type @file.file_type
   json.path @file.path
 end
\ No newline at end of file
diff --git a/config/initializers/constants.rb b/config/initializers/constants.rb
index e7ac4d0..a3c0fbd 100644
--- a/config/initializers/constants.rb
+++ b/config/initializers/constants.rb
@@ -6,6 +6,7 @@ STATUS_FAIL = 'failed'
 
 TOKEN_MAX_RAND = 2**192 - 1
 TOKEN_VALID_TIME_SEC = 2 * 60 * 60 # 2h
+FILE_MAX_SIZE = 100.megabytes
 
 REASON_PERMISSION_DENIED = 'permission_denied'
 REASON_TOKEN_INVALID = 'token_invalid'
@@ -14,4 +15,9 @@ REASON_TOKEN_NOT_MATCH = 'token_not_match'
 REASON_NOT_IMPLEMENTED = 'not_implemented'
 REASON_INVALID_OPERATION = 'invalid_operation'
 
+# json parameters when a user post an invalid json.
+REASON_INVALID_FIELD = 'invalid_field'
+INVALID_FIELDS_NAME = 'invalid_fields'
+REASON_FILE_TOO_BIG = 'file_too_big'
+
 ALLOWED_FILE_SUFFIXES = [ 'jpg', 'gif', 'png', 'mp4', 'mpg', 'avi' ]
\ No newline at end of file
diff --git a/db/migrate/20150926114146_devise_create_users.rb b/db/migrate/20150926114146_devise_create_users.rb
index 9fe5377..9d382ff 100644
--- a/db/migrate/20150926114146_devise_create_users.rb
+++ b/db/migrate/20150926114146_devise_create_users.rb
@@ -27,6 +27,7 @@ class DeviseCreateUsers < ActiveRecord::Migration
       t.string   :student_number
       t.string   :class_name
       t.string   :department
+      t.text     :description
 
       t.timestamps null: false
     end
diff --git a/db/schema.rb b/db/schema.rb
index 85dbec6..13fc115 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -149,6 +149,7 @@ ActiveRecord::Schema.define(version: 20151008120334) do
     t.string   "student_number"
     t.string   "class_name"
     t.string   "department"
+    t.text     "description"
     t.datetime "created_at",                            null: false
     t.datetime "updated_at",                            null: false
   end
diff --git a/test/controllers/files_controller_test.rb b/test/controllers/files_controller_test.rb
index bbf6d6f..0a5eaa1 100644
--- a/test/controllers/files_controller_test.rb
+++ b/test/controllers/files_controller_test.rb
@@ -1,6 +1,7 @@
 require 'test_helper'
 
 class FilesControllerTest < ActionController::TestCase
+  include Devise::TestHelpers
 
   # GET /students/1/lessons/1/files.json
   test 'should get student files on lesson' do
@@ -59,6 +60,8 @@ class FilesControllerTest < ActionController::TestCase
 
   # POST /files.json
   test 'should add file' do
+    sign_in User.first
+
     fixture_file = fixture_file_upload('files/2.jpg', 'image/jpeg')
 
     assert_difference 'FileResource.count' do
@@ -69,4 +72,58 @@ class FilesControllerTest < ActionController::TestCase
     assert_not_nil assigns(:file).path
   end
 
+  # POST /files.json
+  test 'should not add file if type and file not set' do
+    sign_in User.first
+
+    assert_no_difference 'FileResource.count' do
+      post :create, format: :json, file: {}
+    end
+
+    assert_equal STATUS_FAIL, json['status']
+    assert_not_nil REASON_INVALID_FIELD, json['reason']
+    assert json[INVALID_FIELDS_NAME].include? 'type'
+    assert json[INVALID_FIELDS_NAME].include? 'file'
+    assert_not json[INVALID_FIELDS_NAME].include? 'path'
+    assert_not json[INVALID_FIELDS_NAME].include? 'name'
+  end
+
+  # POST /files.json
+  test 'should not add file if not signed in' do
+    assert_no_difference 'FileResource.count' do
+      post :create, format: :json, file: {}
+    end
+    assert_equal STATUS_FAIL, json['status']
+    assert_not_nil REASON_TOKEN_INVALID, json['reason']
+  end
+
+  # POST /files.json
+  test 'should not add file if the file is too big' do
+    sign_in User.first
+
+    file_name = '__test_big_file'
+    file_path = File.join(Rails.root, 'test', 'fixtures', 'files', file_name)
+    big_file = File.new(file_path, 'wb+')
+
+    # 160M
+    x = '012345678901234567890'
+    23.times do
+      x += x
+    end
+
+    big_file.puts x
+    big_file.close
+
+    fixture_file = fixture_file_upload("files/#{file_name}", 'image/jpeg')
+
+    assert_no_difference 'FileResource.count' do
+      post :create, format: :json, file: {file: fixture_file, type: 'picture'}
+    end
+
+    assert_equal STATUS_FAIL, json['status']
+    assert_not_nil REASON_FILE_TOO_BIG, json['reason']
+
+    File.delete(file_path)
+  end
+
 end
-- 
1.9.1

