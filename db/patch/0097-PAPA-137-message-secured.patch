From d4f0f3e0099b1cc6939dd5ba8be7a30d9abb6c95 Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Sat, 17 Oct 2015 16:24:28 +0800
Subject: [PATCH 097/150] PAPA-137 message secured

---
 README.md                                    |  6 +-
 app/controllers/application_controller.rb    | 18 ++++++
 app/controllers/messages_controller.rb       | 36 ++++++++---
 app/models/file_resource.rb                  |  2 +-
 app/models/message.rb                        |  6 ++
 app/models/participation.rb                  |  8 +--
 app/models/teaching_course.rb                |  4 +-
 app/models/token.rb                          |  6 +-
 test/controllers/files_controller_test.rb    |  2 +-
 test/controllers/messages_controller_test.rb | 91 +++++++++++++++++++++++++++-
 10 files changed, 155 insertions(+), 24 deletions(-)

diff --git a/README.md b/README.md
index 145c507..6447154 100644
--- a/README.md
+++ b/README.md
@@ -164,8 +164,8 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     #!PUT    /students/1/courses.json  修改学生课程列表                                                    Teacher
     POST   /students/1/courses/1.json       给学生添加课程
     DELETE /students/1/courses/1.json       给学生删除课程
-    GET    /students/1/lessons/1.json       获得学生课程的信息，包括成绩     "course": course_score       Student
-    PUT    /students/1/lessons/1.json       修改学生课程信息                                             Assistant  
+    #!GET    /students/1/lessons/1.json       获得学生课程的信息，包括成绩     "course": course_score       Student
+    #!PUT    /students/1/lessons/1.json       修改学生课程信息                                             Assistant  
     GET    /students/1/lessons/1/files.json 获得某门实验课某个学生的所有文件 "files": [file, ...]         Student
     POST   /students/1/lessons/1/files.json 在某门实验课上添加视频图片                                      Student
     DELETE /students/1/lessons/1/files/1.json 在某门实验课上删除视频照片
@@ -183,7 +183,7 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     POST   /teachers/1/courses.json   给老师添加课程        course parameters                            Teacher
     
     # 消息推送
-    GET    /students/1/messages.json  查询学生的所有消息     "messages": [message ...]               Student
+    GET    /students/1/messages.json  查询学生的所有消息     "messages": [message ...]                   Student
     POST   /courses/1/messages.json   发送消息到某门课的所有学生 "message": message                      Assistant
     
     # 文件相关
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index c91045f..f0b283a 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -44,6 +44,7 @@ class ApplicationController < ActionController::Base
     else
       raise TokenException.new(REASON_TOKEN_INVALID)
     end
+    true
   end
 
   def check_login
@@ -80,6 +81,23 @@ class ApplicationController < ActionController::Base
     end
   end
 
+  def check_teacher
+    if params[:token]
+      token = Token.find_by_token(params[:token])
+      if token && token.user.is_a?(User) && token.token_valid? && token.user.is_teacher?
+        token.user
+      else
+        raise TokenException.new(REASON_TOKEN_INVALID)
+      end
+    else
+      if current_user && current_user.is_teacher?
+        current_user
+      else
+        raise TokenException.new(REASON_TOKEN_INVALID)
+      end
+    end
+  end
+
   def check_token_type(token_str, type)
 
   end
diff --git a/app/controllers/messages_controller.rb b/app/controllers/messages_controller.rb
index 003b505..8996788 100644
--- a/app/controllers/messages_controller.rb
+++ b/app/controllers/messages_controller.rb
@@ -1,18 +1,40 @@
 class MessagesController < ApplicationController
   # GET /students/1/messages.json
   def index
-    @messages = Message.none
-
-    courses = User.find(params[:student_id]).courses
-    courses.each do |course|
-      @messages += course.messages
+    begin
+      student = User.find(params[:student_id])
+      if student && check_token(student.id, params[:token])
+        @messages = Message.none
+        courses = student.courses
+        courses.each do |course|
+          @messages += course.messages
+        end
+      else
+        json_failed(REASON_PERMISSION_DENIED)
+      end
+    rescue ActiveRecord::RecordNotFound
+      json_failed_invalid_fields([:student_id])
     end
+
   end
 
   # POST /courses/1/messages.json
   def create
-    if Message.create(
-        params.require(:message).permit(:title, :type, :deadline, :content).merge(creator_id: current_user.id))
+    admin = check_admin
+
+    @message = Message.create(
+        params.require(
+            :message
+        ).permit(
+            :title, :deadline, :content
+        ).merge(
+            creator_id:   admin.id,
+            message_type: params[:message][:type],
+            course_id:    params[:course_id]
+        )
+    )
+
+    if @message && @message.valid?
       json_successful
     else
       json_failed
diff --git a/app/models/file_resource.rb b/app/models/file_resource.rb
index 5d0059b..ffaedef 100644
--- a/app/models/file_resource.rb
+++ b/app/models/file_resource.rb
@@ -2,7 +2,7 @@ class FileResource < ActiveRecord::Base
   belongs_to :creator, class_name: 'User'
   # string file_type, string name, string path, timestamps, creator
 
-  validates_associated :creator
+  validates :creator, presence: true
   validates :file_type, presence: true
   validates :name, presence: true
   validates :path, presence: true
diff --git a/app/models/message.rb b/app/models/message.rb
index df11d99..f7dcd70 100644
--- a/app/models/message.rb
+++ b/app/models/message.rb
@@ -3,4 +3,10 @@ class Message < ActiveRecord::Base
   belongs_to :course
 
   # string type, string title, datetime deadline, text content, timestamps
+
+  validates :course, presence: true
+  validates :creator, presence: true
+  validates :message_type, presence: true, inclusion: { in: %w"homework notification" }
+  validates :title, presence: true
+  validates :deadline, presence: true
 end
diff --git a/app/models/participation.rb b/app/models/participation.rb
index 4e20d70..6ba929e 100644
--- a/app/models/participation.rb
+++ b/app/models/participation.rb
@@ -1,10 +1,10 @@
 class Participation < ActiveRecord::Base
 
-  validates :role, presence: true
-  validates_associated :user
-  validates_associated :course
-
   belongs_to :user
   belongs_to :course
 
+  validates :role, presence: true
+  validates :user, presence: true
+  validates :course, presence: true
+
 end
\ No newline at end of file
diff --git a/app/models/teaching_course.rb b/app/models/teaching_course.rb
index a12def9..09c9d81 100644
--- a/app/models/teaching_course.rb
+++ b/app/models/teaching_course.rb
@@ -4,6 +4,6 @@ class TeachingCourse < ActiveRecord::Base
   # the course you teach
   belongs_to :course
 
-  validates_associated :user
-  validates_associated :course
+  validates :user, presence: true
+  validates :course, presence: true
 end
diff --git a/app/models/token.rb b/app/models/token.rb
index a4c73bf..4aa0d40 100644
--- a/app/models/token.rb
+++ b/app/models/token.rb
@@ -1,10 +1,10 @@
 class Token < ActiveRecord::Base
-  validates_associated :user
+  belongs_to :user
+
+  validates :user, presence: true
   validates :valid_until, presence: true
   validates :token, presence: true
 
-  belongs_to :user
-
   def self.safe_token
     rand(TOKEN_MAX_RAND).to_s
   end
diff --git a/test/controllers/files_controller_test.rb b/test/controllers/files_controller_test.rb
index df7544c..f4569c7 100644
--- a/test/controllers/files_controller_test.rb
+++ b/test/controllers/files_controller_test.rb
@@ -129,7 +129,7 @@ class FilesControllerTest < ActionController::TestCase
     end
 
     assert_equal STATUS_FAIL, json['status']
-    assert_not_nil REASON_FILE_TOO_BIG, json['reason']
+    assert_equal REASON_FILE_TOO_BIG, json['reason']
 
     File.delete(file_path)
   end
diff --git a/test/controllers/messages_controller_test.rb b/test/controllers/messages_controller_test.rb
index 969bcbb..7be710f 100644
--- a/test/controllers/messages_controller_test.rb
+++ b/test/controllers/messages_controller_test.rb
@@ -3,15 +3,38 @@ require 'test_helper'
 class MessagesControllerTest < ActionController::TestCase
   include Devise::TestHelpers
 
-  test 'should get message by students' do
+  # GET /students/1/messages.json
+  test 'should get message by student' do
     student = User.find_by_name('alex')
-    get :index, format: :json, student_id: student.id
+    token = student.create_token.token
 
+    get :index, format: :json, student_id: student.id, token: token
     assert_json_success
+
     assert_not_nil json['messages']
     assert json['messages'].count > 0
   end
 
+  # GET /students/1/messages.json
+  test 'should not get message if token is invalid' do
+    student = User.find_by_name('alex')
+
+    get :index, format: :json, student_id: student.id, token: 123
+
+    assert STATUS_FAIL, json['status']
+  end
+
+  # GET /students/1/messages.json
+  test 'should not get message if token is not matched' do
+    student = User.find_by_name('alex')
+    token = User.find_by_name('betty').create_token.token
+
+    get :index, format: :json, student_id: student.id, token: token
+
+    assert STATUS_FAIL, json['status']
+  end
+
+  # POST /courses/1/messages.json
   test 'should add message by teacher' do
     teacher = User.find_by_name('alex')
     course = Course.first
@@ -19,7 +42,7 @@ class MessagesControllerTest < ActionController::TestCase
 
     assert_difference 'Message.count' do
       post :create, format: :json, course_id: course.id, message: {
-               message_type: 'homework',
+               type: 'homework',
                title: 'good news',
                deadline: Time.now + 24.hours,
                content: 'hahaha'
@@ -29,4 +52,66 @@ class MessagesControllerTest < ActionController::TestCase
     assert_json_success
   end
 
+  test 'should not add message if parameters are invalid' do
+    teacher = User.find_by_name('alex')
+    course = Course.first
+    sign_in teacher
+
+    # wrong message_type
+    assert_no_difference 'Message.count' do
+      post :create, format: :json, course_id: course.id, message: {
+                      type: '123',
+                      title: 'good news',
+                      deadline: Time.now + 24.hours,
+                      content: 'hahaha'
+                  }
+    end
+    assert STATUS_FAIL, json['status']
+
+    # absence of title
+    assert_no_difference 'Message.count' do
+      post :create, format: :json, course_id: course.id, message: {
+                      type: 'homework',
+                      deadline: Time.now + 24.hours,
+                      content: 'hahaha'
+                  }
+    end
+    assert STATUS_FAIL, json['status']
+  end
+
+  # POST /courses/1/messages.json
+  test 'should not add message if he is not a teacher' do
+    non_teacher = User.find_by_name('betty')
+    course = Course.first
+    sign_in non_teacher
+
+    # course_id invalid
+    assert_no_difference 'Message.count' do
+      post :create, format: :json, course_id: course.id, message: {
+                      type: 'homework',
+                      title: 'good news',
+                      deadline: Time.now + 24.hours,
+                      content: 'hahaha'
+                  }
+    end
+    assert STATUS_FAIL, json['status']
+  end
+
+  # POST /courses/1/messages.json
+  test 'should not add message if course_id is invalid' do
+    teacher = User.find_by_name('alex')
+    sign_in teacher
+
+    # course_id invalid
+    assert_no_difference 'Message.count' do
+      post :create, format: :json, course_id: -1, message: {
+                      type: 'homework',
+                      title: 'good news',
+                      deadline: Time.now + 24.hours,
+                      content: 'hahaha'
+                  }
+    end
+    assert STATUS_FAIL, json['status']
+  end
+
 end
-- 
1.9.1

