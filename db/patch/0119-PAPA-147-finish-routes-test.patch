From c901e7cca5501b6ed204cea7527777390e56a41a Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Fri, 23 Oct 2015 14:58:43 +0800
Subject: [PATCH 119/150] PAPA-147 finish routes test

---
 README.md                                       |  14 +-
 app/controllers/android_apps_controller.rb      |  20 ---
 app/controllers/apps/android_apps_controller.rb |  22 +++
 app/controllers/users_controller.rb             |  10 ++
 app/views/users/show.json.jbuilder              |   9 ++
 config/routes.rb                                |  16 ++-
 test/controllers/routes_test.rb                 | 171 ++++++++++++++++++++++++
 7 files changed, 231 insertions(+), 31 deletions(-)
 delete mode 100644 app/controllers/android_apps_controller.rb
 create mode 100644 app/controllers/apps/android_apps_controller.rb
 create mode 100644 app/views/users/show.json.jbuilder
 create mode 100644 test/controllers/routes_test.rb

diff --git a/README.md b/README.md
index 6e7b57e..e6a78cc 100644
--- a/README.md
+++ b/README.md
@@ -85,6 +85,7 @@ Android客户端通过访问指定的URL获得一个JSON文件来访问数据库
     
     # namespace user
     # 用户相关
+    ?GET    /users/1.json             得到用户的信息     "user": user
     POST    /users/sign_in.json       登陆               utf8=✓&user[login]=xxx&user[password]=123&user[remember_me]=0
         返回:  token: '123456777777777', id: 123
         *上面对号的utf-8编码值为0xE2 0x9C 0x93                                                          Everyone
@@ -94,6 +95,8 @@ Android客户端通过访问指定的URL获得一个JSON文件来访问数据库
         not_implemented
     PUT     /users/1.json             修改用户信息                                                      User
         not_implemented
+    GET    /users/current.json       获取当前用户id          "id": "123"                                 Current User
+        permission_denied: 未登录
 
     # namespace semesters
     GET    /semesters.json               获得所有学年     "semesters": [semester, ...]                  Student
@@ -288,10 +291,7 @@ Android客户端通过访问指定的URL获得一个JSON文件来访问数据库
     DELETE /files/1.json             删除自己上传的文件                                                  Creator           
         resource_not_found: file_id不存在
         permission_denied: 当前用户不是文件创建者
-    # 用户相关
-    GET    /users/current.json       获取当前用户id          "id": "123"                                 Current User
-        permission_denied: 未登录
-
+    
     # App更新
     GET    /android/current_version.json 得到当前最新版本号  {"version": "xx", "apk_path": "xx"}         Student
         always successful
@@ -321,10 +321,10 @@ Deprecated APIs:
     
 API Status:
 
-    Total History:      83
+    Total History:      84
     Deprecated:         18
-    Total Valid:        65
-    Not Implemented:    9
+    Total Valid:        66
+    Not Implemented:    10
     Not Secured:        6
     Fully Finished:     50
         
diff --git a/app/controllers/android_apps_controller.rb b/app/controllers/android_apps_controller.rb
deleted file mode 100644
index 1fb134d..0000000
--- a/app/controllers/android_apps_controller.rb
+++ /dev/null
@@ -1,20 +0,0 @@
-class AndroidAppsController < ApplicationController
-
-  # GET /android_apps/current_version.json
-  def current_version
-    @android_app = AndroidApp.order(:created_at).last
-    render json: { status: STATUS_SUCCESS, android_app: { version: @android_app.version, file_resource_id: @android_app.file_resource.id } }
-  end
-
-  # POST /android_apps/current_version.json
-  def create
-    check_admin
-
-    if AndroidApp.create(params.require(:android_app).permit(:version, :file_resource_id))
-      json_successful
-    else
-      json_failed(REASON_INVALID_FIELD)
-    end
-  end
-
-end
diff --git a/app/controllers/apps/android_apps_controller.rb b/app/controllers/apps/android_apps_controller.rb
new file mode 100644
index 0000000..067e660
--- /dev/null
+++ b/app/controllers/apps/android_apps_controller.rb
@@ -0,0 +1,22 @@
+module Apps
+  class AndroidAppsController < ApplicationController
+
+    # GET /android_apps/current_version.json
+    def current_version
+      @android_app = AndroidApp.order(:created_at).last
+      render json: { status: STATUS_SUCCESS, android_app: { version: @android_app.version, file_resource_id: @android_app.file_resource.id } }
+    end
+
+    # POST /android_apps/current_version.json
+    def create
+      check_admin
+
+      if AndroidApp.create(params.require(:android_app).permit(:version, :file_resource_id))
+        json_successful
+      else
+        json_failed(REASON_INVALID_FIELD)
+      end
+    end
+
+  end
+end
\ No newline at end of file
diff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb
index ac6a9ae..f1ac165 100644
--- a/app/controllers/users_controller.rb
+++ b/app/controllers/users_controller.rb
@@ -7,4 +7,14 @@ class UsersController < ApplicationController
       json_failed(REASON_PERMISSION_DENIED)
     end
   end
+
+  def show
+    begin
+      @user = User.find(params[:id])
+    rescue ActiveRecord::RecordNotFound
+      json_failed(REASON_RESOURCE_NOT_FOUND)
+    end
+  end
+
+
 end
\ No newline at end of file
diff --git a/app/views/users/show.json.jbuilder b/app/views/users/show.json.jbuilder
new file mode 100644
index 0000000..8e85159
--- /dev/null
+++ b/app/views/users/show.json.jbuilder
@@ -0,0 +1,9 @@
+json.status STATUS_SUCCESS
+json.user do
+  json.id         @user.id
+  json.name       @user.name
+  json.email      @user.email
+  json.phone      @user.phone
+  json.is_teacher @user.is_teacher
+  json.is_admin   @user.is_admin
+end
\ No newline at end of file
diff --git a/config/routes.rb b/config/routes.rb
index cec5710..d89a590 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -9,6 +9,7 @@ Rails.application.routes.draw do
   }
 
   get 'users/current' => 'users#current'
+  get 'users/:id' => 'users#show'
 
   resources :semesters, only: [:index, :create, :update, :destroy] do
     resources :courses, only: [:index]
@@ -20,8 +21,12 @@ Rails.application.routes.draw do
     post 'students/:id' => 'students#create', as: :create_student
 
     resources :assistants, only: [:index, :create, :destroy]
+    post 'assistants/:id' => 'assistants#create', as: :create_assistant
+
     resources :lessons, only: [:index, :create, :destroy]
-    resources :teachers, only: [:index, :create, :destroy, :update]
+    resources :teachers, only: [:index, :create, :destroy, :update, :show]
+    post 'teachers/:id' => 'teachers#create', as: :create_teacher
+
     resources :messages, only: [:create]
     resources :files, only: [:index, :create, :delete]
     get 'comments' => 'lesson_comments#index', as: :comments_of_course
@@ -40,23 +45,26 @@ Rails.application.routes.draw do
 
     # for attendence
     resources :students, only: [:index, :create]
+    post 'students/:id' => 'students#create'
 
     resources :files, only: [:index, :create, :delete]
   end
 
   resources :students, only: [:index, :show, :create, :update, :destroy] do
-    resources :courses, only: [:index, :update]
+    resources :courses, only: [:index, :update, :destroy]
     post 'courses/:id' => 'courses#create', as: :create_course
 
     resources :files, only: [:index, :create, :destroy]
     resources :lessons, only: [:show, :update] do
-      resources :files, only: [:show, :create, :destroy]
+      get 'comments' => 'lesson_comments#from_student'
+      resources :files, only: [:index, :show, :create, :destroy]
     end
     resources :messages, only: [:index]
   end
 
   resources :assistants, only: [:index, :show, :create, :update, :destroy] do
     resources :courses, only: [:index, :create]
+    post 'courses/:id' => 'courses#create'
     resources :files, only: [:index, :create]
   end
 
@@ -66,7 +74,7 @@ Rails.application.routes.draw do
 
   resources :files, only: [:show, :create, :destroy]
 
-  namespace :android do
+  namespace :apps do
     get 'current_version' => 'android_apps#current_version'
     post 'current_version' => 'android_apps#create'
   end
diff --git a/test/controllers/routes_test.rb b/test/controllers/routes_test.rb
new file mode 100644
index 0000000..577e42a
--- /dev/null
+++ b/test/controllers/routes_test.rb
@@ -0,0 +1,171 @@
+require 'test_helper'
+
+class RoutesTest < ActionController::TestCase
+
+  # /users/xx
+  test 'should generate user urls' do
+    assert_routing('users/current.json',
+                   { controller: 'users', action: 'current', format: 'json' })
+    assert_routing({ method: :post, path: 'users/sign_in.json' },
+                   { controller: 'users/sessions', action: 'create', format: 'json' })
+    assert_routing({ method: :delete, path: 'users/sign_out.json'},
+                   { controller: 'users/sessions', action: 'destroy', format: 'json' })
+    assert_routing('users/1.json',
+                   { controller: 'users', action: 'show', format: 'json', id: '1'})
+  end
+
+  # /semesters/xx
+  test 'should generate semester urls' do
+    assert_routing('/semesters.json',
+                   { controller: 'semesters', action: 'index', format: 'json' })
+    assert_routing({ method: :post, path: '/semesters.json' },
+                   { controller: 'semesters', action: 'create', format: 'json'})
+    assert_routing({ method: :put, path: '/semesters/1.json' },
+                   { controller: 'semesters', action: 'update', format: 'json',id: '1' })
+    assert_routing({ method: :delete, path: '/semesters/1.json' },
+                   { controller: 'semesters', action: 'destroy', format: 'json', id: '1' })
+    assert_routing('/semesters/1/courses.json',
+                   controller: 'courses', action: 'index', format: 'json', semester_id: '1')
+    assert_routing('/semesters/default.json',
+                   controller: 'semesters', action: 'default', format: 'json')
+  end
+
+  # /courses/xx
+  test 'should generate courses urls' do
+    assert_routing({ method: 'put', path: '/courses/1.json' },
+                   { controller: 'courses', action: 'update', format: 'json', id: '1' })
+    assert_routing({ method: 'get', path: '/courses/1.json' },
+                   { controller: 'courses', action: 'show', format: 'json', id: '1' })
+    assert_routing({ method: 'delete', path: '/courses/1.json' },
+                   { controller: 'courses', action: 'destroy', format: 'json', id: '1' })
+    assert_routing({ method: 'get', path: '/courses/1/teachers.json' },
+                   { controller: 'teachers', action: 'index', format: 'json', course_id: '1' })
+    assert_routing({ method: 'post', path: '/courses/1/teachers/2.json'},
+                   { controller: 'teachers', action: 'create', format: 'json', course_id: '1', id: '2'})
+    assert_routing({ method: 'delete', path: '/courses/1/teachers/2.json' },
+                   { controller: 'teachers', action: 'destroy', format: 'json', course_id: '1', id: '2'})
+    assert_routing({ method: 'get', path: '/courses/1/students.json'},
+                   { controller: 'students', action: 'index', format: 'json', course_id: '1'})
+    assert_routing({ method: 'get', path: '/courses/1/assistants.json'},
+                   { controller: 'assistants', action: 'index', format: 'json', course_id: '1'})
+    assert_routing({ method: 'post', path: '/courses/1/students/2.json'},
+                   { controller: 'students', action: 'create', format: 'json', course_id: '1', id: '2'})
+    assert_routing({ method: 'post', path: '/courses/1/assistants/2.json'},
+                   { controller: 'assistants', action: 'create', format: 'json', course_id: '1', id: '2'})
+    assert_routing({ method: 'get', path: '/courses/1/lessons.json'},
+                   { controller: 'lessons', action: 'index', format: 'json', course_id: '1'})
+    assert_routing({ method: 'post', path: '/courses/1/lessons.json'},
+                   { controller: 'lessons', action: 'create', format: 'json', course_id: '1'})
+    assert_routing({ method: 'delete', path: '/lessons/1.json' },
+                   { controller: 'lessons', action: 'destroy', format: 'json', id: '1' })
+  end
+
+  # /lessons/xx
+  test 'should generate lesson urls' do
+    assert_routing({ method: 'get', path: '/lessons/1.json' },
+                   { controller: 'lessons', action: 'show', format: 'json', id: '1' })
+    assert_routing({ method: 'get', path: '/lessons/1/comments.json' },
+                   { controller: 'lesson_comments', action: 'index', format: 'json', lesson_id: '1' })
+    assert_routing({ method: 'post', path: '/lessons/1/comments.json' },
+                   { controller: 'lesson_comments', action: 'create', format: 'json', lesson_id: '1' })
+    assert_routing({ method: 'get', path: '/lessons/1/students/2/comments.json' },
+                   { controller: 'student_comments', action: 'index', format: 'json', lesson_id: '1', student_id: '2' })
+    assert_routing({ method: 'post', path: '/lessons/1/students/2/comments.json' },
+                   { controller: 'student_comments', action: 'create', format: 'json', lesson_id: '1', student_id: '2' })
+    assert_routing({ method: 'post', path: '/lessons/1/comments.json' },
+                   { controller: 'lesson_comments', action: 'create', format: 'json', lesson_id: '1' })
+    assert_routing({ method: 'get', path: '/students/1/lessons/2/comments.json'},
+                   { controller: 'lesson_comments', action: 'from_student', format: 'json', student_id: '1', lesson_id: '2' })
+    assert_routing({ method: 'get', path: '/lessons/1/students.json' },
+                   { controller: 'students', action: 'index', format: 'json', lesson_id: '1' })
+    assert_routing({ method: 'post', path: '/lessons/1/students/2.json' },
+                   { controller: 'students', action: 'create', format: 'json', lesson_id: '1', id: '2' })
+    assert_routing({ method: 'get', path: '/lessons/1/files.json' },
+                   { controller: 'files', action: 'index', format: 'json', lesson_id: '1' })
+    assert_routing({ method: 'post', path: '/lessons/1/files.json' },
+                   { controller: 'files', action: 'create', format: 'json', lesson_id: '1' })
+  end
+
+  # /students/xx
+  test 'should generate students urls' do
+    assert_routing({ method: 'get', path: '/students/1.json' },
+                   { controller: 'students', action: 'show', format: 'json', id: '1' })
+    assert_routing({ method: 'get', path: '/students/1/files.json' },
+                   { controller: 'files', action: 'index', format: 'json', student_id: '1' })
+    assert_routing({ method: 'post', path: '/students/1/files.json' },
+                   { controller: 'files', action: 'create', format: 'json', student_id: '1' })
+    assert_routing({ method: 'delete', path: '/students/1/files/2.json' },
+                   { controller: 'files', action: 'destroy', format: 'json', student_id: '1', id: '2' })
+
+    assert_routing({ method: 'get', path: '/students/1/courses.json' },
+                   { controller: 'courses', action: 'index', format: 'json', student_id: '1' })
+    assert_routing({ method: 'post', path: '/students/1/courses/2.json' },
+                   { controller: 'courses', action: 'create', format: 'json', student_id: '1', id: '2' })
+    assert_routing({ method: 'delete', path: '/students/1/courses/2.json' },
+                   { controller: 'courses', action: 'destroy', format: 'json', student_id: '1', id: '2' })
+    assert_routing({ method: 'get', path: '/students/1/lessons/2/files.json' },
+                   { controller: 'files', action: 'index', format: 'json', student_id: '1', lesson_id: '2'})
+    assert_routing({ method: 'post', path: '/students/1/lessons/2/files.json' },
+                   { controller: 'files', action: 'create', format: 'json', student_id: '1', lesson_id: '2'})
+    assert_routing({ method: 'delete', path: '/students/1/lessons/2/files/3.json' },
+                   { controller: 'files', action: 'destroy', format: 'json', student_id: '1', lesson_id: '2', id: '3' })
+  end
+
+  # /assistants/xx
+  test 'should generate assistant urls' do
+    assert_routing({ method: 'get', path: '/assistants.json' },
+                   { controller: 'assistants', action: 'index', format: 'json' })
+    assert_routing({ method: 'get', path: '/assistants/1.json' },
+                   { controller: 'assistants', action: 'show', format: 'json', id: '1' })
+    assert_routing({ method: 'get', path: '/assistants/1/courses.json' },
+                   { controller: 'courses', action: 'index', format: 'json', assistant_id: '1' })
+    assert_routing({ method: 'post', path: '/assistants/1/courses/2.json' },
+                   { controller: 'courses', action: 'create', format: 'json', assistant_id: '1', id: '2' })
+    assert_routing({ method: 'get', path: '/assistants/1/files.json' },
+                   { controller: 'files', action: 'index', format: 'json', assistant_id: '1' })
+  end
+
+  # /teachers/xx
+  test 'should generate teacher urls' do
+    assert_routing({ method: 'get', path: '/teachers/1.json' },
+                   { controller: 'teachers', action: 'show', format: 'json', id: '1' })
+    assert_routing({ method: 'post', path: '/teachers.json' },
+                   { controller: 'teachers', action: 'create', format: 'json' })
+    assert_routing({ method: 'delete', path: '/teachers/1.json' },
+                   { controller: 'teachers', action: 'destroy', format: 'json', id: '1' })
+    assert_routing({ method: 'put', path: '/teachers/1.json' },
+                   { controller: 'teachers', action: 'update', format: 'json', id: '1' })
+    assert_routing({ method: 'get', path: '/teachers/1/courses.json' },
+                   { controller: 'courses', action: 'index', format: 'json', teacher_id: '1' })
+    assert_routing({ method: 'post', path: '/teachers/1/courses.json' },
+                   { controller: 'courses', action: 'create', format: 'json', teacher_id: '1' })
+  end
+
+  # about messages
+  test 'should generate message urls' do
+    assert_routing({ method: 'get', path: '/students/1/messages.json' },
+                   { controller: 'messages', action: 'index', format: 'json', student_id: '1' })
+    assert_routing({ method: 'post', path: '/courses/1/messages.json' },
+                   { controller: 'messages', action: 'create', format: 'json', course_id: '1' })
+  end
+
+  # /files/xx
+  test 'should generate file urls' do
+    assert_routing({ method: 'get', path: '/files/1.json' },
+                   { controller: 'files', action: 'show', format: 'json', id: '1' })
+    assert_routing({ method: 'post', path: '/files.json' },
+                   { controller: 'files', action: 'create', format: 'json' })
+    assert_routing({ method: 'delete', path: '/files/1.json' },
+                   { controller: 'files', action: 'destroy', format: 'json', id: '1' })
+  end
+
+  # /android/
+  test 'should generate android urls' do
+    assert_routing({ method: 'get', path: '/apps/current_version.json' },
+                   { controller: 'apps/android_apps', action: 'current_version', format: 'json' })
+    assert_routing({ method: 'post', path: '/apps/current_version.json' },
+                   { controller: 'apps/android_apps', action: 'create', format: 'json' })
+  end
+
+
+end
\ No newline at end of file
-- 
1.9.1

