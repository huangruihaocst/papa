From 3802cacaec8144b144eb0d0eb55c90e13a9dcf1b Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Mon, 5 Oct 2015 16:40:25 +0800
Subject: [PATCH 025/150] combine apis with rails backend, final version of
 android apis

---
 README.md                                          | 87 +++++++++++++---------
 app/assets/javascripts/students.coffee             |  3 +
 app/assets/stylesheets/students.scss               |  3 +
 app/controllers/application_controller.rb          | 16 ++++
 app/controllers/courses_controller.rb              | 65 ++++++++--------
 app/controllers/lessons_controller.rb              | 68 +++++++++--------
 app/controllers/students_controller.rb             | 37 +++++++++
 app/controllers/users_controller.rb                | 47 ------------
 app/helpers/students_helper.rb                     |  2 +
 app/models/course.rb                               |  2 +-
 app/models/lesson.rb                               |  4 +-
 app/models/participation.rb                        |  4 +-
 app/models/user.rb                                 |  1 +
 app/views/courses/index.json.jbuilder              |  8 ++
 app/views/courses/show.json.jbuilder               |  6 ++
 app/views/lessons/index.json.jbuilder              |  8 ++
 app/views/lessons/show.json.jbuilder               |  9 +++
 app/views/students/index.json.jbuilder             | 10 +++
 app/views/students/show.json.jbuilder              |  7 ++
 config/initializers/constants.rb                   |  4 +
 config/initializers/devise.rb                      |  2 +-
 config/routes.rb                                   | 71 +-----------------
 ...50930115150_add_lessons_studends_and_courses.rb |  2 +-
 db/schema.rb                                       |  2 +-
 test/controllers/courses_controller_test.rb        | 22 +++---
 test/controllers/lessons_controller_test.rb        | 23 +++---
 test/controllers/students_controller_test.rb       | 10 +++
 test/controllers/users_controller_test.rb          |  5 --
 test/fixtures/courses.yml                          |  3 +
 test/fixtures/lessons.yml                          |  3 +-
 test/fixtures/participations.yml                   | 11 +++
 test/fixtures/users.yml                            |  9 +++
 32 files changed, 306 insertions(+), 248 deletions(-)
 create mode 100644 app/assets/javascripts/students.coffee
 create mode 100644 app/assets/stylesheets/students.scss
 create mode 100644 app/controllers/students_controller.rb
 delete mode 100644 app/controllers/users_controller.rb
 create mode 100644 app/helpers/students_helper.rb
 create mode 100644 app/views/courses/index.json.jbuilder
 create mode 100644 app/views/courses/show.json.jbuilder
 create mode 100644 app/views/lessons/index.json.jbuilder
 create mode 100644 app/views/lessons/show.json.jbuilder
 create mode 100644 app/views/students/index.json.jbuilder
 create mode 100644 app/views/students/show.json.jbuilder
 create mode 100644 config/initializers/constants.rb
 create mode 100644 test/controllers/students_controller_test.rb
 delete mode 100644 test/controllers/users_controller_test.rb
 create mode 100644 test/fixtures/participations.yml
 create mode 100644 test/fixtures/users.yml

diff --git a/README.md b/README.md
index 5c603c7..94b96ea 100644
--- a/README.md
+++ b/README.md
@@ -56,45 +56,62 @@ and nginx configuration file:
 ##Database schema
 I'm busy...
 
-##APIs Usage
-Step1.  Token authentication
-    POST    xxx
+##Android端API使用方法
 
-Step2.  Get data from these URLs
+###基础
+Android客户端通过访问指定的URL获得一个JSON文件来访问数据库。
 
-    # for courses
-    GET /api/courses
-    GET /api/courses/1
-    GET /api/courses/name
-    POST /api/courses
-        
-    
-    # for lessons
-    GET /api/lessons
-    GET /api/lessons/1
-    GET /api/lessons/lesson_full_name
-    POST /api/lessons
-        parameters: name, description, start_time, end_time, position, course_id
-    
-    # for users(including students and assistants)
-    GET /api/users
-    GET /api/users/1
-    GET /api/users/name
+该JSON文件格式为：
+{ 
+    status: 'successful'/'failed' // 代表获取成功与否
+    reason: 'xxx'                 // 如果失败了， 这里显示失败原因
+    \*CONTENT\*                   // 其余部分每个URL不同，对于每个URL请在下一章节看对应的数据格式
+}
+
+###各个URL对应JSON文件格式, 以及各个URL功能简介
+
+    标记方法：
+    HTTP方法 URL              功能             JSON格式(GET)/URL参数(POST/UPDATE/DELETE)
         
-or in rails way
     
-    [Ruby code]
-    namespace :api do
-        resources :courses do 
-            resources :lessons
-        end
-        resources :lessons do
-            resources :students
-        end
-        resources :students do
-            resources :lessons
-        end
-    end
+    列表：
+    GET    /courses.json             获得所有课程         "courses": [{"id": 1, "name": "xxx"}, ...]
+    GET    /courses/1.json           获得ID为1的课程      "course": { "id": 1, "name": "xxx" }
+    GET    /courses/1/students.json  获得id=1课的所有学生 "students": [{"id": 1, "name": "xx"}, ...]
+  
+    GET    /courses/1/lessons.json   获得id=1课所有实验课 "lessons": ["id": 1, "name": "xx"]
+
+    GET    /students.json            获得所有学生         "students": [{"id":1, "name": "xx"..]
+    GET    /students/1.json          获得id=1学生的信息   "student": [{"id":1, "name": "xx"}, ..]
+    GET    /students/1/courses.json  获得id=1学生所有的课程 "courses": [{"id": 1, "name": "xxx"}, ..]
+   
+举例：得到一个课程id=1的所有学生列表
+   
+```Java
+[Java code]
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+
+class Main {
+    void main(String args[]) {
+        HttpGet httpRequest = new HttpGet("http://localhost:3000/courses/1/students.json");
+        HttpResponse httpResponse = httpClient.execute(httpRequest);  
+        // if successful
+        if (httpResponse.getStatusLine().getStatusCode() == 200) {
+            strResult = EntityUtils.toString(httpResponse.getEntity());
+            // here, strResult is
+            //  {
+            //      "status": "successful",
+            //      "students": [
+            //          { "id": 1, "name": "Alex Wang" },
+            //          { "id": 2, "name": "Fuck Shit" }
+            //      ]
+            //  }
+        }
+    }
+}
+
+```
 
 ##TODO
 1.  Database Schema
diff --git a/app/assets/javascripts/students.coffee b/app/assets/javascripts/students.coffee
new file mode 100644
index 0000000..24f83d1
--- /dev/null
+++ b/app/assets/javascripts/students.coffee
@@ -0,0 +1,3 @@
+# Place all the behaviors and hooks related to the matching controller here.
+# All this logic will automatically be available in application.js.
+# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/app/assets/stylesheets/students.scss b/app/assets/stylesheets/students.scss
new file mode 100644
index 0000000..322a620
--- /dev/null
+++ b/app/assets/stylesheets/students.scss
@@ -0,0 +1,3 @@
+// Place all the styles related to the students controller here.
+// They will automatically be included in application.css.
+// You can use Sass (SCSS) here: http://sass-lang.com/
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index d83690e..1df4626 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -2,4 +2,20 @@ class ApplicationController < ActionController::Base
   # Prevent CSRF attacks by raising an exception.
   # For APIs, you may want to use :null_session instead.
   protect_from_forgery with: :exception
+
+  def json_failed(reason = nil)
+    if reason
+      render json: { status: 'failed', reason: reason }
+    else
+      render json: { status: 'failed' }
+    end
+  end
+  def json_successful
+    render json: { status: 'successful' }
+  end
+
+  def html_failed(reason = nil)
+    redirect_to '/404.html'
+  end
+
 end
diff --git a/app/controllers/courses_controller.rb b/app/controllers/courses_controller.rb
index afdfbe3..9c1386d 100644
--- a/app/controllers/courses_controller.rb
+++ b/app/controllers/courses_controller.rb
@@ -1,42 +1,45 @@
 class CoursesController < ApplicationController
 
-  # returns a json that:
-  #   { "status": "success"/"failed", "ids": [the IDs of all courses] }
-  def api_index
-    ids = []
-    Course.all.each do |course|
-      ids.push(course.id)
+  before_action :set_course, only: [:show]
+
+  # GET /courses
+  # GET /courses.json
+  def index
+    @courses = Course.all
+  end
+
+  # GET /courses/1
+  # GET /courses/1.json
+  def show
+    unless @course
+      respond_to do |format|
+        format.html { html_failed('not found') }
+        format.json { json_failed('not found') }
+      end
     end
-    render json: {
-      status: 'success',
-      ids:    ids
-    }
   end
 
-  def api_show
-    begin
-      course = Course.find(params[:id])
-      render json: {
-                 status: 'success',
-                 result: {
-                     id:          course.id,
-                     name:        course.name,
-                     exp_count:   course.lessons.count
-                 }
-             }
-    rescue ActiveRecord::RecordNotFound
-      render json: {
-                 status: 'not-found'
-             }
+  # POST /courses
+  def create
+    @course =  Course.create(params.require(:course).permit(:name))
+    respond_to do |format|
+      if @course.valid?
+        format.html { redirect_to @course }
+        format.json { json_successful }
+      else
+        format.html { html_failed }
+        format.json { json_failed('invalid params') }
+      end
     end
   end
 
-  def api_add
-    course =  Course.create(params.require(:course).permit(:name))
-    if course.valid?
-      render json: { status: 'success' }
-    else
-      render json: { status: 'fail' }
+  private
+  def set_course
+    begin
+      @course = Course.find(params[:id])
+    rescue ActiveRecord::RecordNotFound
+      @course = nil
     end
   end
+
 end
diff --git a/app/controllers/lessons_controller.rb b/app/controllers/lessons_controller.rb
index e6db15b..d58763b 100644
--- a/app/controllers/lessons_controller.rb
+++ b/app/controllers/lessons_controller.rb
@@ -1,44 +1,48 @@
 
 class LessonsController < ApplicationController
 
-  def api_index
-    ids = []
-    Lesson.all.each do |lesson|
-      ids.push(lesson.id)
+  before_action :set_lesson, only: [:show]
+
+  # GET /lessons
+  # GET /lessons.json
+  def index
+    @lessons = Lesson.all
+  end
+
+  # GET /lessons/1
+  # GET /lessons/1.json
+  def show
+    unless @lesson
+      respond_to do |format|
+        format.html { html_failed('not found') }
+        format.json { json_failed('not found') }
+      end
     end
-    render json: {
-               status: 'success',
-               ids: ids
-           }
   end
 
-  def api_show
-    begin
-      lesson = Lesson.find(params[:id])
-      render json: {
-                 status: 'success',
-                 result: {
-                     id:          lesson.id,
-                     name:        lesson.name,
-                     start_time:  lesson.start_time,
-                     end_time:    lesson.end_time,
-                     position:    lesson.position
-                 }
-             }
-    rescue ActiveRecord::RecordNotFound
-      render json: {
-                 status: 'not-found'
-             }
+  # POST /lessons
+  def create
+    @lesson =  Lesson.create(
+        params.require(:lesson).
+            permit(:name, :description, :start_time, :end_time, :location, :course_id))
+
+    respond_to do |format|
+      if @lesson.valid?
+        format.html { redirect_to @lesson }
+        format.json { json_successful }
+      else
+        format.html { html_failed }
+        format.json { json_failed }
+      end
     end
   end
 
-  def api_add
-    lesson =  Lesson.create(params.require(:lesson).permit(:name, :description, :start_time, :end_time, :position, :course_id))
-    puts lesson.name
-    if lesson.valid?
-      render json: { status: 'success' }
-    else
-      render json: { status: 'fail' }
+  private
+  def set_lesson
+    begin
+      @lesson = Lesson.find(params[:id])
+    rescue ActiveRecord::RecordNotFound
+      @lesson = nil
     end
   end
 
diff --git a/app/controllers/students_controller.rb b/app/controllers/students_controller.rb
new file mode 100644
index 0000000..9eced0d
--- /dev/null
+++ b/app/controllers/students_controller.rb
@@ -0,0 +1,37 @@
+class StudentsController < ApplicationController
+
+  before_action :set_student, only: [:show]
+
+  def index
+    course = Course.find(params[:course_id])
+    participations = course.participations.where(role: ROLE_STUDENT)
+    @students = User.none
+    participations.each do |p|
+      @students << p.student
+    end
+  end
+
+  def show
+    unless @student
+      respond_to do |format|
+        format.json { json_failed('not found') }
+      end
+    end
+  end
+
+  private
+  def set_student
+    begin
+      student = User.find(params[:id])
+      @participation = student.participations.where(course_id: params[:course_id])
+      if @participation.role == ROLE_STUDENT
+        @student = student
+      else
+        @student = nil
+      end
+    rescue ActiveRecord::RecordNotFound
+      @student = nil
+    end
+  end
+
+end
diff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb
deleted file mode 100644
index ec573a7..0000000
--- a/app/controllers/users_controller.rb
+++ /dev/null
@@ -1,47 +0,0 @@
-class UsersController < ApplicationController
-  def api_index
-    ids = []
-    User.all.each do |user|
-      ids.push(user.id)
-    end
-    render json: {
-               status: 'success',
-               ids: ids
-           }
-  end
-
-  def api_show
-    begin
-      user = User.find(params[:id])
-      render json: {
-                 status: 'success',
-                 result: {
-                     id:          user.id,
-                     name:        user.name,
-                 }
-             }
-    rescue ActiveRecord::RecordNotFound
-      render json: {
-                 status: 'not-found'
-             }
-    end
-  end
-
-  def api_find
-    begin
-      user = User.find_by_name(params[:name])
-      render json: {
-                 status: 'success',
-                 result: {
-                     id:          user.id,
-                     name:        user.name,
-                 }
-             }
-    rescue ActiveRecord::RecordNotFound
-      render json: {
-                 status: 'not-found'
-             }
-    end
-  end
-
-end
\ No newline at end of file
diff --git a/app/helpers/students_helper.rb b/app/helpers/students_helper.rb
new file mode 100644
index 0000000..6191d9e
--- /dev/null
+++ b/app/helpers/students_helper.rb
@@ -0,0 +1,2 @@
+module StudentsHelper
+end
diff --git a/app/models/course.rb b/app/models/course.rb
index 238af87..5a3651e 100644
--- a/app/models/course.rb
+++ b/app/models/course.rb
@@ -2,7 +2,7 @@ class Course < ActiveRecord::Base
   validates :name, presence: true
 
   has_many :lessons
-  has_many :participants
+  has_many :participations
 
   has_many :teacher_courses
   has_many :teachers, through: :teacher_courses
diff --git a/app/models/lesson.rb b/app/models/lesson.rb
index 1911a40..41afb78 100644
--- a/app/models/lesson.rb
+++ b/app/models/lesson.rb
@@ -3,7 +3,7 @@ class Lesson < ActiveRecord::Base
   # description, nullable
   validates :start_time,  presence: true
   validates :end_time,    presence: true
-  validates :position,    presence: true
+  validates :location,    presence: true
 
-  belongs_to :courses
+  belongs_to :course
 end
diff --git a/app/models/participation.rb b/app/models/participation.rb
index 439b74b..2eaa0f6 100644
--- a/app/models/participation.rb
+++ b/app/models/participation.rb
@@ -4,7 +4,7 @@ class Participation < ActiveRecord::Base
   validates_associated :users
   validates_associated :courses
 
-  belongs_to :users
-  belongs_to :courses
+  belongs_to :user
+  belongs_to :course
 
 end
\ No newline at end of file
diff --git a/app/models/user.rb b/app/models/user.rb
index b1020da..a8687bc 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -5,5 +5,6 @@ class User < ActiveRecord::Base
          :recoverable, :rememberable, :trackable, :validatable
   # phone, name, email
 
+  has_many :participations
   has_many :courses, through: :participations
 end
diff --git a/app/views/courses/index.json.jbuilder b/app/views/courses/index.json.jbuilder
new file mode 100644
index 0000000..d5855fd
--- /dev/null
+++ b/app/views/courses/index.json.jbuilder
@@ -0,0 +1,8 @@
+
+json.status STATUS_SUCCESS
+json.courses do
+  json.array!(@courses) do |course|
+    json.extract! course, :id
+  end
+end
+
diff --git a/app/views/courses/show.json.jbuilder b/app/views/courses/show.json.jbuilder
new file mode 100644
index 0000000..4cc2bf1
--- /dev/null
+++ b/app/views/courses/show.json.jbuilder
@@ -0,0 +1,6 @@
+
+json.status STATUS_SUCCESS
+json.course do
+  json.id     @course.id
+  json.name   @course.name
+end
diff --git a/app/views/lessons/index.json.jbuilder b/app/views/lessons/index.json.jbuilder
new file mode 100644
index 0000000..f52b977
--- /dev/null
+++ b/app/views/lessons/index.json.jbuilder
@@ -0,0 +1,8 @@
+
+json.status STATUS_SUCCESS
+json.lessons do
+  json.array!(@lessons) do |lesson|
+    json.extract! lesson, :id
+  end
+end
+
diff --git a/app/views/lessons/show.json.jbuilder b/app/views/lessons/show.json.jbuilder
new file mode 100644
index 0000000..e7a37e4
--- /dev/null
+++ b/app/views/lessons/show.json.jbuilder
@@ -0,0 +1,9 @@
+
+json.status STATUS_SUCCESS
+json.lesson do
+  json.id         @lesson.id
+  json.name       @lesson.name
+  json.start_time @lesson.start_time
+  json.end_time   @lesson.end_time
+  json.location   @lesson.location
+end
diff --git a/app/views/students/index.json.jbuilder b/app/views/students/index.json.jbuilder
new file mode 100644
index 0000000..2471e20
--- /dev/null
+++ b/app/views/students/index.json.jbuilder
@@ -0,0 +1,10 @@
+
+json.status STATUS_SUCCESS
+json.students do
+  json.array!(@students) do |student|
+    json.extract! student, :id
+    json.extract! student, :name
+    json.extract! student, :phone
+  end
+end
+
diff --git a/app/views/students/show.json.jbuilder b/app/views/students/show.json.jbuilder
new file mode 100644
index 0000000..e298307
--- /dev/null
+++ b/app/views/students/show.json.jbuilder
@@ -0,0 +1,7 @@
+
+json.status STATUS_SUCCESS
+json.student do
+  json.id     @student.id
+  json.name   @student.name
+  json.phone  @student.phone
+end
\ No newline at end of file
diff --git a/config/initializers/constants.rb b/config/initializers/constants.rb
new file mode 100644
index 0000000..ad4f13d
--- /dev/null
+++ b/config/initializers/constants.rb
@@ -0,0 +1,4 @@
+
+ROLE_STUDENT = 'student'
+STATUS_SUCCESS = 'successful'
+STATUS_FAIL = 'failed'
\ No newline at end of file
diff --git a/config/initializers/devise.rb b/config/initializers/devise.rb
index c6cd874..c7620b2 100644
--- a/config/initializers/devise.rb
+++ b/config/initializers/devise.rb
@@ -31,7 +31,7 @@ Devise.setup do |config|
   # session. If you need permissions, you should implement that in a before filter.
   # You can also supply a hash where the value is a boolean determining whether
   # or not authentication should be aborted when the value is not present.
-  config.authentication_keys = [:email]
+  config.authentication_keys = [:email, :phone]
 
   # Configure parameters from the request object used for authentication. Each entry
   # given should be a request method and it will automatically be passed to the
diff --git a/config/routes.rb b/config/routes.rb
index 9167ad3..0c7761b 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -1,74 +1,11 @@
 Rails.application.routes.draw do
-  devise_for :users
-
-  namespace :api do
-    namespace :courses do
-      root to: '/courses#api_index'
-      get 'index'   => '/courses#api_index'
-      get ':id'     => '/courses#api_show', constraints: { id: '[0-9]+' }
-      post '/'      => '/courses#api_add'
-    end
 
-    namespace :lessons do
-      root to: '/lessons#api_index'
-      get 'index' => '/lessons#api_index'
-      get ':id'   => '/lessons#api_show', constraints: { id: '[0-9]+' }
-      post '/'    => '/lessons#api_add'
-    end
+  devise_for :users
 
+  resources :courses do
+    resources :students
   end
-  # The priority is based upon order of creation: first created -> highest priority.
-  # See how all your routes lay out with "rake routes".
-
-  # You can have the root of your site routed with "root"
-  # root 'welcome#index'
-
-  # Example of regular route:
-  #   get 'products/:id' => 'catalog#view'
-
-  # Example of named route that can be invoked with purchase_url(id: product.id)
-  #   get 'products/:id/purchase' => 'catalog#purchase', as: :purchase
-
-  # Example resource route (maps HTTP verbs to controller actions automatically):
-  #   resources :products
-
-  # Example resource route with options:
-  #   resources :products do
-  #     member do
-  #       get 'short'
-  #       post 'toggle'
-  #     end
-  #
-  #     collection do
-  #       get 'sold'
-  #     end
-  #   end
-
-  # Example resource route with sub-resources:
-  #   resources :products do
-  #     resources :comments, :sales
-  #     resource :seller
-  #   end
-
-  # Example resource route with more complex sub-resources:
-  #   resources :products do
-  #     resources :comments
-  #     resources :sales do
-  #       get 'recent', on: :collection
-  #     end
-  #   end
 
-  # Example resource route with concerns:
-  #   concern :toggleable do
-  #     post 'toggle'
-  #   end
-  #   resources :posts, concerns: :toggleable
-  #   resources :photos, concerns: :toggleable
+  resources :lessons
 
-  # Example resource route within a namespace:
-  #   namespace :admin do
-  #     # Directs /admin/products/* to Admin::ProductsController
-  #     # (app/controllers/admin/products_controller.rb)
-  #     resources :products
-  #   end
 end
diff --git a/db/migrate/20150930115150_add_lessons_studends_and_courses.rb b/db/migrate/20150930115150_add_lessons_studends_and_courses.rb
index d23eefc..eff16c5 100644
--- a/db/migrate/20150930115150_add_lessons_studends_and_courses.rb
+++ b/db/migrate/20150930115150_add_lessons_studends_and_courses.rb
@@ -11,7 +11,7 @@ class AddLessonsStudendsAndCourses < ActiveRecord::Migration
       t.text    :description
       t.datetime  :start_time
       t.datetime  :end_time
-      t.string  :position
+      t.string  :location
       t.integer :course_id
     end
 
diff --git a/db/schema.rb b/db/schema.rb
index 90e7a66..41c53bb 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -23,7 +23,7 @@ ActiveRecord::Schema.define(version: 20150930115150) do
     t.text     "description"
     t.datetime "start_time"
     t.datetime "end_time"
-    t.string   "position"
+    t.string   "location"
     t.integer  "course_id"
   end
 
diff --git a/test/controllers/courses_controller_test.rb b/test/controllers/courses_controller_test.rb
index b57535a..7c4af81 100644
--- a/test/controllers/courses_controller_test.rb
+++ b/test/controllers/courses_controller_test.rb
@@ -3,28 +3,30 @@ require 'test_helper'
 class CoursesControllerTest < ActionController::TestCase
 
   test 'api should get all courses' do
-    get :api_index
+    get :index, format: :json
     json = JSON.parse(@response.body)
-    assert_equal json['status'], 'success'
-    assert json['ids'].count > 0
+    assert_equal json['status'], STATUS_SUCCESS
+    assert json['courses'].count > 0
   end
 
   test 'api should get course by id' do
-    get :api_show, { id: Course.first.id }
+    get :show, format: :json, id: Course.first.id
     json = JSON.parse(@response.body)
-    assert_equal json['status'], 'success'
-    assert_not_nil json['result']['name']
+    assert_equal json['status'], STATUS_SUCCESS
+    assert_not_nil json['course']['name']
   end
 
-  test 'api should add course' do
+  test 'api should create course' do
     assert_difference 'Course.count' do
-      post :api_add, course: { name: 'test course' }
+      post :create, course: { name: 'test course' }
     end
   end
 
-  test 'api should not add bad course' do
+  test 'api should not create bad course' do
     assert_no_difference 'Course.count' do
-      post :api_add, course: { name1: 'bad name' }
+      post :create, format: :json, course: { name1: 'bad name' }
     end
+    json = JSON.parse(@response.body)
+    assert_equal json['status'], STATUS_FAIL
   end
 end
diff --git a/test/controllers/lessons_controller_test.rb b/test/controllers/lessons_controller_test.rb
index 35d77de..85ad593 100644
--- a/test/controllers/lessons_controller_test.rb
+++ b/test/controllers/lessons_controller_test.rb
@@ -3,38 +3,37 @@ require 'test_helper'
 class LessonsControllerTest < ActionController::TestCase
 
   test 'api should get all lessons' do
-    get :api_index
+    get :index, format: :json
     json = JSON.parse(@response.body)
-    assert_equal json['status'], 'success'
-    assert json['ids'].count > 0
+    assert_equal json['status'], STATUS_SUCCESS
+    assert json['lessons'].count > 0
   end
 
   test 'api should get lesson by id' do
-    get :api_show, { id: Lesson.first.id }
+    get :show, format: :json, id: Lesson.first.id
     json = JSON.parse(@response.body)
-    assert_equal json['status'], 'success'
-    assert_not_nil json['result']['name']
+    assert_equal json['status'], STATUS_SUCCESS
+    assert_not_nil json['lesson']['name']
   end
 
   test 'api should add lesson' do
     assert_difference('Lesson.count') do
-      post :api_add, lesson: {
+      post :create, format: :json, lesson: {
                        name: 'test lesson',
                        start_time: '2015/10/10 10:20:30',
                        end_time: '2015/10/10 10:20:30',
-                       position: '"name": "here"',
+                       location: '"name": "here"',
                        course_id: 1
                    }
     end
-    assert_equal JSON.parse(@response.body)['status'], 'success'
+    assert_equal JSON.parse(@response.body)['status'], STATUS_SUCCESS
   end
 
   test 'api should not add bad lesson' do
-
     assert_no_difference('Lesson.count') do
-      post :api_add, lesson: { bad_name: 'bad name' }
+      post :create, format: :json, lesson: { bad_name: 'bad name' }
     end
-    assert_equal JSON.parse(@response.body)['status'], 'fail'
+    assert_equal JSON.parse(@response.body)['status'], STATUS_FAIL
   end
 
 
diff --git a/test/controllers/students_controller_test.rb b/test/controllers/students_controller_test.rb
new file mode 100644
index 0000000..383cc5a
--- /dev/null
+++ b/test/controllers/students_controller_test.rb
@@ -0,0 +1,10 @@
+require 'test_helper'
+
+class StudentsControllerTest < ActionController::TestCase
+  test 'api should get students by course' do
+    get :index, { format: :json, course_id: Course.find_by_name('Operation System').id }
+    json = JSON.parse(@response.body)
+    assert_equal json['status'], STATUS_SUCCESS
+    assert json['students'].is_a? Array
+  end
+end
diff --git a/test/controllers/users_controller_test.rb b/test/controllers/users_controller_test.rb
deleted file mode 100644
index 87d4874..0000000
--- a/test/controllers/users_controller_test.rb
+++ /dev/null
@@ -1,5 +0,0 @@
-require 'test_helper'
-
-class UsersControllerTest < ActionController::TestCase
-
-end
diff --git a/test/fixtures/courses.yml b/test/fixtures/courses.yml
index 1a66aa8..4edf95b 100644
--- a/test/fixtures/courses.yml
+++ b/test/fixtures/courses.yml
@@ -9,3 +9,6 @@ compiler:
 
 cpp:
   name: Programming C++
+
+ds:
+  name: Data Structures
\ No newline at end of file
diff --git a/test/fixtures/lessons.yml b/test/fixtures/lessons.yml
index c3d75fd..8b4eb9d 100644
--- a/test/fixtures/lessons.yml
+++ b/test/fixtures/lessons.yml
@@ -1,7 +1,8 @@
 
 exp1:
+  course: os
   name: test lesson 1
   start_time: 2015/10/10 10:20:30
   end_time: 2015/10/10 10:20:30
-  position: here
+  location: here
   course_id: 1
diff --git a/test/fixtures/participations.yml b/test/fixtures/participations.yml
new file mode 100644
index 0000000..89a3668
--- /dev/null
+++ b/test/fixtures/participations.yml
@@ -0,0 +1,11 @@
+alex_os:
+  user: alex
+  course: os
+
+betty_os:
+  user: betty
+  course: cpp
+
+alex_ds:
+  user: alex
+  course: cpp
\ No newline at end of file
diff --git a/test/fixtures/users.yml b/test/fixtures/users.yml
new file mode 100644
index 0000000..2745feb
--- /dev/null
+++ b/test/fixtures/users.yml
@@ -0,0 +1,9 @@
+alex:
+  name: 'alex'
+  phone: '123'
+  email: 'a@b.c'
+
+betty:
+  name: 'betty'
+  phone: '122'
+  email: 'c@d.c'
\ No newline at end of file
-- 
1.9.1

