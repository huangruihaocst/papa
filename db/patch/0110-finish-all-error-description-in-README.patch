From 4f7652fe04e9a76641f7da2e8c7d6c268f261ced Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Tue, 20 Oct 2015 21:44:01 +0800
Subject: [PATCH 110/150] finish all error description in README

---
 README.md                                     | 260 +++++++++++++++++++-------
 app/controllers/android_apps_controller.rb    |   4 +-
 app/controllers/application_controller.rb     |  30 +++
 app/controllers/assistants_controller.rb      |  27 ++-
 app/controllers/courses_controller.rb         |  56 ++----
 app/controllers/files_controller.rb           |  15 +-
 app/controllers/lesson_comments_controller.rb |   1 +
 app/controllers/lessons_controller.rb         |  36 ++--
 app/controllers/messages_controller.rb        |  20 +-
 app/controllers/semesters_controller.rb       |  57 ++++--
 app/controllers/students_controller.rb        |  26 ++-
 app/controllers/teachers_controller.rb        |  48 ++++-
 app/controllers/users/sessions_controller.rb  |   4 +-
 app/controllers/users_controller.rb           |   2 +-
 app/helpers/application_helper.rb             |   4 +-
 config/initializers/constants.rb              |   2 +
 config/routes.rb                              |   7 +-
 17 files changed, 420 insertions(+), 179 deletions(-)

diff --git a/README.md b/README.md
index a241735..4c91a8d 100644
--- a/README.md
+++ b/README.md
@@ -71,134 +71,260 @@ Android客户端通过访问指定的URL获得一个JSON文件来访问数据库
     \*CONTENT\*                    // 其余部分每个URL不同，对于每个URL请在下一章节看对应的数据格式
 }
 
-###登陆
-POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[remember_me]=0
-                                                ^                  ^
-                                  此处可以是电话或者email    密码为明文，用https保证安全性 注意要 URL-Encode
-                                  上面对号的utf-8编码值为0xE2 0x9C 0x93
-返回json
-{ 
-    status: 'successful'/'faild',
-    reason: 'invalid_password...', // 具体含义在后面介绍
-    token: '123456777777777',
-    id: 123
-}
-得到token字符串, 在以下url中会用到
-
 ###各个URL对应JSON文件格式, 以及各个URL功能简介
 标注:
     1. xxx parameter代表http参数，在后边会说明
     2. xxx 代表xxx类对象的json，在后面说明
     3. \[xxx, ...\] 代表xxx类对象数组的json，在后面说明
     4. 注意: #!表示已经弃用的api, ?代表新增加的api
+    5. 每个API下面的缩进行代表错误返回信息的定义
+    6. 如果url错误, 均返回失败, reason: invalid_operation
     
     标记方法：
     HTTP方法 URL                      功能                JSON格式(GET)/URL参数(POST/UPDATE/DELETE)     Token
     
-    列表
+    # namespace user
+    # 用户相关
+    POST    /users/sign_in.json       登陆               utf8=✓&user[login]=xxx&user[password]=123&user[remember_me]=0
+        返回:  token: '123456777777777', id: 123
+        *上面对号的utf-8编码值为0xE2 0x9C 0x93                                                          Everyone
+    DELETE  /users/sign_out.json      注销                                                             User       
+        暂时不检查错误
+    POST    /users.json               注册普通用户, 非(老师或管理员)                                    Everyone
+        not_implemented
+    PUT     /users/1.json             修改用户信息                                                      User
+        not_implemented
+
     # namespace semesters
     GET    /semesters.json               获得所有学年     "semesters": [semester, ...]                  Student
+        always successful
     POST   /semesters.json               添加一个学年     semester parameters                           Admin
+        permission_denied: 不是管理员
+        internal_error: 其他内部错误, 如果遇到请联系我
     PUT    /semesters/1.json             修改学年信息     semester parameters                           Admin
+        permission_denied: 不是管理员
+        resource_not_found: semester_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
     DELETE /semesters/1.json             删除某个学年     id                                            Admin
-    GET    /semesters/1/courses.json     获得某个学年的所有课程 "courses": [course, ...]                 Student
-    GET    /semesters/default.json       获得默认学期     "semester": semester                          Student   
+        permission_denied: 不是管理员
+        resource_not_found: semester_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
+    GET    /semesters/1/courses.json     获得某个学年的所有课程 "courses": [course, ...]                Student
+        resource_not_found: semester_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
+    GET    /semesters/default.json       获得默认学期     "semester": semester                          Student 
+        invalid_fields: 总学年数为0
     
     # namespace courses
     # 课程相关
-    #!GET    /courses.json             获得所有课程(包含所有学年的) "courses": [course, ...]               Student
-    #!POST   /courses.json             添加课程             course parameters                             Teacher
     PUT    /courses/1.json           修改课程             course parameters                             Teacher
-    DELETE /courses/1.json           删除课程             id                                            Teacher
+        permission_denied: 当前用户不是该课程的老师
+        internal_error: 其他内部错误, 如果遇到请联系我
     GET    /courses/1.json           获得ID为1的课程      "course": { "id": 1, "name": "xxx" }          Student
-    
+        resource_not_found: invalid course_id
+    DELETE /courses/1.json           删除课程             id                                            Teacher
+        permission_denied: 当前用户不是该课程的老师
+        internal_error: 其他内部错误, 如果遇到请联系我
+
     # 与课程有关系的资源
     GET    /courses/1/teachers.json  获取该门课所有老师   "teachers": { id, ... }                        Student
-    #!POST   /courses/1/teachers.json  添加老师             teacher parameters                            Teacher
-    ?POST   /courses/1/teachers/1.json 把老师添加到课程                                                 Admin
-    #!PUT    /courses/1/teachers.json  修改老师             teacher parameters                            Teacher
-    DELETE /courses/1/teachers/1.json 从课程中删除老师       id                                           Admin
-    
-    GET    /courses/1/students.json  获得id=1课的所有学生 "students": [student, ...]                    Assistant
-    #!POST   /courses/1/students.json  添加学生              
-    DELETE /courses/1/students/1.json 删除学生
-    ?POST   /courses/1/students/1.json 添加学生到指定课程
-    GET    /courses/1/assistants.json 类似上一个          "assistants": [assistant, ...]                Student
-    #!POST   /courses/1/assistants.json 添加助教            id                                            Teacher
-    #!DELETE /courses/1/assistants/1.json 删除助教
+        invalid_operation: course_id未指定
+        resource_not_found: course_id不存在
+    ?POST   /courses/1/teachers/1.json 把老师添加到课程                                                  Admin
+        permission_denied: 不是管理员
+        resource_not_found: course_id或teacher_id不存在
+    DELETE /courses/1/teachers/1.json 从课程中删除老师       id                                          Admin
+        permission_denied: 不是管理员
+        resource_not_found: course_id或teacher_id不存在
+    GET    /courses/1/students.json  获得id=1课的所有学生 "students": [student, ...]                     Teacher
+        resource_not_found: course_id不存在
+        permission_denied: 不是该课程的老师
+    GET    /courses/1/assistants.json 类似上一个          "assistants": [assistant, ...]                 Teacher(Student?)
+        resource_not_found: course_id不存在
+        permission_denied: 不是该课程的老师
+    ?POST   /courses/1/students/1.json 添加学生到指定课程                                                Teacher
+        resource_not_found: course_id不存在
+        permission_denied: 不是该课程的老师
+        internal_error: 其他内部错误, 如果遇到请联系我
     ?POST   /courses/1/assistants/1.json 添加助教到指定课程                                              Teacher
-    
-    GET    /courses/1/lessons.json   获得id=1课所有实验课 "lessons": ["id": 1, "name": "xx"]            Student
-    POST   /courses/1/lessons.json   向课程中添加实验课
-    #!DELETE /courses/1/lessons/1.json 从课程中删除实验课
+        not_implemented
+    GET    /courses/1/lessons.json   获得id=1课所有实验课 "lessons": ["id": 1, "name": "xx"]             Student
+        resource_not_found: course_id不存在
+    POST   /courses/1/lessons.json   向课程中添加实验课                                                  Teacher
+        permission_denied: 不是该课程的老师
+        invalid_fields: lesson参数无效
     ?DELETE /lessons/1.json          删掉实验课
+        暂时不检查错误
+    ?GET    /courses/1/comments.json  得到某门课程所有学生的所有评论                                      Teacher
+        not_implemented(罗干要求)
     
     # namespace lessons
-    GET    /lessons/1.json           获得某门实验课的信息  "lesson": lesson                             Student
-    #!GET    /lessons/1/comments.json  获得某门课程的评价    "comments": [comment, ...]                   Teacher
-    ?GET    /lessons/1/comments.json  获得某门课程的评价    "lesson_comments": [lesson_comment, ...]                   Teacher
-    POST   /lessons/1/comments.json  添加学生对课程的评价(当前登陆用户)  lesson comment parameters                    Student
-    #!GET    /lessons/1/students/1/comments.json 查看助教对学生的评价 "student_comments": [student_comment,...] Student
+    GET    /lessons/1.json           获得某门实验课的信息  "lesson": lesson                              Student
+        resource_not_found: lesson_id不存在
+    ?GET    /lessons/1/comments.json  获得某门课程的评价    "lesson_comments": [lesson_comment, ...]     Teacher
+        暂时不检查错误
+    POST   /lessons/1/comments.json  添加学生对课程的评价(当前登陆用户)  lesson comment parameters        Student
+        暂时不检查错误
     ?GET   /lessons/1/students/1/comment.json  助教对学生的评价 "student_comment": student_comment
+        暂时不检查错误
     POST   /lessons/1/students/1/comments.json 助教对学生的评价 student comment parameters              Assistant
+        暂时不检查错误
     GET    /students/1/lessons/1/comments.json 查看学生对课程的所有评价 "lesson_comments": [student_comment,...] Teacher
-    GET    /lessons/1/students.json  某门实验课的到课学生列表 students id                               Teacher
+        暂时不检查错误
+    GET    /lessons/1/students.json  某门实验课的到课学生列表 students id                                Teacher
+        not_implemented
     POST   /lessons/1/students/1.json 学生签到                                                          Student
+        not_implemented
     GET    /lessons/1/files.json     获得该门实验课的简介文件
+        resource_not_found: lesson_id不存在
+        invalid_fields: file参数或type参数未指定或者格式不正确
+        file_too_big: 文件大小超过指定大小(100M, 该数值请查看config/initializers/constants.rb)
     POST   /lessons/1/files.json     向课程中添加文件
-    
+        resource_not_found: lesson_id不存在
+        **注意, 如果lesson_id不正确或者超出范围, 不会返回错误, 只会查不到数据
+   
     # namespace students
     # 学生相关
-    #!GET    /students.json            获得（默认课程的）所有学生     "students": [{"id":1, "name": "xx"..] 
-    GET    /students/1.json          获得id=1学生的信息   "student": [{"id":1, "name": "xx"}, ..]       Student
-    #!POST   /students.json            添加一个学生         student parameters                            Teacher
-    #!PUT    /students/1.json          修改学生             student parameters                            Student
-    #!DELETE /students/1.json          删除学生             id                                            Teacher
-    
-    # 文件相关
+    GET    /students/1.json          获得id=1学生的信息   "student": [{"id":1, "name": "xx"}, ..]        Student
+        resource_not_found: student_id不存在
     GET    /students/1/files.json    获得学生所有文件列表   "files": [{"id":1, "type": "jpg", "path": "xx"}...]  Student 
+        permission_denied: 当前用户不是student_id
+        **注意, 如果lesson_id不正确或者超出范围, 不会返回错误, 只会查不到数据
     POST   /students/1/files.json    学生添加文件                                                        Student
+        resource_not_found: student_id不存在
+        permission_denied: student_id和当前用户不匹配, 或者lesson_id不属于student_id
+        invalid_fields: file参数或type参数未指定或者格式不正确
+        file_too_big: 文件大小超过指定大小(100M, 该数值请查看config/initializers/constants.rb)
     DELETE /students/1/files/1.json  删除文件                                                            Creator
+        resource_not_found: file_id不存在
+        permission_denied: 当前用户不是文件创建者
+        **注意这里忽略student_id
     
-    # 课程实验课相关
+    # 课程/实验课相关
     GET    /students/1/courses.json  获得所有课程           "courses": [course...]                       Student
-    #!PUT    /students/1/courses.json  修改学生课程列表                                                    Teacher
-    POST   /students/1/courses/1.json       给学生添加课程
-    DELETE /students/1/courses/1.json       给学生删除课程
-    #!GET    /students/1/lessons/1.json       获得学生课程的信息，包括成绩     "course": course_score       Student
-    #!PUT    /students/1/lessons/1.json       修改学生课程信息                                             Assistant  
+        permission_denied: student_id和当前登陆用户不匹配
+        resource_not_found: student_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
+    POST   /students/1/courses/1.json       给学生添加课程                                               Student
+        permission_denied: student_id和当前登陆用户不匹配
+        resource_not_found: student_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
+    DELETE /students/1/courses/1.json       把学生从课程中移除                                            Teacher
+        permission_denied: 当前用户不是该课程的老师
+        resource_not_found: student_id不存在或者course_id不存在或者student_id和不在course_id的学生列表中
+        internal_error: 其他内部错误, 如果遇到请联系我
+
     GET    /students/1/lessons/1/files.json 获得某门实验课某个学生的所有文件 "files": [file, ...]         Student
-    POST   /students/1/lessons/1/files.json 在某门实验课上添加视频图片                                      Student
+        permission_denied: student_id和当前登陆用户不匹配
+        **注意, 如果lesson_id不正确或者超出范围, 不会返回错误, 只会查不到数据
+        
+    POST   /students/1/lessons/1/files.json 在某门实验课上添加视频图片                                    Student
+        permission_denied: 一下三条至少有一条不满足:
+            1. 用户已经登陆或当前token有效
+            2. student_id包含在lesson_id对应的课程的学生名单中
+            3. 当前用户是student_id或当前用户在lesson_id的助教名单中
+        invalid_fields: file参数或type参数未指定或者格式不正确
+        file_too_big: 文件大小超过指定大小(100M, 该数值请查看config/initializers/constants.rb)
+    
     DELETE /students/1/lessons/1/files/1.json 在某门实验课上删除视频照片
+        resource_not_found: file_id不存在
+        permission_denied: 当前用户不是文件创建者
+        **注意这里忽略student_id和lesson_id
     
     GET    /assistants.json           获得所有助教信息      "assistant": [assistant, ...]                Student
+        not_implemented(该API是否有用?)
     GET    /assistants/1.json         获得某个助教信息      "assistant": assistant                       Assistant
+        resource_not_found: 助教不存在
+        permission_denied: 当前用户不是assistant_id
     GET    /assistants/1/courses.json 获得某个助教的所有课程 "courses": [course, ...]                    Assistant
-    GET    /assistants/files.json     助教上传的所有文件    "files": [file, ...]                         Assistant
-    
+        permission_denied: assistant_id和当前用户不匹配
+        resource_not_found: assistant_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
+    ?POST  /assistants/1/courses/1.json 给某个助教添加某门课                                             Assistant
+        permission_denied: assistant_id和当前用户不匹配
+        resource_not_found: assistant_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
+    GET    /assistants/1/files.json   助教上传的所有文件    "files": [file, ...]                         Assistant
+        permission_denied: 当前用户和assistant_id不匹配
+        resource_not_found: lesson_id不存在
+        
+    # 老师相关
     GET    /teachers/1.json           获得某个老师的信息    "teacher": teacher                           Student
+        resource_not_found: teacher_id不存在
     POST   /teachers.json             添加老师              teacher parameters                           Admin
+        not_implemented
     DELETE /teachers/1.json           删除老师              id                                           Admin
+        resource_not_found: teacher_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
     UPDATE /teachers/1.json           修改老师信息          teacher parameters                           The Teacher
+        not_implemented
     GET    /teachers/1/courses.json   获得老师的所有课程    "courses": [course, ...]                     Student
+        permission_denied: teacher_id和当前登陆用户不匹配
+        resource_not_found: teacher_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
     POST   /teachers/1/courses.json   给老师添加课程        course parameters                            Teacher
-    
+        permission_denied: teacher_id和当前登陆用户不匹配
+        resource_not_found: teacher_id不存在
+        internal_error: 其他内部错误, 如果遇到请联系我
+
     # 消息推送
     GET    /students/1/messages.json  查询学生的所有消息     "messages": [message ...]                   Student
+        resource_not_found: student_id不存在
+        permission_denied: student_id和当前用户不匹配
     POST   /courses/1/messages.json   发送消息到某门课的所有学生 "message": message                      Assistant
+        resource_not_found: course_id不存在
+        permission_denied: 当前用户不是course_id的老师且不是course_id的助教
+        invalid_field: message创建参数取值范围或类型错误
     
     # 文件相关
     GET    /files/1.json             得到该文件的信息        "file": file
+        resource_not_found: file_id不存在
     POST   /files.json               上传文件                file parameters 
+        permission_denied: 未登录
+        file_too_big: 文件大小超过指定大小(100M, 该数值请查看config/initializers/constants.rb)
     DELETE /files/1.json             删除自己上传的文件                                                  Creator           
-    
+        resource_not_found: file_id不存在
+        permission_denied: 当前用户不是文件创建者
     # 用户相关
     GET    /users/current.json       获取当前用户id          "id": "123"                                 Current User
-    
+        permission_denied: 未登录
+
     # App更新
     GET    /android/current_version.json 得到当前最新版本号  {"version": "xx", "apk_path": "xx"}         Student
+        always successful
     POST   /android/current_version.json 上传apk            version=xx apk                              Admin
+        permission_denied: 当前用户不是管理员
+        
+Deprecated APIs:
+
+    #!DELETE /courses/1/students/1.json 删除学生
+    #!GET    /courses.json             获得所有课程(包含所有学年的) "courses": [course, ...]               Student
+    #!POST   /courses.json             添加课程             course parameters                             Teacher
+    #!POST   /courses/1/teachers.json  添加老师             teacher parameters                            Teacher
+    #!GET    /students/1/lessons/1.json       获得学生课程的信息，包括成绩     "course": course_score       Student
+    #!PUT    /students/1/lessons/1.json       修改学生课程信息                                             Assistant  
+    #!PUT    /students/1/courses.json  修改学生课程列表                                                    Teacher
+    #!POST   /students.json            添加一个学生         student parameters                            Teacher
+    #!PUT    /students/1.json          修改学生             student parameters                            Student
+    #!DELETE /students/1.json          删除学生             id                                            Teacher
+    #!GET    /students.json            获得（默认课程的）所有学生     "students": [{"id":1, "name": "xx"..] 
+    #!POST   /courses/1/assistants.json 添加助教            id                                            Teacher
+    #!DELETE /courses/1/assistants/1.json 删除助教
+    #!GET    /lessons/1/comments.json  获得某门课程的评价    "comments": [comment, ...]                   Teacher
+    #!GET    /lessons/1/students/1/comments.json 查看助教对学生的评价 "student_comments": [student_comment,...] Student
+    #!DELETE /courses/1/lessons/1.json 从课程中删除实验课
+    #!PUT    /courses/1/teachers.json  修改老师             teacher parameters                            Teacher
+    #!POST   /courses/1/students.json  添加学生              
     
+API Status:
+
+    Total History:      83
+    Deprecated:         18
+    Total Valid:        62
+    Not Implemented:    9
+    Not Secured:        6
+    Fully Finished:     50
+        
 Http Parameters/JSON对象格式
     
     注意：以semester举例,在URL中格式均为
@@ -269,13 +395,15 @@ Http Parameters/JSON对象格式
             path=string(not required)
             
 ###reason的可能值和含义
-REASON_TOKEN_INVALID = 'token_invalid'      // token没有指定或者无效，应该检查url参数
-REASON_TOKEN_TIMEOUT = 'token_timeout'      // token过时了，应该重新登陆
+REASON_TOKEN_INVALID = 'token_invalid'      // token没有指定或者无效，请检查url参数
+REASON_TOKEN_TIMEOUT = 'token_timeout'      // token过时了，请重新登陆
 REASON_TOKEN_NOT_MATCH = 'token_not_match'  // id和token不匹配或者id不存在
 REASON_INVALID_OPERATION = 'invalid_operation' // 访问了不存在的url
+...其他值可以在相应的API处找到
 
 ##TODO
-1.  Authentication Control.  
+1. Simplify Code
+2. Optimize Code/Database
     
 ##Design
 
diff --git a/app/controllers/android_apps_controller.rb b/app/controllers/android_apps_controller.rb
index 0d178b8..1fb134d 100644
--- a/app/controllers/android_apps_controller.rb
+++ b/app/controllers/android_apps_controller.rb
@@ -8,10 +8,12 @@ class AndroidAppsController < ApplicationController
 
   # POST /android_apps/current_version.json
   def create
+    check_admin
+
     if AndroidApp.create(params.require(:android_app).permit(:version, :file_resource_id))
       json_successful
     else
-      json_failed
+      json_failed(REASON_INVALID_FIELD)
     end
   end
 
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index f0b283a..af9cea5 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -102,6 +102,36 @@ class ApplicationController < ActionController::Base
 
   end
 
+  def must_be_a_teacher_of(token, course)
+    raise TokenException.new(REASON_TOKEN_INVALID) unless course && course.is_a?(Course)
+
+    if token
+      begin
+        token = Token.find_by_token(token)
+        raise TokenException.new(REASON_TOKEN_INVALID) unless token
+        user = token.user
+      rescue
+        if current_user
+          user = current_user
+        else
+          raise TokenException.new(REASON_TOKEN_INVALID)
+        end
+      end
+    else
+      if current_user
+        user = current_user
+      else
+        raise TokenException.new(REASON_TOKEN_INVALID)
+      end
+    end
+
+    if course.teachers.include? user
+      true
+    else
+      raise TokenException.new(REASON_PERMISSION_DENIED)
+    end
+  end
+
   include ApplicationHelper::StatusRenderingHelpers
 
   protected
diff --git a/app/controllers/assistants_controller.rb b/app/controllers/assistants_controller.rb
index c9e04d8..20e7f91 100644
--- a/app/controllers/assistants_controller.rb
+++ b/app/controllers/assistants_controller.rb
@@ -8,15 +8,32 @@ class AssistantsController < ApplicationController
   end
 
   def index
-    course = Course.find(params[:course_id] || 1)
-    participations = course.participations.where(role: ROLE_ASSISTANT)
-    @assistants = User.none
-    participations.each do |p|
-      @assistants <<= p.user
+    if params[:course_id]
+      begin
+        course = Course.find(params[:course_id])
+        must_be_a_teacher_of(param[:token], course)
+
+        participations = course.participations.where(role: ROLE_ASSISTANT)
+        @assistants = User.none
+        participations.each do |p|
+          @assistants <<= p.user
+        end
+      rescue ActiveRecord::RecordNotFound
+        json_failed(REASON_RESOURCE_NOT_FOUND)
+      end
+    else
+      json_failed(REASON_NOT_IMPLEMENTED)
     end
   end
 
   def show
+    unless @assistant
+      json_failed(REASON_RESOURCE_NOT_FOUND)
+    end
+  end
+
+  def create
+    json_failed(REASON_NOT_IMPLEMENTED)
   end
 
   private
diff --git a/app/controllers/courses_controller.rb b/app/controllers/courses_controller.rb
index 7a8ba60..f0eb177 100644
--- a/app/controllers/courses_controller.rb
+++ b/app/controllers/courses_controller.rb
@@ -30,16 +30,14 @@ class CoursesController < ApplicationController
           json_failed
       end
     rescue ActiveRecord::RecordNotFound
-      json_failed
+      json_failed(REASON_RESOURCE_NOT_FOUND)
     end
   end
 
   # GET /courses/1.json
   def show
     unless @course
-      respond_to do |format|
-        format.json { json_failed('not found') }
-      end
+      json_failed(REASON_RESOURCE_NOT_FOUND)
     end
   end
 
@@ -76,16 +74,16 @@ class CoursesController < ApplicationController
             json_failed
           end
         else
-          json_failed
+          json_failed(REASON_INVALID_OPERATION)
       end
     rescue
-      json_failed
+      json_failed(REASON_RESOURCE_NOT_FOUND)
     end
   end
 
   # PUT /courses/1.json
   def update
-    must_by_a_teacher_of(@course)
+    must_be_a_teacher_of(params[:token], @course)
     if @course.update(params.require(:course).permit(:name, :description, :semester_id))
       json_successful
     else
@@ -97,19 +95,21 @@ class CoursesController < ApplicationController
   # DELETE /students/1/courses/1.json
   # DELETE /assistants/1/courses/1.json
   def destroy
-    must_by_a_teacher_of(@course)
+    must_be_a_teacher_of(params[:token], @course)
     case
       when params[:student_id]
-        if Participation.where(user_id: params[:student_id], course_id: @course.id, role: ROLE_STUDENT).first.destroy
+        p = Participation.where(user_id: params[:student_id], course_id: @course.id, role: ROLE_STUDENT)
+        if p.count > 0 && p.first.destroy
           json_successful
         else
-          json_failed
+          json_failed(REASON_RESOURCE_NOT_FOUND)
         end
       when params[:assistant_id]
-        if Participation.where(user_id: params[:assistant_id], course_id: @course.id, role: ROLE_ASSISTANT).first.destroy
+        p = Participation.where(user_id: params[:assistant_id], course_id: @course.id, role: ROLE_ASSISTANT)
+        if p.first.destroy
           json_successful
         else
-          json_failed
+          json_failed(REASON_RESOURCE_NOT_FOUND)
         end
       when @course
         if @course.destroy
@@ -122,7 +122,6 @@ class CoursesController < ApplicationController
     end
   end
 
-  private
   def set_course
     begin
       @course = Course.find(params[:id])
@@ -130,35 +129,4 @@ class CoursesController < ApplicationController
       @course = nil
     end
   end
-
-  def must_by_a_teacher_of(course)
-    raise TokenException.new(REASON_TOKEN_INVALID) unless course && course.is_a?(Course)
-
-    if params[:token]
-      begin
-        token = Token.find_by_token(params[:token])
-        raise TokenException.new(REASON_TOKEN_INVALID) unless token
-        user = token.user
-      rescue
-        if current_user
-          user = current_user
-        else
-          raise TokenException.new(REASON_TOKEN_INVALID)
-        end
-      end
-    else
-      if current_user
-        user = current_user
-      else
-        raise TokenException.new(REASON_TOKEN_INVALID)
-      end
-    end
-
-    if course.teachers.include? user
-      true
-    else
-      raise TokenException.new(REASON_PERMISSION_DENIED)
-    end
-  end
-
 end
diff --git a/app/controllers/files_controller.rb b/app/controllers/files_controller.rb
index 5fc7b6a..147fe47 100644
--- a/app/controllers/files_controller.rb
+++ b/app/controllers/files_controller.rb
@@ -17,15 +17,20 @@ class FilesController < ApplicationController
       when params[:course_id]
         @files = Course.find(params[:course_id]).attached_files
       else
-        json_failed
+        json_failed(REASON_INVALID_OPERATION)
     end
   end
 
   # GET /files/1.json
   def show
-    @file = FileResource.find(params[:id])
+    begin
+      @file = FileResource.find(params[:id])
+    rescue ActiveRecord::RecordNotFound
+      json_failed(REASON_RESOURCE_NOT_FOUND)
+    end
   end
 
+
   # POST /files.json
   # POST /students/1/files.json
   # POST /courses/1/files.json
@@ -84,7 +89,7 @@ class FilesController < ApplicationController
             CourseFile.create(file_resource_id: @file.id, course_id: course.id)
           else
             @file.destroy
-            json_failed
+            json_failed(REASON_PERMISSION_DENIED)
             return
           end
         end
@@ -94,7 +99,7 @@ class FilesController < ApplicationController
         end
       rescue ActiveRecord::RecordNotFound
         @file.destroy
-        json_failed
+        json_failed(REASON_RESOURCE_NOT_FOUND)
       end
     else
       @file.destroy
@@ -109,7 +114,7 @@ class FilesController < ApplicationController
     begin
       @file = FileResource.find(params[:id])
     rescue ActiveRecord::RecordNotFound
-      json_failed(REASON_TOKEN_NOT_MATCH)
+      json_failed(REASON_RESOURCE_NOT_FOUND)
       return
     end
 
diff --git a/app/controllers/lesson_comments_controller.rb b/app/controllers/lesson_comments_controller.rb
index cecc897..5e65eaa 100644
--- a/app/controllers/lesson_comments_controller.rb
+++ b/app/controllers/lesson_comments_controller.rb
@@ -1,6 +1,7 @@
 class LessonCommentsController < ApplicationController
 
   # GET /lessons/1/comments.json
+  # GET /courses/1/comments.json
   def index
     if params[:lesson_id]
       @lesson_comments = Lesson.find(params[:lesson_id]).lesson_comments
diff --git a/app/controllers/lessons_controller.rb b/app/controllers/lessons_controller.rb
index 6a4af07..73ab93f 100644
--- a/app/controllers/lessons_controller.rb
+++ b/app/controllers/lessons_controller.rb
@@ -6,37 +6,43 @@ class LessonsController < ApplicationController
   # GET /courses/1/lessons.json
   def index
     if params[:course_id]
-      @lessons = Course.find(params[:course_id]).lessons
+      begin
+        @lessons = Course.find(params[:course_id]).lessons
+      rescue ActiveRecord::RecordNotFound
+        json_failed(REASON_RESOURCE_NOT_FOUND)
+      end
     else
-      json_failed
+      json_failed(REASON_INVALID_OPERATION)
     end
   end
 
   # GET /lessons/1.json
   def show
     unless @lesson
-      respond_to do |format|
-        format.html { html_failed('not found') }
-        format.json { json_failed('not found') }
-      end
+      json_failed(REASON_RESOURCE_NOT_FOUND)
     end
   end
 
   # POST /courses/1/lessons.json
   def create
-    @lesson = Course.find(params[:course_id]).lessons.create(
+    begin
+      @course = Course.find(params[:course_id])
+    rescue ActiveRecord::RecordNotFound
+      json_failed(REASON_RESOURCE_NOT_FOUND)
+      return
+    end
+
+    must_be_a_teacher_of(params[:token], @course)
+
+    @lesson = @course.lessons.create(
         params.require(:lesson).
         permit(:name, :description, :start_time, :end_time, :location).
             merge({ course_id: params[:course_id] }))
 
-    respond_to do |format|
-      if @lesson.valid?
-        format.html { redirect_to @lesson }
-        format.json { json_successful }
-      else
-        format.html { html_failed }
-        format.json { json_failed }
-      end
+    if @lesson.valid?
+      json_successful
+    else
+      json_failed(REASON_INVALID_FIELD)
     end
   end
 
diff --git a/app/controllers/messages_controller.rb b/app/controllers/messages_controller.rb
index 8996788..ed45465 100644
--- a/app/controllers/messages_controller.rb
+++ b/app/controllers/messages_controller.rb
@@ -13,14 +13,26 @@ class MessagesController < ApplicationController
         json_failed(REASON_PERMISSION_DENIED)
       end
     rescue ActiveRecord::RecordNotFound
-      json_failed_invalid_fields([:student_id])
+      json_failed(REASON_RESOURCE_NOT_FOUND)
     end
 
   end
 
   # POST /courses/1/messages.json
   def create
-    admin = check_admin
+    user = check_login
+
+    begin
+      course = Course.find(params[:course_id])
+    rescue ActiveRecord::RecordNotFound
+      json_failed(REASON_RESOURCE_NOT_FOUND)
+      return
+    end
+
+    unless course.teachers.include?(user) || course.assistants.include?(user)
+      json_failed(REASON_PERMISSION_DENIED)
+      return
+    end
 
     @message = Message.create(
         params.require(
@@ -28,7 +40,7 @@ class MessagesController < ApplicationController
         ).permit(
             :title, :deadline, :content
         ).merge(
-            creator_id:   admin.id,
+            creator_id:   user.id,
             message_type: params[:message][:type],
             course_id:    params[:course_id]
         )
@@ -37,7 +49,7 @@ class MessagesController < ApplicationController
     if @message && @message.valid?
       json_successful
     else
-      json_failed
+      json_failed(REASON_INVALID_FIELD)
     end
   end
 end
diff --git a/app/controllers/semesters_controller.rb b/app/controllers/semesters_controller.rb
index 43c44a1..75d6099 100644
--- a/app/controllers/semesters_controller.rb
+++ b/app/controllers/semesters_controller.rb
@@ -5,37 +5,56 @@ class SemestersController < ApplicationController
   end
 
   def default
-    @semester = Semester.all.order(:name).last
+    if Semester.count > 0
+      @semester = Semester.all.order(:name).last
+    else
+      json_failed(REASON_INVALID_FIELD)
+    end
   end
 
   def create
-    respond_to do |format|
-      if Semester.create(params.require(:semester).permit(:name))
-        format.json { json_successful }
-      else
-        format.json { json_failed }
-      end
+    check_admin
+
+    if Semester.create(params.require(:semester).permit(:name))
+      json_successful
+    else
+      json_failed
     end
   end
 
   def update
-    respond_to do |format|
-      if Semester.find(params[:id]).update(params.require(:semester).permit(:name))
-        format.json { json_successful }
-      else
-        format.json { json_failed }
-      end
+    check_admin
+
+    begin
+      @semester = Semester.find(params[:id])
+    rescue ActiveRecord::RecordNotFound
+      json_failed(REASON_RESOURCE_NOT_FOUND)
+      return
+    end
+    
+    if @semester.update(params.require(:semester).permit(:name))
+      json_successful
+    else
+      json_failed
     end
   end
 
   def destroy
-    respond_to do |format|
-      if Semester.find(params[:id]).destroy
-        format.json { json_successful }
-      else
-        format.json { json_failed }
-      end
+    check_admin
+
+    begin
+      @semester = Semester.find(params[:id])
+    rescue ActiveRecord::RecordNotFound
+      json_failed(REASON_RESOURCE_NOT_FOUND)
+      return
+    end
+
+    if @semester.destroy
+      json_successful
+    else
+      json_failed
     end
+
   end
 
 end
diff --git a/app/controllers/students_controller.rb b/app/controllers/students_controller.rb
index aed3c8f..0d47c85 100644
--- a/app/controllers/students_controller.rb
+++ b/app/controllers/students_controller.rb
@@ -11,25 +11,37 @@ class StudentsController < ApplicationController
   # GET /courses/1/students.json (student list of the course)
   def index
     if params[:course_id]
-      course = Course.find(params[:course_id])
-      participations = course.participations.where(role: ROLE_STUDENT)
-      @students = User.none
-      participations.each do |p|
-        @students <<= p.user
+      begin
+        course = Course.find(params[:course_id])
+        must_be_a_teacher_of(param[:token], course)
+
+        participations = course.participations.where(role: ROLE_STUDENT)
+        @students = User.none
+        participations.each do |p|
+          @students <<= p.user
+        end
+      rescue ActiveRecord::RecordNotFound
+        json_failed(REASON_RESOURCE_NOT_FOUND)
       end
     else
-      json_failed
+      json_failed(REASON_NOT_IMPLEMENTED)
     end
   end
 
   # GET /students/1.json
   def show
-    @student = User.find(params[:id])
+    begin
+      @student = User.find(params[:id])
+    rescue ActiveRecord::RecordNotFound
+      json_failed(REASON_RESOURCE_NOT_FOUND)
+    end
   end
 
   # POST /courses/1/students/1.json
   def create
     if params[:course_id] && params[:id]
+      course =  Course.find(params[:course_id])
+      must_be_a_teacher_of(params[:token], course)
       if Participation.create(user_id: params[:id], course_id: params[:course_id], role: ROLE_STUDENT)
         json_successful
       else
diff --git a/app/controllers/teachers_controller.rb b/app/controllers/teachers_controller.rb
index 1d2789c..4ff81fb 100644
--- a/app/controllers/teachers_controller.rb
+++ b/app/controllers/teachers_controller.rb
@@ -2,7 +2,15 @@ class TeachersController < ApplicationController
 
   # GET /courses/1/teachers.json
   def index
-    @teachers = Course.find(params[:course_id]).teachers
+    if params[:course_id]
+      begin
+        @teachers = Course.find(params[:course_id]).teachers
+      rescue ActiveRecord::RecordNotFound
+        json_failed(REASON_RESOURCE_NOT_FOUND)
+      end
+    else
+      json_failed(REASON_INVALID_OPERATION)
+    end
   end
 
   # POST /courses/1/teachers/1.json
@@ -20,13 +28,32 @@ class TeachersController < ApplicationController
           json_failed
         end
       rescue ActiveRecord::RecordNotFound
-        json_failed_invalid_fields([:course_id, :id])
+        json_failed(REASON_RESOURCE_NOT_FOUND)
       end
     else
       json_failed(REASON_NOT_IMPLEMENTED)
     end
   end
 
+  # GET /teachers/1.json
+  def show
+    if params[:id]
+      begin
+        @teacher = User.find(param[:id])
+        unless @teacher.is_teacher
+          json_failed(REASON_RESOURCE_NOT_FOUND)
+        end
+      rescue ActiveRecord::RecordNotFound
+        json_failed(REASON_RESOURCE_NOT_FOUND)
+      end
+    end
+  end
+
+  # PUT /teachers/1.json
+  def update
+    json_failed(REASON_NOT_IMPLEMENTED)
+  end
+
   # DELETE /courses/1/teachers/1.json
   # DELETE /teachers/1.json
   def destroy
@@ -41,10 +68,23 @@ class TeachersController < ApplicationController
           json_failed
         end
       rescue ActiveRecord::RecordNotFound
-        json_failed_invalid_fields([:course_id, :id])
+        json_failed(REASON_RESOURCE_NOT_FOUND)
+      end
+    elsif params[:id]
+      check_admin
+      begin
+        @teacher = User.find(params[:id])
+        json_failed(REASON_RESOURCE_NOT_FOUND) unless @teacher.is_teacher
+        if @teacher.destroy
+          json_successful
+        else
+          json_failed
+        end
+      rescue ActiveRecord::RecordNotFound
+        json_failed(REASON_RESOURCE_NOT_FOUND)
       end
     else
-      json_failed(REASON_NOT_IMPLEMENTED)
+      json_failed(REASON_INVALID_OPERATION)
     end
   end
 
diff --git a/app/controllers/users/sessions_controller.rb b/app/controllers/users/sessions_controller.rb
index 987800b..ea68848 100644
--- a/app/controllers/users/sessions_controller.rb
+++ b/app/controllers/users/sessions_controller.rb
@@ -7,7 +7,7 @@ module Users
     #   super
     # end
 
-    #POST /resource/sign_in
+    #POST /users/sign_in
     def create
       respond_to do |format|
         format.html { super }
@@ -20,7 +20,7 @@ module Users
       end
     end
 
-    # DELETE /resource/sign_out
+    # DELETE /users/sign_out
     def destroy
       respond_to do |format|
         format.html { super }
diff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb
index b84bd8e..4b715d3 100644
--- a/app/controllers/users_controller.rb
+++ b/app/controllers/users_controller.rb
@@ -3,7 +3,7 @@ class UsersController < ApplicationController
     if current_user
       render json: { status: STATUS_SUCCESS, id: current_user.id.to_s }
     else
-      json_failed
+      json_failed(REASON_PERMISSION_DENIED)
     end
   end
 end
\ No newline at end of file
diff --git a/app/helpers/application_helper.rb b/app/helpers/application_helper.rb
index 2a090cd..9b5f3cf 100644
--- a/app/helpers/application_helper.rb
+++ b/app/helpers/application_helper.rb
@@ -15,9 +15,7 @@ module ApplicationHelper
       end
 
       if reason
-        render json: { status: 'failed', reason: reason }.merge(addition)
-      else
-        render json: { status: 'failed' }.merge(addition)
+        render json: { status: 'failed', reason: reason ? reason : REASON_INTERNAL_ERROR }.merge(addition)
       end
     end
 
diff --git a/config/initializers/constants.rb b/config/initializers/constants.rb
index 2c9ad1a..fd2ee51 100644
--- a/config/initializers/constants.rb
+++ b/config/initializers/constants.rb
@@ -14,6 +14,8 @@ REASON_TOKEN_TIMEOUT = 'token_timeout'
 REASON_TOKEN_NOT_MATCH = 'token_not_match'
 REASON_NOT_IMPLEMENTED = 'not_implemented'
 REASON_INVALID_OPERATION = 'invalid_operation'
+REASON_RESOURCE_NOT_FOUND = 'resource_not_found'
+REASON_INTERNAL_ERROR = 'internal_error'
 
 # json parameters when a user post an invalid json.
 REASON_INVALID_FIELD = 'invalid_field'
diff --git a/config/routes.rb b/config/routes.rb
index 56fb21f..4ffa8cf 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -24,6 +24,7 @@ Rails.application.routes.draw do
     resources :teachers, only: [:index, :create, :destroy, :update]
     resources :messages, only: [:create]
     resources :files, only: [:index, :create, :delete]
+    get 'comments' => 'lesson_comments#index', as: :comments_of_course
   end
 
   resources :lessons, only: [:show, :destroy] do
@@ -54,13 +55,13 @@ Rails.application.routes.draw do
     resources :messages, only: [:index]
   end
 
-  resources :assistants do
+  resources :assistants, only: [:index, :show, :create, :update, :destroy] do
     resources :courses, only: [:index, :create]
     resources :files, only: [:index, :create]
   end
 
-  resources :teachers do
-    resources :courses, only: [:index, :create]
+  resources :teachers, only: [:index, :show, :create, :update, :destroy] do
+    resources :courses, only: [:index, :create, :update, :destroy]
   end
 
   resources :files, only: [:show, :create, :destroy]
-- 
1.9.1

