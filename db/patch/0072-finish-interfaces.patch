From 8a5d42a89b2213fb04f4388b52b99fa169dc250e Mon Sep 17 00:00:00 2001
From: Alex Wang <ice_b0und@hotmail.com>
Date: Mon, 12 Oct 2015 22:35:26 +0800
Subject: [PATCH 072/150] finish interfaces

---
 README.md                                          | 61 ++++++++++++---------
 app/controllers/android_apps_controller.rb         | 16 ++++++
 app/controllers/files_controller.rb                | 32 +++++++++++
 app/controllers/lesson_comments_controller.rb      | 18 +++++-
 app/controllers/messages_controller.rb             | 19 +++++++
 app/controllers/student_comments_controller.rb     | 22 ++++++++
 app/controllers/students_controller.rb             | 26 +++++++++
 app/models/assistant_file.rb                       |  5 ++
 app/models/course.rb                               |  2 +
 app/models/course_file.rb                          |  5 ++
 app/models/lesson.rb                               |  6 +-
 app/models/lesson_comment.rb                       |  6 ++
 app/models/lesson_file.rb                          |  1 +
 app/models/lesson_remark.rb                        |  6 --
 app/models/student_comment.rb                      |  6 ++
 app/models/student_file.rb                         |  5 ++
 app/models/student_remark.rb                       |  6 --
 app/models/user.rb                                 |  9 +--
 app/views/files/index.json.jbuilder                |  6 ++
 app/views/files/show.json.jbuilder                 |  6 ++
 app/views/lesson_comments/index.json.jbuilder      |  8 +++
 app/views/messages/index.json.jbuilder             |  7 +++
 app/views/student_comments/index.json.jbuilder     |  9 +++
 config/routes.rb                                   |  5 +-
 ...50930115150_add_lessons_studends_and_courses.rb | 25 ++++++++-
 db/schema.rb                                       | 35 +++++++++---
 test/controllers/files_controller_test.rb          | 64 +++++++++++++++++++++-
 .../controllers/lesson_comments_controller_test.rb | 17 ++++++
 test/controllers/messages_controller_test.rb       | 32 ++++++++++-
 .../student_comments_controller_test.rb            | 34 +++++++++++-
 test/fixtures/assistant_files.yml                  |  4 ++
 test/fixtures/course_files.yml                     |  4 ++
 test/fixtures/file_resources.yml                   | 15 ++---
 test/fixtures/lesson_comments.yml                  |  6 ++
 test/fixtures/lesson_files.yml                     | 15 ++---
 test/fixtures/lesson_remarks.yml                   | 11 ----
 test/fixtures/lessons.yml                          |  2 +-
 test/fixtures/messages.yml                         | 18 +++---
 test/fixtures/student_comments.yml                 |  6 ++
 test/fixtures/student_files.yml                    |  4 ++
 test/fixtures/student_remarks.yml                  | 11 ----
 test/models/lesson_remark_test.rb                  |  7 ---
 test/models/student_remark_test.rb                 |  7 ---
 43 files changed, 472 insertions(+), 137 deletions(-)
 create mode 100644 app/models/assistant_file.rb
 create mode 100644 app/models/course_file.rb
 create mode 100644 app/models/lesson_comment.rb
 delete mode 100644 app/models/lesson_remark.rb
 create mode 100644 app/models/student_comment.rb
 create mode 100644 app/models/student_file.rb
 delete mode 100644 app/models/student_remark.rb
 create mode 100644 app/views/files/index.json.jbuilder
 create mode 100644 app/views/files/show.json.jbuilder
 create mode 100644 app/views/lesson_comments/index.json.jbuilder
 create mode 100644 app/views/messages/index.json.jbuilder
 create mode 100644 app/views/student_comments/index.json.jbuilder
 create mode 100644 test/fixtures/assistant_files.yml
 create mode 100644 test/fixtures/course_files.yml
 create mode 100644 test/fixtures/lesson_comments.yml
 delete mode 100644 test/fixtures/lesson_remarks.yml
 create mode 100644 test/fixtures/student_comments.yml
 create mode 100644 test/fixtures/student_files.yml
 delete mode 100644 test/fixtures/student_remarks.yml
 delete mode 100644 test/models/lesson_remark_test.rb
 delete mode 100644 test/models/student_remark_test.rb

diff --git a/README.md b/README.md
index 6b50471..cbf7d49 100644
--- a/README.md
+++ b/README.md
@@ -90,6 +90,7 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     1. xxx parameter代表http参数，在后边会说明
     2. xxx 代表xxx类对象的json，在后面说明
     3. \[xxx, ...\] 代表xxx类对象数组的json，在后面说明
+    4. 注意: #!表示已经弃用的api, ?代表新增加的api
     
     标记方法：
     HTTP方法 URL                      功能                JSON格式(GET)/URL参数(POST/UPDATE/DELETE)     Token
@@ -114,17 +115,18 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     # 与课程有关系的资源
     GET    /courses/1/teachers.json  获取该门课所有老师   "teachers": { id, ... }                        Student
     #!POST   /courses/1/teachers.json  添加老师             teacher parameters                            Teacher
+    ?POST   /courses/1/teachers/1.json 把老师添加到课程
     #!PUT    /courses/1/teachers.json  修改老师             teacher parameters                            Teacher
     DELETE /courses/1/teachers/1.json 删除老师            id                                            Teacher
     
     GET    /courses/1/students.json  获得id=1课的所有学生 "students": [student, ...]                    Assistant
     #!POST   /courses/1/students.json  添加学生              
     DELETE /courses/1/students/1.json 删除学生
-    ?POST   /courses/1/students/1.json 添加学生
+    ?POST   /courses/1/students/1.json 添加学生到指定课程
     GET    /courses/1/assistants.json 类似上一个          "assistants": [assistant, ...]                Student
     #!POST   /courses/1/assistants.json 添加助教            id                                            Teacher
     #!DELETE /courses/1/assistants/1.json 删除助教
-    ?POST   /courses/1/assistants/1.json 添加助教            id                                            Teacher
+    ?POST   /courses/1/assistants/1.json 添加助教到指定课程                                              Teacher
     
     GET    /courses/1/lessons.json   获得id=1课所有实验课 "lessons": ["id": 1, "name": "xx"]            Student
     POST   /courses/1/lessons.json   向课程中添加实验课
@@ -135,20 +137,21 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     GET    /lessons/1.json           获得某门实验课的信息  "lesson": lesson                             Student
     #!GET    /lessons/1/comments.json  获得某门课程的评价    "comments": [comment, ...]                   Teacher
     ?GET    /lessons/1/comments.json  获得某门课程的评价    "lesson_comments": [lesson_comment, ...]                   Teacher
-
-    POST   /lessons/1/comments.json  添加学生对课程的评价  lesson comment parameters                    Student
+    POST   /lessons/1/comments.json  添加学生对课程的评价(当前登陆用户)  lesson comment parameters                    Student
     GET    /lessons/1/students/1/comments.json 查看助教对学生的评价 "student_comments": [student_comment,...] Student
     POST   /lessons/1/students/1/comments.json 助教对学生的评价 student comment parameters              Assistant
     GET    /lessons/1/students.json  某门实验课的到课学生列表 students id                               Teacher
     POST   /lessons/1/students/1.json 学生签到                                                          Student
+    GET    /lessons/1/files.json     获得该门实验课的简介文件
+    POST   /lessons/1/files.json     向课程中添加文件
     
     # namespace students
     # 学生相关
     GET    /students.json            获得（默认课程的）所有学生     "students": [{"id":1, "name": "xx"..] 
     GET    /students/1.json          获得id=1学生的信息   "student": [{"id":1, "name": "xx"}, ..]       Student
-    POST   /students.json            添加一个学生         student parameters                            Teacher
-    PUT    /students/1.json          修改学生             student parameters                            Student
-    DELETE /students/1.json          删除学生             id                                            Teacher
+    #!POST   /students.json            添加一个学生         student parameters                            Teacher
+    #!PUT    /students/1.json          修改学生             student parameters                            Student
+    #!DELETE /students/1.json          删除学生             id                                            Teacher
     
     # 文件相关
     GET    /students/1/files.json    获得学生所有文件列表   "files": [{"id":1, "type": "jpg", "path": "xx"}...]  Student 
@@ -177,20 +180,20 @@ POST /users/sign_in.json     utf8=✓&user[login]=xxx&user[password]=123&user[re
     POST   /teachers/1/courses.json   给老师添加课程        course parameters                            Teacher
     
     # 消息推送
-    GET    /students/1/messages.json  查询学生的所有消息     "messages": [message_id, ...]               Student
+    GET    /students/1/messages.json  查询学生的所有消息     "messages": [message ...]               Student
     POST   /courses/1/messages.json   发送消息到某门课的所有学生 "message": message                      Assistant
     
-    # App更新
-    GET    /android/current_version.json 得到当前最新版本号  {"version": "xx", "apk_path": "xx"}         Student
-    POST   /android/current_version.json 上传apk            version=xx apk                              Admin
-    
     # 文件相关
     GET    /files/1.json             得到该文件的信息        "file": file
-    POST   /files.json               上传文件                file parameters
+    POST   /files.json               上传文件                file parameters 
+    DELETE /files/1.json             删除自己上传的文件                                                  Creator           
     
     # 用户相关
     GET    /users/current.json       获取当前用户id          "id": "123"                                 Current User
     
+    # App更新
+    GET    /android/current_version.json 得到当前最新版本号  {"version": "xx", "apk_path": "xx"}         Student
+    POST   /android/current_version.json 上传apk            version=xx apk                              Admin
     
 Http Parameters/JSON对象格式
     
@@ -221,20 +224,20 @@ Http Parameters/JSON对象格式
             class=string,
             department=string,
             avator_path=string
-            
+             
     assistant id=int,
             name=string,
             phone,
             email=string,
             avator_path=string
             
-    lesson_remark id=int        // 学生对课程的评价
+    lesson_comment id=int        // 学生对课程的评价
             content=string
-            score=int
+            score=string
             
-    student_remark id=int      // 助教对学生的评价
+    student_comment id=int      // 助教对学生的评价
             content=string
-            score=int(0-10)
+            score=string(0-10)
             
     message id=int
             type=string(homework|notification),
@@ -292,11 +295,19 @@ REASON_TOKEN_NOT_MATCH = 'token_not_match'  // id和token不匹配或者id不存
             ,
             belongs_to course
             has_many attached_files, as: :files
-            has_many lesson_remarks,
-            has_many student_remarks
+            has_many lesson_comments,
+            has_many student_comments
     lesson_files id=int
             belongs_to lesson
             belongs_to file_resource
+    student_files id=int
+            belongs_to student
+            belongs_to file_resource
+            belongs_to lesson
+    assistant_files id=int
+            belongs_to assistant
+            belongs_to file_resource
+            belongs_to lesson
             
     user    id=int,
             name=string,
@@ -312,8 +323,8 @@ REASON_TOKEN_NOT_MATCH = 'token_not_match'  // id和token不匹配或者id不存
             has_many assisting_courses
             has_many learning_courses
             has_many lesson_statuses
-            has_many assistant_to_student_remarks, as: student_remarks, foreign_key: :creator_id
-            has_many from_assistant_remarks, as: student_remarks, foreign_key: :student_id
+            has_many assistant_to_student_comments, as: student_comments, foreign_key: :creator_id
+            has_many from_assistant_comments, as: student_comments, foreign_key: :student_id
             has_many posted_messages, as: :message, foreign_key: :creator_id
      
     teaching_course id=int
@@ -331,7 +342,7 @@ REASON_TOKEN_NOT_MATCH = 'token_not_match'  // id和token不匹配或者id不存
             belongs_to lesson
             timestamps
 
-    lesson_remark id=int,        // 学生对实验课的评价
+    lesson_comment id=int,        // 学生对实验课的评价
             content=string,
             score=int
             timestamps
@@ -339,7 +350,7 @@ REASON_TOKEN_NOT_MATCH = 'token_not_match'  // id和token不匹配或者id不存
             belongs_to creator, as: :user,
             belongs_to lesson
 
-    student_remark id=int,       // 助教对学生的评价
+    student_comment id=int,       // 助教对学生的评价
             content=string,
             score=int(0-10)
             timestamps
@@ -358,7 +369,6 @@ REASON_TOKEN_NOT_MATCH = 'token_not_match'  // id和token不匹配或者id不存
             belongs_to creator, as: :user
             belongs_to course
            
-            
     file    id=int,
             type=string,
             name=string,
@@ -367,7 +377,6 @@ REASON_TOKEN_NOT_MATCH = 'token_not_match'  // id和token不匹配或者id不存
             ,
             belongs_to creator, as: :user
             
-    
     android_app id=int,
             version=string,
             timestamps
diff --git a/app/controllers/android_apps_controller.rb b/app/controllers/android_apps_controller.rb
index 381c61f..0d178b8 100644
--- a/app/controllers/android_apps_controller.rb
+++ b/app/controllers/android_apps_controller.rb
@@ -1,2 +1,18 @@
 class AndroidAppsController < ApplicationController
+
+  # GET /android_apps/current_version.json
+  def current_version
+    @android_app = AndroidApp.order(:created_at).last
+    render json: { status: STATUS_SUCCESS, android_app: { version: @android_app.version, file_resource_id: @android_app.file_resource.id } }
+  end
+
+  # POST /android_apps/current_version.json
+  def create
+    if AndroidApp.create(params.require(:android_app).permit(:version, :file_resource_id))
+      json_successful
+    else
+      json_failed
+    end
+  end
+
 end
diff --git a/app/controllers/files_controller.rb b/app/controllers/files_controller.rb
index 4970192..dffa1d9 100644
--- a/app/controllers/files_controller.rb
+++ b/app/controllers/files_controller.rb
@@ -1,2 +1,34 @@
 class FilesController < ApplicationController
+  # GET /students/1/lessons/1/files.json
+  # GET /assistants/1/lessons/1/files.json
+  # GET /lessons/1/files.json
+  # GET /courses/1/files.json
+  def index
+    case
+      when params[:student_id] && params[:lesson_id]
+        @files = StudentFile.where(student_id: params[:student_id]).where(lesson_id: params[:lesson_id])
+      when params[:assistant_id] && params[:lesson_id]
+        @files = AssistantFile.where(assistant_id: params[:assistant_id]).where(lesson_id: params[:lesson_id])
+      when params[:lesson_id]
+        @files = Lesson.find(params[:lesson_id]).attached_files
+      when params[:course_id]
+        @files = Course.find(params[:course_id]).attached_files
+      else
+        json_failed
+    end
+  end
+
+  # GET /files/1.json
+  def show
+    @file = FileResource.find(params[:id])
+  end
+
+  def create
+    json_failed(REASON_NOT_IMPLEMENTED)
+  end
+
+  def destroy
+    json_failed(REASON_NOT_IMPLEMENTED)
+  end
+
 end
diff --git a/app/controllers/lesson_comments_controller.rb b/app/controllers/lesson_comments_controller.rb
index 7f01907..cecc897 100644
--- a/app/controllers/lesson_comments_controller.rb
+++ b/app/controllers/lesson_comments_controller.rb
@@ -2,12 +2,28 @@ class LessonCommentsController < ApplicationController
 
   # GET /lessons/1/comments.json
   def index
-
+    if params[:lesson_id]
+      @lesson_comments = Lesson.find(params[:lesson_id]).lesson_comments
+    else
+      json_failed(REASON_NOT_IMPLEMENTED)
+    end
   end
 
   # POST /lessons/1/comments.json
   def create
+    if check_current_user_student_of_lesson(params[:lesson_id])
+      lesson = Lesson.find(params[:lesson_id])
+      if lesson.lesson_comments.create(params.require(:lesson_comment).permit(:content, :score))
+        json_successful
+      else
+        json_failed
+      end
+    end
+  end
 
+  protected
+  def check_current_user_student_of_lesson(lesson)
+    true
   end
 
 end
diff --git a/app/controllers/messages_controller.rb b/app/controllers/messages_controller.rb
index a502791..003b505 100644
--- a/app/controllers/messages_controller.rb
+++ b/app/controllers/messages_controller.rb
@@ -1,2 +1,21 @@
 class MessagesController < ApplicationController
+  # GET /students/1/messages.json
+  def index
+    @messages = Message.none
+
+    courses = User.find(params[:student_id]).courses
+    courses.each do |course|
+      @messages += course.messages
+    end
+  end
+
+  # POST /courses/1/messages.json
+  def create
+    if Message.create(
+        params.require(:message).permit(:title, :type, :deadline, :content).merge(creator_id: current_user.id))
+      json_successful
+    else
+      json_failed
+    end
+  end
 end
diff --git a/app/controllers/student_comments_controller.rb b/app/controllers/student_comments_controller.rb
index 741c8b8..32d6e1e 100644
--- a/app/controllers/student_comments_controller.rb
+++ b/app/controllers/student_comments_controller.rb
@@ -1,2 +1,24 @@
 class StudentCommentsController < ApplicationController
+
+  # GET /lessons/1/students/1/comments.json
+  def index
+    if params[:lesson_id] && params[:student_id]
+      @student_comments = StudentComment.where(lesson_id: params[:lesson_id]).where(student_id: params[:student_id])
+    else
+      json_failed
+    end
+  end
+
+  # POST /lessons/1/students/1/comments.json
+  def create
+    if params[:lesson_id] && params[:student_id]
+      if StudentComment.create(
+          params.require(:student_comment).permit(:content, :score).merge({lesson_id: params[:lesson_id], student_id: params[:student_id], creator_id: current_user.id}))
+        json_successful
+      else
+        json_failed
+      end
+    end
+  end
+
 end
diff --git a/app/controllers/students_controller.rb b/app/controllers/students_controller.rb
index eafe432..dc0ea89 100644
--- a/app/controllers/students_controller.rb
+++ b/app/controllers/students_controller.rb
@@ -7,6 +7,8 @@ class StudentsController < ApplicationController
     check_token(params[:token], @student.id)
   end
 
+  # GET /lessons/1/students.json
+  # GET /courses/1/students.json
   def index
     course = Course.find(params[:course_id] || 1)
     participations = course.participations.where(role: ROLE_STUDENT)
@@ -16,7 +18,31 @@ class StudentsController < ApplicationController
     end
   end
 
+  # GET /students/1.json
   def show
+    @student = User.find(params[:id])
+  end
+
+  # POST /courses/1/students/1.json
+  def create
+    if params[:course_id] && params[:id]
+      if Course.find(params[:course_id]).students << User.find(params[:id])
+        json_successful
+      else
+        json_failed
+      end
+    else
+      json_failed
+    end
+  end
+
+  # DELETE /courses/1/students/1.json
+  def destroy
+    if params[:course_id] && params[:student_id]
+
+    else
+      json_failed
+    end
   end
 
   private
diff --git a/app/models/assistant_file.rb b/app/models/assistant_file.rb
new file mode 100644
index 0000000..16095ea
--- /dev/null
+++ b/app/models/assistant_file.rb
@@ -0,0 +1,5 @@
+class AssistantFile < ActiveRecord::Base
+  belongs_to :assistant, class_name: 'User'
+  belongs_to :lesson
+  belongs_to :file_resource
+end
\ No newline at end of file
diff --git a/app/models/course.rb b/app/models/course.rb
index f57483b..be0f601 100644
--- a/app/models/course.rb
+++ b/app/models/course.rb
@@ -13,4 +13,6 @@ class Course < ActiveRecord::Base
 
   has_many :messages
 
+  has_many :course_files
+  has_many :attached_files, through: :course_files, source: :file_resource
 end
diff --git a/app/models/course_file.rb b/app/models/course_file.rb
new file mode 100644
index 0000000..2dbad83
--- /dev/null
+++ b/app/models/course_file.rb
@@ -0,0 +1,5 @@
+class CourseFile < ActiveRecord::Base
+  belongs_to :course
+  belongs_to :file_resource
+  belongs_to :creator, class_name: 'User'
+end
\ No newline at end of file
diff --git a/app/models/lesson.rb b/app/models/lesson.rb
index 8fe6480..2cd94fb 100644
--- a/app/models/lesson.rb
+++ b/app/models/lesson.rb
@@ -7,7 +7,7 @@ class Lesson < ActiveRecord::Base
 
   belongs_to :course
   has_many :lesson_files
-  has_many :attached_files, through: :lesson_files, class_name: 'FileResource', foreign_key: :file_resource_id
-  has_many :lesson_remarks
-  has_many :student_remarks
+  has_many :attached_files, through: :lesson_files, source: :file_resource
+  has_many :lesson_comments
+  has_many :student_comments
 end
diff --git a/app/models/lesson_comment.rb b/app/models/lesson_comment.rb
new file mode 100644
index 0000000..207d305
--- /dev/null
+++ b/app/models/lesson_comment.rb
@@ -0,0 +1,6 @@
+class LessonComment < ActiveRecord::Base
+  belongs_to :creator, class_name: 'User'
+  belongs_to :lesson
+
+  # int score, text content, timestamps
+end
diff --git a/app/models/lesson_file.rb b/app/models/lesson_file.rb
index fdac1be..878694d 100644
--- a/app/models/lesson_file.rb
+++ b/app/models/lesson_file.rb
@@ -1,4 +1,5 @@
 class LessonFile < ActiveRecord::Base
   belongs_to :lesson
   belongs_to :file_resource
+  belongs_to :creator, class_name: 'User'
 end
diff --git a/app/models/lesson_remark.rb b/app/models/lesson_remark.rb
deleted file mode 100644
index c306364..0000000
--- a/app/models/lesson_remark.rb
+++ /dev/null
@@ -1,6 +0,0 @@
-class LessonRemark < ActiveRecord::Base
-  belongs_to :creator, class_name: 'User'
-  belongs_to :lesson
-
-  # int score, text content, timestamps
-end
diff --git a/app/models/student_comment.rb b/app/models/student_comment.rb
new file mode 100644
index 0000000..0065e73
--- /dev/null
+++ b/app/models/student_comment.rb
@@ -0,0 +1,6 @@
+class StudentComment < ActiveRecord::Base
+  belongs_to :creator, class_name: 'User'
+  belongs_to :student, class_name: 'User'
+  belongs_to :lesson
+  # string score, text content, timestamps
+end
diff --git a/app/models/student_file.rb b/app/models/student_file.rb
new file mode 100644
index 0000000..33c277a
--- /dev/null
+++ b/app/models/student_file.rb
@@ -0,0 +1,5 @@
+class StudentFile < ActiveRecord::Base
+  belongs_to :student, class_name: 'User'
+  belongs_to :lesson
+  belongs_to :file_resource
+end
\ No newline at end of file
diff --git a/app/models/student_remark.rb b/app/models/student_remark.rb
deleted file mode 100644
index 8b508ca..0000000
--- a/app/models/student_remark.rb
+++ /dev/null
@@ -1,6 +0,0 @@
-class StudentRemark < ActiveRecord::Base
-  belongs_to :creator, class_name: 'User'
-  belongs_to :student, class_name: 'User'
-  belongs_to :lesson
-  # string score, text content, timestamps
-end
diff --git a/app/models/user.rb b/app/models/user.rb
index dda7896..5b5b034 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -13,8 +13,8 @@ class User < ActiveRecord::Base
   has_many :assisting_courses
   has_many :learning_courses
   has_many :lesson_statuses
-  has_many :assistant_to_student_remarks, class_name: 'StudentRemark', foreign_key: :creator_id
-  has_many :from_assistant_remarks, class_name: 'StudentRemark', foreign_key: :student_id
+  has_many :assistant_to_student_comments, class_name: 'StudentComment', foreign_key: :creator_id
+  has_many :from_assistant_comments, class_name: 'StudentComment', foreign_key: :student_id
   has_many :posted_message, class_name: 'Message', foreign_key: :creator_id
 
   # the following 4 methods allow us to login with phone or email
@@ -27,8 +27,9 @@ class User < ActiveRecord::Base
   end
   def self.find_for_database_authentication(warden_conditions)
     conditions = warden_conditions.dup
-    if login = conditions.delete(:login)
-      where(conditions.to_hash).where(["lower(phone) = :value OR lower(email) = :value", { :value => login.downcase }]).first
+    login = conditions.delete(:login)
+    if login
+      where(conditions.to_hash).where(['lower(phone) = :value OR lower(email) = :value', { :value => login.downcase }]).first
     else
       where(conditions.to_hash).first
     end
diff --git a/app/views/files/index.json.jbuilder b/app/views/files/index.json.jbuilder
new file mode 100644
index 0000000..16b4fa5
--- /dev/null
+++ b/app/views/files/index.json.jbuilder
@@ -0,0 +1,6 @@
+json.status STATUS_SUCCESS
+json.files do
+  json.array! @files do |file|
+    json.extract! file, :id
+  end
+end
\ No newline at end of file
diff --git a/app/views/files/show.json.jbuilder b/app/views/files/show.json.jbuilder
new file mode 100644
index 0000000..1ddc3b1
--- /dev/null
+++ b/app/views/files/show.json.jbuilder
@@ -0,0 +1,6 @@
+json.status STATUS_SUCCESS
+json.file do
+  json.id   @file.id
+  json.name @file.name
+  json.path @file.path
+end
\ No newline at end of file
diff --git a/app/views/lesson_comments/index.json.jbuilder b/app/views/lesson_comments/index.json.jbuilder
new file mode 100644
index 0000000..8f00c9b
--- /dev/null
+++ b/app/views/lesson_comments/index.json.jbuilder
@@ -0,0 +1,8 @@
+json.status STATUS_SUCCESS
+json.lesson_comments do
+  json.array! @lesson_comments do |lesson_comment|
+    json.extract! lesson_comment, :id
+    json.exactly! lesson_comment, :content
+    json.exactly! lesson_comment, :score
+  end
+end
\ No newline at end of file
diff --git a/app/views/messages/index.json.jbuilder b/app/views/messages/index.json.jbuilder
new file mode 100644
index 0000000..713812b
--- /dev/null
+++ b/app/views/messages/index.json.jbuilder
@@ -0,0 +1,7 @@
+json.status STATUS_SUCCESS
+json.messages do
+  json.array!(@messages) do |message|
+    json.extract! message, :id
+    json.extract! message, :title
+  end
+end
diff --git a/app/views/student_comments/index.json.jbuilder b/app/views/student_comments/index.json.jbuilder
new file mode 100644
index 0000000..61bd932
--- /dev/null
+++ b/app/views/student_comments/index.json.jbuilder
@@ -0,0 +1,9 @@
+json.status STATUS_SUCCESS
+json.student_comments do
+  json.array!(@student_comments) do |student_comment|
+    json.extract! student_comment, :id
+    json.extract! student_comment, :content
+    json.extract! student_comment, :score
+  end
+end
+
diff --git a/config/routes.rb b/config/routes.rb
index 13d959f..d59ef29 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -18,6 +18,7 @@ Rails.application.routes.draw do
     resources :lessons, only: [:index, :create, :destroy]
     resources :teachers, only: [:index, :create, :destroy, :update]
     resources :messages, only: [:create]
+    resources :files, only: [:index, :create, :delete]
   end
 
   resources :lessons, only: [:show, :destroy] do
@@ -32,6 +33,8 @@ Rails.application.routes.draw do
 
     # for attendence
     resources :students, only: [:index, :create]
+
+    resources :files, only: [:index, :create, :delete]
   end
 
   resources :students, only: [:index, :show, :create, :update, :destroy] do
@@ -56,7 +59,7 @@ Rails.application.routes.draw do
 
   namespace :android do
     get 'current_version.json' => 'android_apps#current_version'
-    post 'current_version.json' => 'android_apps#current_version'
+    post 'current_version.json' => 'android_apps#create'
   end
 
   get 'test' => 'test#index'
diff --git a/db/migrate/20150930115150_add_lessons_studends_and_courses.rb b/db/migrate/20150930115150_add_lessons_studends_and_courses.rb
index d572d6a..74e58cc 100644
--- a/db/migrate/20150930115150_add_lessons_studends_and_courses.rb
+++ b/db/migrate/20150930115150_add_lessons_studends_and_courses.rb
@@ -22,8 +22,27 @@ class AddLessonsStudendsAndCourses < ActiveRecord::Migration
       t.timestamps
     end
 
+    create_table :course_files do |t|
+      t.integer :course_id
+      t.integer :creator_id
+      t.integer :file_resource_id
+    end
+
     create_table :lesson_files do |t|
       t.integer :lesson_id
+      t.integer :creator_id
+      t.integer :file_resource_id
+    end
+
+    create_table :student_files do |t|
+      t.integer :student_id
+      t.integer :lesson_id
+      t.integer :file_resource_id
+    end
+
+    create_table :assistant_files do |t|
+      t.integer :assistant_id
+      t.integer :lesson_id
       t.integer :file_resource_id
     end
 
@@ -55,7 +74,7 @@ class AddLessonsStudendsAndCourses < ActiveRecord::Migration
       t.timestamps
     end
 
-    create_table :lesson_remarks do |t|
+    create_table :lesson_comments do |t|
       t.text :content
       t.string :score
       t.integer :creator_id
@@ -63,7 +82,7 @@ class AddLessonsStudendsAndCourses < ActiveRecord::Migration
       t.timestamps
     end
 
-    create_table :student_remarks do |t|
+    create_table :student_comments do |t|
       t.text :content
       t.string :score
       t.integer :creator_id
@@ -73,7 +92,7 @@ class AddLessonsStudendsAndCourses < ActiveRecord::Migration
     end
 
     create_table :messages do |t|
-      t.string :type
+      t.string :message_type
       t.string :title
       t.datetime :deadline
       t.text :content
diff --git a/db/schema.rb b/db/schema.rb
index 856fa3b..6fdbdbc 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -20,11 +20,23 @@ ActiveRecord::Schema.define(version: 20151008120334) do
     t.datetime "updated_at"
   end
 
+  create_table "assistant_files", force: :cascade do |t|
+    t.integer "assistant_id"
+    t.integer "lesson_id"
+    t.integer "file_resource_id"
+  end
+
   create_table "assisting_courses", force: :cascade do |t|
     t.integer "user_id"
     t.integer "course_id"
   end
 
+  create_table "course_files", force: :cascade do |t|
+    t.integer "course_id"
+    t.integer "creator_id"
+    t.integer "file_resource_id"
+  end
+
   create_table "courses", force: :cascade do |t|
     t.string   "name",        null: false
     t.text     "description"
@@ -47,12 +59,7 @@ ActiveRecord::Schema.define(version: 20151008120334) do
     t.integer "course_id"
   end
 
-  create_table "lesson_files", force: :cascade do |t|
-    t.integer "lesson_id"
-    t.integer "file_resource_id"
-  end
-
-  create_table "lesson_remarks", force: :cascade do |t|
+  create_table "lesson_comments", force: :cascade do |t|
     t.text     "content"
     t.string   "score"
     t.integer  "creator_id"
@@ -61,6 +68,12 @@ ActiveRecord::Schema.define(version: 20151008120334) do
     t.datetime "updated_at"
   end
 
+  create_table "lesson_files", force: :cascade do |t|
+    t.integer "lesson_id"
+    t.integer "creator_id"
+    t.integer "file_resource_id"
+  end
+
   create_table "lesson_statuses", force: :cascade do |t|
     t.string   "score"
     t.integer  "user_id"
@@ -81,7 +94,7 @@ ActiveRecord::Schema.define(version: 20151008120334) do
   end
 
   create_table "messages", force: :cascade do |t|
-    t.string   "type"
+    t.string   "message_type"
     t.string   "title"
     t.datetime "deadline"
     t.text     "content"
@@ -101,7 +114,7 @@ ActiveRecord::Schema.define(version: 20151008120334) do
     t.string "name"
   end
 
-  create_table "student_remarks", force: :cascade do |t|
+  create_table "student_comments", force: :cascade do |t|
     t.text     "content"
     t.string   "score"
     t.integer  "creator_id"
@@ -111,6 +124,12 @@ ActiveRecord::Schema.define(version: 20151008120334) do
     t.datetime "updated_at"
   end
 
+  create_table "student_files", force: :cascade do |t|
+    t.integer "student_id"
+    t.integer "lesson_id"
+    t.integer "file_resource_id"
+  end
+
   create_table "teaching_courses", force: :cascade do |t|
     t.integer "user_id"
     t.integer "course_id"
diff --git a/test/controllers/files_controller_test.rb b/test/controllers/files_controller_test.rb
index 225ef92..a99e38d 100644
--- a/test/controllers/files_controller_test.rb
+++ b/test/controllers/files_controller_test.rb
@@ -1,7 +1,65 @@
 require 'test_helper'
 
 class FilesControllerTest < ActionController::TestCase
-  # test "the truth" do
-  #   assert true
-  # end
+
+  # GET /students/1/lessons/1/files.json
+  test 'should get student files on lesson' do
+    student = User.find_by_name('betty')
+    lesson = Lesson.find_by_name('exp1')
+
+    get :index, format: :json, student_id: student.id, lesson_id: lesson.id
+    json = JSON.parse(response.body)
+
+    assert_equal STATUS_SUCCESS, json['status']
+    assert_not_nil json['files']
+    assert json['files'].count > 0
+  end
+
+  # GET /assistants/1/lessons/1/files.json
+  test 'should get assistant files on lesson' do
+    assistant = User.find_by_name('alex')
+    lesson = Lesson.find_by_name('exp1')
+
+    get :index, format: :json, assistant_id: assistant.id, lesson_id: lesson.id
+    json = JSON.parse(response.body)
+
+    assert_equal STATUS_SUCCESS, json['status']
+    assert_not_nil json['files']
+    assert json['files'].count > 0
+  end
+
+  # GET /lessons/1/files.json
+  test 'should get lesson files' do
+    lesson = Lesson.find_by_name('exp1')
+
+    get :index, format: :json, lesson_id: lesson.id
+    json = JSON.parse(response.body)
+
+    assert_equal STATUS_SUCCESS, json['status']
+    assert_not_nil json['files']
+    assert json['files'].count > 0
+  end
+
+  # GET /courses/1/files.json
+  test 'should get course files' do
+    course = Course.find_by_name('Operation System')
+
+    get :index, format: :json, course_id: course.id
+    json = JSON.parse(response.body)
+
+    assert_equal STATUS_SUCCESS, json['status']
+    assert_not_nil json['files']
+    assert json['files'].count > 0
+  end
+
+  # GET /files/1.json
+  test 'should get file by id' do
+    file = FileResource.first
+    get :show, format: :json, id: file.id
+    json = JSON.parse(response.body)
+
+    assert_equal STATUS_SUCCESS, json['status']
+    assert_not_nil json['file']
+  end
+
 end
diff --git a/test/controllers/lesson_comments_controller_test.rb b/test/controllers/lesson_comments_controller_test.rb
index 1b48798..a902b6f 100644
--- a/test/controllers/lesson_comments_controller_test.rb
+++ b/test/controllers/lesson_comments_controller_test.rb
@@ -1,6 +1,8 @@
 require 'test_helper'
 
 class LessonCommentsControllerTest < ActionController::TestCase
+  include Devise::TestHelpers
+
   test 'should get comments by lesson id' do
     get :index, format: :json, lesson_id: Lesson.first.id
     json = JSON.parse(response.body)
@@ -9,4 +11,19 @@ class LessonCommentsControllerTest < ActionController::TestCase
     assert json['lesson_comments'].count > 0
   end
 
+  test 'should add comment to lesson by student' do
+    student = User.find_by_name('betty')
+    sign_in student
+
+    assert_difference 'LessonComment.count' do
+      post :create, format: :json, lesson_id: Lesson.first.id, lesson_comment: {
+               content: 'bad',
+               score: '5'
+                  }
+    end
+
+    json = JSON.parse(response.body)
+    assert_equal STATUS_SUCCESS, json['status']
+  end
+
 end
diff --git a/test/controllers/messages_controller_test.rb b/test/controllers/messages_controller_test.rb
index 47ce261..1cbc4d0 100644
--- a/test/controllers/messages_controller_test.rb
+++ b/test/controllers/messages_controller_test.rb
@@ -1,7 +1,33 @@
 require 'test_helper'
 
 class MessagesControllerTest < ActionController::TestCase
-  # test "the truth" do
-  #   assert true
-  # end
+  include Devise::TestHelpers
+
+  test 'should get message by students' do
+    student = User.find_by_name('alex')
+    get :index, format: :json, student_id: student.id
+    json = JSON.parse(response.body)
+    assert_equal STATUS_SUCCESS, json['status']
+    assert_not_nil json['messages']
+    assert json['messages'].count > 0
+  end
+
+  test 'should add message by teacher' do
+    teacher = User.find_by_name('alex')
+    course = Course.first
+    sign_in teacher
+
+    assert_difference 'Message.count' do
+      post :create, format: :json, course_id: course.id, message: {
+               message_type: 'homework',
+               title: 'good news',
+               deadline: Time.now + 24.hours,
+               content: 'hahaha'
+                  }
+    end
+
+    json = JSON.parse(response.body)
+    assert_equal STATUS_SUCCESS, json['status']
+  end
+
 end
diff --git a/test/controllers/student_comments_controller_test.rb b/test/controllers/student_comments_controller_test.rb
index 3860d99..abbb80e 100644
--- a/test/controllers/student_comments_controller_test.rb
+++ b/test/controllers/student_comments_controller_test.rb
@@ -1,7 +1,35 @@
 require 'test_helper'
 
 class StudentCommentsControllerTest < ActionController::TestCase
-  # test "the truth" do
-  #   assert true
-  # end
+
+  include Devise::TestHelpers
+
+  test 'should get student comment on lesson' do
+    student = User.find_by_name('betty')
+    lesson = Lesson.find_by_name('exp1')
+
+    get :index, format: :json, student_id: student.id, lesson_id: lesson.id
+    json = JSON.parse(response.body)
+    assert_equal STATUS_SUCCESS, json['status']
+    assert_not_nil json['student_comments']
+    assert json['student_comments'].count
+  end
+
+  test 'should add student comment on lesson' do
+    student = User.find_by_name('betty')
+    lesson = Lesson.find_by_name('exp1')
+    creator = User.find_by_name('alex')
+    sign_in creator
+
+    assert_difference 'StudentComment.count' do
+      post :create, format: :json, student_id: student.id, lesson_id: lesson.id, student_comment: {
+               content: 'haha',
+               score: '123'
+                  }
+    end
+
+    json = JSON.parse(response.body)
+    assert_equal STATUS_SUCCESS, json['status']
+  end
+
 end
diff --git a/test/fixtures/assistant_files.yml b/test/fixtures/assistant_files.yml
new file mode 100644
index 0000000..e6be884
--- /dev/null
+++ b/test/fixtures/assistant_files.yml
@@ -0,0 +1,4 @@
+alex_file:
+  assistant: alex
+  lesson: exp1
+  file_resource: pdf
\ No newline at end of file
diff --git a/test/fixtures/course_files.yml b/test/fixtures/course_files.yml
new file mode 100644
index 0000000..4677a20
--- /dev/null
+++ b/test/fixtures/course_files.yml
@@ -0,0 +1,4 @@
+os_file:
+  course: os
+  file_resource: pdf_file
+  creator: alex
\ No newline at end of file
diff --git a/test/fixtures/file_resources.yml b/test/fixtures/file_resources.yml
index 937a0c0..2b641e5 100644
--- a/test/fixtures/file_resources.yml
+++ b/test/fixtures/file_resources.yml
@@ -1,11 +1,4 @@
-# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-# This model initially had no columns defined.  If you add columns to the
-# model remove the '{}' from the fixture names and add the columns immediately
-# below each fixture, per the syntax in the comments below
-#
-one: {}
-# column: value
-#
-two: {}
-#  column: value
+pdf_file:
+  name: pdf
+  path: file.pdf
+  creator: alex
\ No newline at end of file
diff --git a/test/fixtures/lesson_comments.yml b/test/fixtures/lesson_comments.yml
new file mode 100644
index 0000000..def8539
--- /dev/null
+++ b/test/fixtures/lesson_comments.yml
@@ -0,0 +1,6 @@
+betty_comment_os_first_lesson:
+  content: good
+  score: 12
+  lesson: exp1
+  creator: alex
+
diff --git a/test/fixtures/lesson_files.yml b/test/fixtures/lesson_files.yml
index 937a0c0..2e5d44a 100644
--- a/test/fixtures/lesson_files.yml
+++ b/test/fixtures/lesson_files.yml
@@ -1,11 +1,4 @@
-# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-# This model initially had no columns defined.  If you add columns to the
-# model remove the '{}' from the fixture names and add the columns immediately
-# below each fixture, per the syntax in the comments below
-#
-one: {}
-# column: value
-#
-two: {}
-#  column: value
+exp1_file1:
+  lesson: exp1
+  file_resource: pdf_file
+  creator: alex
\ No newline at end of file
diff --git a/test/fixtures/lesson_remarks.yml b/test/fixtures/lesson_remarks.yml
deleted file mode 100644
index 937a0c0..0000000
--- a/test/fixtures/lesson_remarks.yml
+++ /dev/null
@@ -1,11 +0,0 @@
-# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-# This model initially had no columns defined.  If you add columns to the
-# model remove the '{}' from the fixture names and add the columns immediately
-# below each fixture, per the syntax in the comments below
-#
-one: {}
-# column: value
-#
-two: {}
-#  column: value
diff --git a/test/fixtures/lessons.yml b/test/fixtures/lessons.yml
index 8b4eb9d..e4bb83d 100644
--- a/test/fixtures/lessons.yml
+++ b/test/fixtures/lessons.yml
@@ -1,7 +1,7 @@
 
 exp1:
   course: os
-  name: test lesson 1
+  name: exp1
   start_time: 2015/10/10 10:20:30
   end_time: 2015/10/10 10:20:30
   location: here
diff --git a/test/fixtures/messages.yml b/test/fixtures/messages.yml
index 937a0c0..db5ce9f 100644
--- a/test/fixtures/messages.yml
+++ b/test/fixtures/messages.yml
@@ -1,11 +1,7 @@
-# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-# This model initially had no columns defined.  If you add columns to the
-# model remove the '{}' from the fixture names and add the columns immediately
-# below each fixture, per the syntax in the comments below
-#
-one: {}
-# column: value
-#
-two: {}
-#  column: value
+alex_to_os:
+  creator: alex
+  course: os
+  message_type: homework
+  title: hello
+  deadline: <%= Time.now + 24.hours %>
+  content: haha123
diff --git a/test/fixtures/student_comments.yml b/test/fixtures/student_comments.yml
new file mode 100644
index 0000000..5fe839e
--- /dev/null
+++ b/test/fixtures/student_comments.yml
@@ -0,0 +1,6 @@
+alex_comment_betty:
+  content: good
+  score: 100
+  creator: alex
+  student: betty
+  lesson: exp1
diff --git a/test/fixtures/student_files.yml b/test/fixtures/student_files.yml
new file mode 100644
index 0000000..b0a8622
--- /dev/null
+++ b/test/fixtures/student_files.yml
@@ -0,0 +1,4 @@
+betty_file:
+  student: betty
+  file_resource: pdf
+  lesson: exp1
\ No newline at end of file
diff --git a/test/fixtures/student_remarks.yml b/test/fixtures/student_remarks.yml
deleted file mode 100644
index 937a0c0..0000000
--- a/test/fixtures/student_remarks.yml
+++ /dev/null
@@ -1,11 +0,0 @@
-# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-# This model initially had no columns defined.  If you add columns to the
-# model remove the '{}' from the fixture names and add the columns immediately
-# below each fixture, per the syntax in the comments below
-#
-one: {}
-# column: value
-#
-two: {}
-#  column: value
diff --git a/test/models/lesson_remark_test.rb b/test/models/lesson_remark_test.rb
deleted file mode 100644
index d71f4e7..0000000
--- a/test/models/lesson_remark_test.rb
+++ /dev/null
@@ -1,7 +0,0 @@
-require 'test_helper'
-
-class LessonRemarkTest < ActiveSupport::TestCase
-  # test "the truth" do
-  #   assert true
-  # end
-end
diff --git a/test/models/student_remark_test.rb b/test/models/student_remark_test.rb
deleted file mode 100644
index f650a5f..0000000
--- a/test/models/student_remark_test.rb
+++ /dev/null
@@ -1,7 +0,0 @@
-require 'test_helper'
-
-class StudentRemarkTest < ActiveSupport::TestCase
-  # test "the truth" do
-  #   assert true
-  # end
-end
-- 
1.9.1

